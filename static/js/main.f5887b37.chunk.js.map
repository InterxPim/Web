{"version":3,"sources":["../node_modules/typescript/lib sync","components/Footer/Footer.js","components/Icons/Icons.js","assets/img/logo.png","components/Icons/IconBox.js","components/Separator/Separator.js","components/Sidebar/Sidebar.js","components/Card/Card.js","components/Card/CardHeader.js","components/Card/CardBody.js","components/Tables/TablePatient.js","views/Dashboard/Tables.js","views/Dashboard/Profile.js","assets/img/avatars/avatar2.png","assets/img/avatars/avatar3.png","assets/img/avatars/avatar4.png","assets/img/avatars/avatar5.png","assets/img/avatars/avatar6.png","assets/img/ImageArchitect1.png","assets/img/ImageArchitect2.png","assets/img/ImageArchitect3.png","assets/img/ProfileBackground.png","views/Dashboard/ProfileEmploye.js","views/Dashboard/ProfilePatient.js","components/Tables/Table.js","views/Dashboard/Reservation.js","components/Tables/TableP.js","views/Dashboard/ReservationP.js","components/Tables/TablesTableRowHospital.js","views/Dashboard/Hospitals.js","components/Tables/TablesTableRow.js","views/Dashboard/Users.js","views/Dashboard/PatientH.js","views/Dashboard/UsersSA.js","variables/charts.js","components/Charts/BarChart.js","components/Charts/LineChart.js","components/Tables/TimelineRow.js","views/Dashboard/Dashboard.js","routes.js","assets/img/BgSignUp.png","views/Pages/SignIn.js","views/Pages/constants.js","assets/img/BgSignUpd.png","views/Pages/SignUp.js","views/Pages/ForgetPassword.js","routes2.js","theme/styles.js","theme/foundations/breakpoints.js","theme/components/button.js","theme/additions/card/Card.js","theme/additions/card/CardBody.js","theme/additions/card/CardHeader.js","theme/additions/layout/MainPanel.js","theme/additions/layout/PanelContent.js","theme/additions/layout/PanelContainer.js","theme/theme.js","theme/foundations/fonts.js","theme/components/badge.js","theme/components/link.js","theme/components/drawer.js","components/Configurator/Configurator.js","assets/img/avatars/avatar1.png","components/Navbars/AdminNavbarLinks.js","components/Navbars/AdminNavbar.js","components/FixedPlugin/FixedPlugin.js","components/Layout/MainPanel.js","components/Layout/PanelContainer.js","components/Layout/PanelContent.js","components/RTLProvider/RTLProvider.js","index.js","layouts/Auth.js","layouts/Admin.js","layouts/RTL.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Footer","props","flexDirection","base","xl","alignItems","justifyContent","px","pb","color","textAlign","mb","Date","getYear","as","document","documentElement","dir","href","target","display","me","md","CreativeTimLogo","createIcon","displayName","viewBox","path","d","fill","height","width","xmlns","version","stroke","transform","DocumentIcon","rx","x1","y1","x2","y2","gradientUnits","offset","GlobeIcon","PersonIcon","cx","cy","r","ProfileIcon","RocketIcon","SettingsIcon","WalletIcon","IconBox","children","rest","borderRadius","Separator","variant","h","w","bg","SidebarResponsive","location","useLocation","React","useState","state","mainPanel","useRef","logoText","routes","links","createLinks","activeBg","useColorModeValue","inactiveBg","activeColor","inactiveColor","map","prop","key","redirect","category","fontWeight","mx","ps","sm","py","rtlName","name","views","to","layout","routeName","pathname","boxSize","_hover","_active","borderColor","_focus","boxShadow","icon","Icon","my","fontSize","hamburgerColor","secondary","brand","pt","process","lineHeight","mt","useDisclosure","isOpen","onOpen","onClose","btnRef","ref","colorScheme","onClick","placement","finalFocusRef","maxW","ms","direction","Sidebar","variantChange","sidebarVariant","sidebarActiveShadow","transition","sidebarBg","sidebarRadius","sidebarMargins","sessionStorage","getItem","src","logo","spacing","position","pe","m","Card","styles","useStyleConfig","__css","CardHeader","CardBody","TablesTableRow","handleSubmit","event","a","preventDefault","patient","_id","firstname","lastname","email","birthday","phone","adresse","GroupeSanguine","situationF","axios","put","then","res","window","reload","catch","error","alert","password","modalIsOpen","this","setState","evt","field","value","id1","minWidth","pl","align","flexWrap","p","openModal","cursor","FaPencilAlt","closeModal","onSubmit","justify","padding","pointerEvents","defaultValue","onChange","handleChange","placeholder","size","type","mr","Component","Patients","sendemail","sendsms","date","heure","hospital","user","post","search","resdataR","resdataP","liste","l","la","get","data","checked","console","log","forEach","elementr","element","push","Array","from","Set","overflowX","FaPlus","roww","focusBorderColor","selected","Profile","textColor","bgProfile","borderProfileColor","emailColor","history","useHistory","setEmail","nomHospital","setNomHospital","addresseHospital","setAddresseHospital","phoneHospital","setPhoneHospital","faxHospital","setFaxHospital","debutHoraire","setDebutHoraire","finHoraire","setFinHoraire","Name","emailH","Addresse","Phone","Fix","dHoraire","fHoraire","bgPosition","bgRepeat","maxH","backdropFilter","border","lg","maxWidth","templateColumns","gap","ml","Axios","heureDebut","heureFin","response","message","setLoginStatus","role","setItem","FaPenFancy","setFirstName","setLastName","age","setAge","setPhone","gender","setGender","setsituationF","JSON","parse","NameE","PrenomE","emailE","AgeE","PhoneE","genderE","situationFE","idE","useEffect","setBirthday","setGroupeSanguine","setAdresse","setsendsms","setsendemail","sendsms1","sendemail1","NameP","PrenomP","emailP","BirthdayP","PhoneP","adresseP","situationFP","GroupeSanguineP","disabled","generateQrCode","QRCode","toDataURL","generate","imageUrl","delete","reservation","result","etat","handleSubmit1","prelevement","idp","numeroD","note","codeGen","now","id2","modalIsOpenP","modalIsOpenQ","print","moment","utc","format","toString","initialFocusRef","closeOnBlur","FaTrashAlt","openModal2","GiLoveInjection","closeModalP","readOnly","closeModalQ","el","componentRef","trigger","content","Tables","keyWord","localStorage","filter","datta","toLowerCase","includes","length","statuuus","etata","resdata","row","title","start","end","resdataU","elemtentp","localizer","momentLocalizer","style","marginLeft","events","startAccessor","eventPropGetter","isSelected","backgroundColor","colorRendering","margin","Table","resdataH","TablesTableRowHospital","Hospitals","TablesTableRowUser","Users","PatientsH","UsersSA","barChartOptions","chart","toolbar","show","tooltip","fontFamily","undefined","onDatasetHover","theme","xaxis","categories","labels","colors","axisBorder","axisTicks","yaxis","grid","dataLabels","enabled","plotOptions","bar","columnWidth","responsive","breakpoint","options","lineChartData","lineChartOptions","curve","legend","strokeDashArray","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","BarChart","chartData","chartOptions","series","TimelineRow","Dashboard","hosdata","pasdata","columns","minH","dashRoutes","component","Resevation","ProfileE","Hospital","ResevationP","ProfileP","SignIn","setPassword","useToast","require","setShow","isMail","match","userSelect","background","right","top","bgImage","signInImage","bgSize","borderBottomLeftRadius","L","iconSize","iconAnchor","popupAnchor","iconUrl","shadowUrl","SignUp","register","latitude","longitude","openModal1","conf","modalIsOpen1","prevProps","prevState","on","latlng","lat","lng","bind","coords","alignSelf","justifySelf","overflow","left","zIndex","BgSignUp","Signin","MapContainer","className","center","zoom","scrollWheelZoom","whenReady","TileLayer","attribution","url","Marker","closeModal1","mask","handleClick","OldPassword","setOldPassword","NewPassword","setNewPassword","oldPwd","newpassword","ForgetPassword","secondaryNavbar","globalStyles","gray","global","body","mode","html","breakpoints","createBreakpoints","buttonStyles","components","Button","variants","baseStyle","CardComponent","wordWrap","backgroundClip","panel","colorMode","defaultProps","CardBodyComponent","CardHeaderComponent","MainPanelComponent","MainPanel","float","maxHeight","transitionDuration","transitionProperty","transitionTimingFunction","main","rtl","PanelContentComponent","PanelContent","PanelContainerComponent","PanelContainer","minHeight","extendTheme","Badge","sizes","textTransform","Link","decoration","textDecoration","Drawer","bgColor","Configurator","fixed","isChecked","useColorMode","toggleColorMode","settingsRef","blockScrollOnMount","HeaderLinks","navbarIcon","clear","rightIcon","leftIcon","AdminNavbar","scrolled","setScrolled","brandText","mainText","secondaryText","navbarPosition","navbarFilter","navbarBackdrop","navbarShadow","navbarBg","navbarBorder","secondaryMargin","paddingX","addEventListener","scrollY","borderWidth","borderStyle","transitionDelay","FixedPlugin","onSwitch","bgButton","bottom","stylisPlugins","ltr","RtlProvider","cache","createCache","ReactDOM","render","wrapper","createRef","navRef","resetCss","getRoutes","collapse","setSidebarVariant","setFixed","getActiveNavbar","i","categoryActiveNavbar","indexOf","getActiveRoute","activeRoute","collapseActiveRoute","categoryActiveRoute","onOpaque","onTransparent","getElementById"],"mappings":"yHAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,gQCHV,SAASC,EAAOC,GAE7B,OACE,eAAC,IAAD,CACEC,cAAe,CACbC,KAAM,SACNC,GAAI,OAENC,WAAY,CACVF,KAAM,SACNC,GAAI,SAENE,eAAe,gBACfC,GAAG,OACHC,GAAG,OAXL,UAaE,eAAC,IAAD,CACEC,MAAM,WACNC,UAAW,CACTP,KAAM,SACNC,GAAI,SAENO,GAAI,CAAER,KAAM,OAAQC,GAAI,OAN1B,kBAQU,MAAO,IAAIQ,MAAOC,UAR5B,IAQwC,IACtC,cAAC,IAAD,CAAMC,GAAG,OAAT,SACoC,QAAjCC,SAASC,gBAAgBC,IACtB,iGACA,+BAEN,cAAC,IAAD,CAEER,MAAM,UACNS,KAAK,+BACLC,OAAO,SAJT,SAMoC,QAAjCJ,SAASC,gBAAgBC,IACtB,UACA,YAE4B,QAAjCF,SAASC,gBAAgBC,IACtB,sGACA,uBAEN,cAAC,IAAD,CAAMG,QAAQ,OAAd,SACE,cAAC,IAAD,CACEC,GAAI,CACFlB,KAAM,OACNmB,GAAI,QAHR,SAME,cAAC,IAAD,CAAMb,MAAM,WAAWS,KAAK,+BAA5B,UACGH,SAASC,gBAAgBC,IACtB,mB,sDCUHM,GAlEcC,YAAW,CACpCC,YAAa,cACbC,QAAS,YACTC,KACE,oBAAG,YAAU,cAAb,UACE,sBACEC,EAAE,gJACFC,KAAK,YAEP,sBACED,EAAE,46CACFC,KAAK,iBAMgBL,YAAW,CACtCC,YAAa,gBACbC,QAAS,YACTC,KACE,8BACE,sBACEC,EAAE,0JACFC,KAAK,YAEP,sBACED,EAAE,0KACFC,KAAK,iBAMWL,YAAW,CACjCC,YAAa,WACbC,QAAS,YACTC,KACE,sBACEE,KAAK,eACLD,EAAE,6YAKiBJ,YAAW,CAClCC,YAAa,YACbC,QAAS,YACTC,KACE,8BACE,4BACE,sBAAME,KAAK,OAAOC,OAAO,KAAKC,MAAM,SAEtC,4BACE,4BACE,4BACE,sBACEF,KAAK,eACLD,EAAE,2HAQeJ,YAAW,CACxCC,YAAa,kBACbC,QAAS,cACTC,KACE,mBACEK,MAAM,6BACND,MAAM,OACND,OAAO,OACPG,QAAQ,MAJV,SAME,mBACElC,GAAG,0BACHmC,OAAO,OACP,eAAa,IACbL,KAAK,OACL,YAAU,UALZ,SAOE,oBACE9B,GAAG,OACHoC,UAAU,kCACVN,KAAK,eACL,YAAU,UAJZ,UAME,sBACED,EAAE,2pCACF7B,GAAG,UAEL,sBACE6B,EAAE,kgBACF7B,GAAG,SAEL,sBACE6B,EAAE,odACF7B,GAAG,SAEL,sBACE6B,EAAE,skBACF7B,GAAG,mBAuGFqC,GApFaZ,YAAW,CACnCC,YAAa,aACbC,QAAS,YACTC,KACE,sBACEE,KAAK,eACLD,EAAE,iVAKqBJ,YAAW,CACtCC,YAAa,gBACbC,QAAS,eACTC,KACE,oBAAGI,MAAM,MAAMD,OAAO,MAAMJ,QAAQ,cAAcG,KAAK,OAAvD,UACE,oBAAG,YAAU,cAAb,UACE,sBACED,EAAE,yZACFC,KAAK,iBAEP,sBACED,EAAE,sQACFC,KAAK,iBAEP,sBACED,EAAE,2rBACFC,KAAK,iBAEP,sBACED,EAAE,+IACFC,KAAK,iBAEP,sBACED,EAAE,yPACFC,KAAK,iBAEP,sBACED,EAAE,wsBACFC,KAAK,iBAEP,sBAAME,MAAM,MAAMD,OAAO,MAAMO,GAAG,QAAQR,KAAK,YAC/C,sBACED,EAAE,iYACFC,KAAK,aAGT,iCACE,iCACE9B,GAAG,gBACHuC,GAAG,QACHC,GAAG,IACHC,GAAG,QACHC,GAAG,MACHC,cAAc,iBANhB,UAQE,sBAAM,aAAW,YACjB,sBAAMC,OAAO,IAAI,aAAW,eAE9B,0BAAU5C,GAAG,QAAb,SACE,sBAAMgC,MAAM,UAAUD,OAAO,MAAMD,KAAK,oBAOhBL,YAAW,CAC3CC,YAAa,gBACbC,QAAS,eACTC,KACE,oBAAGE,KAAK,OAAR,UACE,sBACED,EAAE,60DACFC,KAAK,SAEP,sBACED,EAAE,8OACFC,KAAK,iBAMeL,YAAW,CACrCC,YAAa,eACbC,QAAS,YACTC,KACE,8BACE,sBACEE,KAAK,eACLD,EAAE,sNAEJ,sBACEC,KAAK,eACLD,EAAE,kHAMGgB,EAAYpB,YAAW,CAClCC,YAAa,YACbC,QAAS,YACTC,KACE,8BACE,sBACEO,OAAO,eACPL,KAAK,cACLD,EAAE,8DACF,eAAa,MACb,oBAAkB,OAEpB,sBACEM,OAAO,eACPL,KAAK,cACLD,EAAE,uIACF,eAAa,MACb,oBAAkB,OAEpB,sBACEM,OAAO,eACPL,KAAK,cACLD,EAAE,kFAEJ,sBACEM,OAAO,eACPL,KAAK,cACLD,EAAE,gKACF,eAAa,MACb,iBAAe,QACf,kBAAgB,UAElB,sBACEM,OAAO,eACPL,KAAK,cACLD,EAAE,uCACF,eAAa,MACb,oBAAkB,YA0GbiB,GApGWrB,YAAW,CACjCC,YAAa,WACbC,QAAS,YACTC,KACE,sBACEE,KAAK,eACLD,EAAE,kkBAKgBJ,YAAW,CACjCC,YAAa,WACbC,QAAS,YACTC,KACE,8BACE,sBACEE,KAAK,eACLD,EAAE,0SAEJ,sBACEC,KAAK,eACLD,EAAE,2TAMkBJ,YAAW,CACrCC,YAAa,eACbC,QAAS,YACTC,KACE,oBAAG,YAAU,cAAb,UACE,sBACEC,EAAE,iJACFC,KAAK,YAEP,sBACED,EAAE,izBACFC,KAAK,cAMWL,YAAW,CACjCC,YAAa,WACbC,QAAS,YACTC,KACE,oBAAG,YAAU,cAAb,UACE,sBACEC,EAAE,sNACFC,KAAK,YAEP,sBACED,EAAE,0GACFC,KAAK,wBAEP,sBACED,EAAE,8GACFC,KAAK,6BAMiBL,YAAW,CACvCC,YAAa,iBACbC,QAAS,YACTC,KACE,sBACEI,MAAM,KACND,OAAO,KACPJ,QAAQ,YACRG,KAAK,OACLG,MAAM,6BALR,UAOE,wBAAQc,GAAG,UAAUC,GAAG,UAAUC,EAAE,UAAUnB,KAAK,YACnD,wBAAQiB,GAAG,UAAUC,GAAG,UAAUC,EAAE,UAAUnB,KAAK,iBAK/BL,YAAW,CACnCC,YAAa,aACbC,QAAS,YACTC,KACE,8BACE,sBACEE,KAAK,eACLD,EAAE,4PAEJ,sBACEC,KAAK,eACLD,EAAE,yNAMgBJ,YAAW,CACnCC,YAAa,aACbC,QAAS,YACTC,KACE,sBACEE,KAAK,eACLD,EAAE,kcAKKqB,EAAczB,YAAW,CACpCC,YAAa,cACbC,QAAS,YACTC,KACE,8BACE,sBAAMC,EAAE,kBAAkBC,KAAK,gBAC/B,sBACEA,KAAK,eACLD,EAAE,sJAMGsB,EAAa1B,YAAW,CACnCC,YAAa,aACbC,QAAS,YACTC,KACE,8BACE,sBACEE,KAAK,eACLD,EAAE,8gBAEJ,sBACEC,KAAK,eACLD,EAAE,gRAMGuB,EAAe3B,YAAW,CACrCC,YAAa,eACbC,QAAS,YAETC,KACE,8BACE,sBAAMC,EAAE,kBAAkBC,KAAK,SAC/B,sBACEA,KAAK,eACLD,EAAE,o2BAmEGwB,GA7DY5B,YAAW,CAClCC,YAAa,YACbC,QAAS,YACTC,KACE,oBAAG,YAAU,cAAc,YAAU,UAAU,YAAU,UAAzD,UACE,sBACEC,EAAE,kOACFC,KAAK,YAEP,sBACED,EAAE,6NACFC,KAAK,YAEP,sBACED,EAAE,kPACFC,KAAK,YAEP,sBACED,EAAE,sOACFC,KAAK,iBAMcL,YAAW,CACpCC,YAAa,cACbC,QAAS,YACTC,KACE,mBAAG,YAAU,cAAb,SACE,sBACEC,EAAE,giBACFC,KAAK,gBAMcL,YAAW,CAEpCC,YAAa,YACbC,QAAS,YACTC,KACE,sBACEE,KAAK,eACLD,EAAE,kdAKiBJ,YAAW,CAClCC,YAAa,YACbC,QAAS,YACTC,KACE,sBACEE,KAAK,eACLD,EAAE,0mBAKkBJ,YAAW,CACnCC,YAAa,aACbC,QAAS,YACTC,KACE,8BACE,sBACEE,KAAK,eACLD,EAAE,oWAEJ,sBACEC,KAAK,eACLD,EAAE,yK,GAMcJ,YAAW,CACjCC,YAAa,WACbC,QAAS,YACTC,KACE,qBACEI,MAAM,KACND,OAAO,KACPJ,QAAQ,WACRG,KAAK,OACLG,MAAM,6BALR,SAOE,sBACE,YAAU,UACV,YAAU,UACVJ,EAAE,4mCACFC,KAAK,gB,wBCtgBE,MAA0B,iC,eCG1B,SAASwB,EAAQpD,GAC9B,IAAQqD,EAAsBrD,EAAtBqD,SAAaC,EAArB,YAA8BtD,EAA9B,GAEA,OACE,cAAC,IAAD,yBACEI,WAAY,SACZC,eAAgB,SAChBkD,aAAc,QACVD,GAJN,aAMGD,K,6BCVA,SAASG,EAAUxD,GACeA,EAA/ByD,QAAR,IAAiBJ,EAAsBrD,EAAtBqD,SAAaC,EAA9B,YAAuCtD,EAAvC,GACA,OACE,cAAC,IAAD,yBACE0D,EAAE,MACFC,EAAE,OACFC,GAAG,kGACCN,GAJN,aAMGD,K,4BCsRA,SAASQ,EAAkB7D,GAEhC,IAAI8D,EAAWC,cAEf,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KACMC,GADN,KACkBH,IAAMI,UAsJhBC,EAA8BrE,EAA9BqE,SAAUC,EAAoBtE,EAApBsE,OAEdC,GAFJ,YAAsCvE,EAAtC,GAEY,mCAlJQ,SAAdwE,EAAeF,GAEnB,IAAMG,EAAWC,YAAkB,QAAS,YACtCC,EAAaD,YAAkB,QAAS,YACxCE,EAAcF,YAAkB,WAAY,SAC5CG,EAAgBH,YAAkB,WAAY,YAEpD,OAAOJ,EAAOQ,KAAI,SAACC,EAAMC,GACvB,GAAID,EAAKE,SACP,OAAO,KAET,GAAIF,EAAKG,SAAU,CAGjB,MAFS,GACNH,EAAI,QAAcb,EAAMa,EAAKb,OAE9B,qCACE,cAAC,IAAD,CACE1D,MAAOoE,EACPO,WAAW,OACXzE,GAAI,CACFP,GAAI,QAENiF,GAAG,OACHC,GAAI,CACFC,GAAI,OACJnF,GAAI,QAENoF,GAAG,OAXL,SAaoC,QAAjCzE,SAASC,gBAAgBC,IACtB+D,EAAKS,QACLT,EAAKU,OAEVjB,EAAYO,EAAKW,UAIxB,OACE,cAAC,IAAD,CAASC,GAAIZ,EAAKa,OAASb,EAAKrD,KAAhC,SAC4C,YA3C7BmE,EA2CAd,EAAKa,OAASb,EAAKrD,KA1C/BoC,EAASgC,WAAaD,EAAY,SAAW,IA2C5C,cAAC,IAAD,CACEE,QAAQ,UACR1F,eAAe,aACfD,WAAW,SACXwD,GAAIa,EACJ/D,GAAI,CACFP,GAAI,QAENiF,GAAI,CACFjF,GAAI,QAENkF,GAAI,CACFC,GAAI,OACJnF,GAAI,QAENoF,GAAG,OACHhC,aAAa,OACbyC,OAAO,OACPrC,EAAE,OACFsC,QAAS,CACPrC,GAAI,UACJ1B,UAAW,OACXgE,YAAa,eAEfC,OAAQ,CACNC,UAAW,QAzBf,SA4BE,eAAC,IAAD,WACwB,kBAAdrB,EAAKsB,KACX,cAACC,KAAD,UAAOvB,EAAKsB,OAEZ,cAACjD,EAAD,CACEQ,GAAG,WACHpD,MAAM,QACNkD,EAAE,OACFC,EAAE,OACFvC,GAAG,OALL,SAOG2D,EAAKsB,OAGV,cAAC,IAAD,CAAM7F,MAAOoE,EAAa2B,GAAG,OAAOC,SAAS,KAA7C,SACoC,QAAjC1F,SAASC,gBAAgBC,IACtB+D,EAAKS,QACLT,EAAKU,YAKf,cAAC,IAAD,CACEM,QAAQ,UACR1F,eAAe,aACfD,WAAW,SACXwD,GAAG,cACHlD,GAAI,CACFP,GAAI,QAENiF,GAAI,CACFjF,GAAI,QAENoF,GAAG,OACHF,GAAI,CACFC,GAAI,OACJnF,GAAI,QAENoD,aAAa,OACbyC,OAAO,OACPrC,EAAE,OACFsC,QAAS,CACPrC,GAAI,UACJ1B,UAAW,OACXgE,YAAa,eAEfC,OAAQ,CACNC,UAAW,QAzBf,SA4BE,eAAC,IAAD,WACwB,kBAAdrB,EAAKsB,KACX,cAACC,KAAD,UAAOvB,EAAKsB,OAEZ,cAACjD,EAAD,CACEQ,GAAIe,EACJnE,MAAM,WACNkD,EAAE,OACFC,EAAE,OACFvC,GAAG,OALL,SAOG2D,EAAKsB,OAGV,cAAC,IAAD,CAAM7F,MAAOqE,EAAe0B,GAAG,OAAOC,SAAS,KAA/C,SACoC,QAAjC1F,SAASC,gBAAgBC,IACtB+D,EAAKS,QACLT,EAAKU,cA3IL,IAACI,KAsJNrB,CAAYF,MAIvBmC,GADa/B,YAAkB,WAAY,YAC1BA,YAAkB,WAAY,cAC3B,IAApB1E,EAAM0G,YACRD,EAAiB,SAEnB,IAAIE,EACF,eAAC,IAAD,CAAKC,GAAI,OAAQlG,GAAG,MAApB,UACE,eAAC,IAAD,CACEO,KAAI,UAAK4F,OAAL,OACJ3F,OAAO,SACPC,QAAQ,OACR2F,WAAW,OACXpG,GAAG,OACHyE,WAAW,OACX9E,eAAe,SACfD,WAAW,SACXoG,SAAS,OATX,UAWE,cAAClF,EAAD,CAAiBqC,EAAE,OAAOD,EAAE,OAAOtC,GAAG,SACtC,cAAC,IAAD,CAAMoF,SAAS,KAAKO,GAAG,MAAvB,SACG1C,OAGL,cAACb,EAAD,OAKJ,EAAoCwD,cAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAClBC,EAASpD,IAAMI,SAErB,OACE,eAAC,IAAD,CACEjD,QAAS,CAAEmE,GAAI,OAAQnF,GAAI,QAC3BkH,IAAKlD,EACL/D,WAAW,SAHb,UAKE,cAAC,IAAD,CACEI,MAAOiG,EACP9C,EAAE,OACFD,EAAE,OACF2D,IAAKD,EACLE,YAAY,OACZC,QAASL,IAEX,eAAC,IAAD,CACED,OAAQA,EACRE,QAASA,EACTK,UAA4C,QAAjC1G,SAASC,gBAAgBC,IAAgB,QAAU,OAC9DyG,cAAeL,EAJjB,UAME,cAAC,IAAD,IACA,eAAC,IAAD,CACEzD,EAAE,QACF+D,KAAK,QACLC,GAAI,CACFrC,GAAI,QAENiB,GAAI,CACFjB,GAAI,QAEN/B,aAAa,OATf,UAWE,cAAC,IAAD,CACE4C,OAAQ,CAAEC,UAAW,QACrBJ,OAAQ,CAAEI,UAAW,UAEvB,cAAC,IAAD,CAAYsB,KAAK,QAAQpH,GAAG,OAA5B,SACE,eAAC,IAAD,CAAKoH,KAAK,OAAOhE,EAAE,QAAnB,UACE,cAAC,IAAD,UAAMiD,IACN,cAAC,IAAD,CAAOiB,UAAU,SAASlH,GAAG,OAA7B,SACE,cAAC,IAAD,UAAM6D,oBAqBPsD,MAhgBf,SAAiB7H,GAEf,IAAI8D,EAAWC,cAEf,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KACMC,GADN,KACkBH,IAAMI,UACpB0D,EAAgB,cAqKFxD,GAA2BtE,EAArCqE,SAAqCrE,EAA3BsE,QAAQyD,EAAmB/H,EAAnB+H,eAEtBxD,EAAQ,mCAjKQ,SAAdC,EAAeF,GACnB,IAAQyD,EAAmB/H,EAAnB+H,eAEJtD,EAAWC,YAAkB,QAAS,YACtCC,EAAaD,YAAkB,QAAS,YACxCE,EAAcF,YAAkB,WAAY,SAC5CG,EAAgBH,YAAkB,WAAY,YAC9CsD,EAAsB,mCAW1B,MATuB,WAAnBD,IACFtD,EAAW,cACXE,EAAaD,YAAkB,WAAY,YAC3CE,EAAcF,YAAkB,WAAY,SAC5CG,EAAgBH,YAAkB,WAAY,YAC9CsD,EAAsB,QAIjB1D,EAAOQ,KAAI,SAACC,EAAMC,GACvB,GAAID,EAAKE,SACP,OAAO,KAET,GAAIF,EAAKG,SAAU,CAGjB,MAFS,GACNH,EAAI,QAAcb,EAAMa,EAAKb,OAE9B,qCACE,cAAC,IAAD,CACE1D,MAAOoE,EACPO,WAAW,OACXzE,GAAI,CACFP,GAAI,QAENiF,GAAG,OACHC,GAAI,CACFC,GAAI,OACJnF,GAAI,QAENoF,GAAG,OAXL,SAaoC,QAAjCzE,SAASC,gBAAgBC,IACtB+D,EAAKS,QACLT,EAAKU,OAEVjB,EAAYO,EAAKW,UAIxB,OACE,cAAC,IAAD,CAASC,GAAIZ,EAAKa,OAASb,EAAKrD,KAAhC,SAC4C,YAtD7BmE,EAsDAd,EAAKa,OAASb,EAAKrD,KArD/BoC,EAASgC,WAAaD,EAAY,SAAW,IAsD5C,cAAC,IAAD,CACEE,QAAQ,UACR1F,eAAe,aACfD,WAAW,SACXgG,UAAW4B,EACXpE,GAAIa,EACJwD,WAAYH,EACZpH,GAAI,CACFP,GAAI,QAENiF,GAAI,CACFjF,GAAI,QAENkF,GAAI,CACFC,GAAI,OACJnF,GAAI,QAENoF,GAAG,OACHhC,aAAa,OACbyC,OAAO,OACPrC,EAAE,OACFsC,QAAS,CACPrC,GAAI,UACJ1B,UAAW,OACXgE,YAAa,eAEfC,OAAQ,CACNC,UAAW,oCA3Bf,SA8BE,eAAC,IAAD,WACwB,kBAAdrB,EAAKsB,KACX,cAACC,KAAD,UAAOvB,EAAKsB,OAEZ,cAACjD,EAAD,CACEQ,GAAG,UACHpD,MAAM,QACNkD,EAAE,OACFC,EAAE,OACFvC,GAAG,OACH6G,WAAYH,EANd,SAQG/C,EAAKsB,OAGV,cAAC,IAAD,CAAM7F,MAAOoE,EAAa2B,GAAG,OAAOC,SAAS,KAA7C,SACoC,QAAjC1F,SAASC,gBAAgBC,IACtB+D,EAAKS,QACLT,EAAKU,YAKf,cAAC,IAAD,CACEM,QAAQ,UACR1F,eAAe,aACfD,WAAW,SACXwD,GAAG,cACHlD,GAAI,CACFP,GAAI,QAENiF,GAAI,CACFjF,GAAI,QAENoF,GAAG,OACHF,GAAI,CACFC,GAAI,OACJnF,GAAI,QAENoD,aAAa,OACbyC,OAAO,OACPrC,EAAE,OACFsC,QAAS,CACPrC,GAAI,UACJ1B,UAAW,OACXgE,YAAa,eAEfC,OAAQ,CACNC,UAAW,QAzBf,SA4BE,eAAC,IAAD,WACwB,kBAAdrB,EAAKsB,KACX,cAACC,KAAD,UAAOvB,EAAKsB,OAEZ,cAACjD,EAAD,CACEQ,GAAIe,EACJnE,MAAM,WACNkD,EAAE,OACFC,EAAE,OACFvC,GAAG,OACH6G,WAAYH,EANd,SAQG/C,EAAKsB,OAGV,cAAC,IAAD,CAAM7F,MAAOqE,EAAe0B,GAAG,OAAOC,SAAS,KAA/C,SACoC,QAAjC1F,SAASC,gBAAgBC,IACtB+D,EAAKS,QACLT,EAAKU,cA1JL,IAACI,KAqKNrB,CAAYF,KAIvB4D,GADaxD,YAAkB,WAAY,YAC/B,QACZyD,EAAgB,MAChBC,EAAiB,MACjB3C,EAAK,GACc,WAAnBsC,IACFG,EAAYxD,YAAkB,QAAS,YACvCyD,EAAgB,OAChBC,EAAiB,sBAIrB3C,EAFsC,SAAhC4C,eAAeC,QAAQ,QAEtBD,eAAeC,QAAQ,eACa,QAAhCD,eAAeC,QAAQ,QAEvBD,eAAeC,QAAQ,aAAe,IAAMD,eAAeC,QAAQ,YACnC,YAAhCD,eAAeC,QAAQ,QACvB,QAGAD,eAAeC,QAAQ,aAAe,IAAMD,eAAeC,QAAQ,YAE5E,IAAI3B,EACF,eAAC,IAAD,CAAKC,GAAI,OAAQlG,GAAG,OAApB,UACE,cAAC,IAAD,CACEO,KAAI,wBACJC,OAAO,SACPC,QAAQ,OACR2F,WAAW,OACXpG,GAAG,OACHyE,WAAW,OACX9E,eAAe,SACfD,WAAW,SACXoG,SAAS,OATX,SAWE,eAAEpD,EAAF,CAAWM,EAAE,QACDC,EAAE,QADd,gBAEc,qBAAK4E,IAAKC,EAAM3G,OAAO,cAGvC,cAAC2B,EAAD,IACA,cAAC,IAAD,UACA,cAAC,IAAD,CAAOiF,QAAS,EAAhB,SACA,eAAC,IAAD,CAAMjC,SAAS,KAAf,wBAAgCf,EAAhC,YAGD,cAACjC,EAAD,OAKH,OACE,cAAC,IAAD,CAAK6D,IAAKlD,EAAV,SACE,cAAC,IAAD,CAAKhD,QAAS,CAAEmE,GAAI,OAAQnF,GAAI,SAAWuI,SAAS,QAApD,SACE,eAAC,IAAD,CACE9E,GAAIsE,EACJD,WAAYH,EACZnE,EAAE,QACF+D,KAAK,QACLC,GAAI,CACFrC,GAAI,QAENiB,GAAI,CACFjB,GAAI,QAEN5B,EAAE,qBACF2B,GAAG,OACHsD,GAAG,OACHC,EAAGR,EACH7E,aAAc4E,EAfhB,UAiBE,cAAC,IAAD,UAAMxB,IACN,cAAC,IAAD,CAAOiB,UAAU,SAASlH,GAAG,OAA7B,SACE,cAAC,IAAD,UAAM6D,c,iLC3QHsE,OAXf,SAAc7I,GACZ,IAAQyD,EAA+BzD,EAA/ByD,QAASJ,EAAsBrD,EAAtBqD,SAAaC,EAA9B,YAAuCtD,EAAvC,IACM8I,EAASC,aAAe,OAAQ,CAAEtF,YAExC,OACE,cAAC,IAAD,yBAAKuF,MAAOF,GAAYxF,GAAxB,aACGD,M,0BCKQ4F,OAXf,SAAoBjJ,GAClB,IAAQyD,EAA+BzD,EAA/ByD,QAASJ,EAAsBrD,EAAtBqD,SAAaC,EAA9B,YAAuCtD,EAAvC,IACM8I,EAASC,aAAe,aAAc,CAAEtF,YAE9C,OACE,cAAC,IAAD,yBAAKuF,MAAOF,GAAYxF,GAAxB,aACGD,M,0BCKQ6F,OAXf,SAAkBlJ,GAChB,IAAQyD,EAA+BzD,EAA/ByD,QAASJ,EAAsBrD,EAAtBqD,SAAaC,EAA9B,YAAuCtD,EAAvC,IACM8I,EAASC,aAAe,WAAY,CAAEtF,YAE5C,OACE,cAAC,IAAD,yBAAKuF,MAAOF,GAAYxF,GAAxB,aACGD,MCwCD8F,G,kDAgBJ,WAAYnJ,GAAQ,IAAD,8BAGjB,cAAMA,IAuBRoJ,aA1BmB,uCA0BJ,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAC,EAAU,CACdC,IAAK,EAAKzJ,MAAMF,GAChB4J,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBC,MAAO,EAAK1F,MAAM0F,MAClBC,SAAU,EAAK3F,MAAM2F,SACrBC,MAAO,EAAK5F,MAAM4F,MAClBC,QAAS,EAAK7F,MAAM6F,QACpBC,eAAgB,EAAK9F,MAAM8F,eAC3BC,WAAY,EAAK/F,MAAM+F,YAGzBC,IAAMC,IAAN,qDAAgEX,GAC7DY,MAAK,SAAAC,GAGJC,OAAOxG,SAASyG,QAAO,MAEtBC,OAAM,SAAAC,GACPC,MAAM,kCAtBG,2CA1BI,sDAIjB,EAAKxG,MAAQ,CACXwF,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,QAAS,GACTC,eAAgB,GAChBC,WAAY,GACZU,SAAU,GACVC,aAAa,GAdE,E,qDAfnB,WAGE,MAAiGC,KAAK7K,MAA9F0J,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,MAAOC,EAApC,EAAoCA,SAAUC,EAA9C,EAA8CA,MAAOC,EAArD,EAAqDA,QAASC,EAA9D,EAA8DA,eAAgBC,EAA9E,EAA8EA,WAAYnK,EAA1F,EAA0FA,GAC1F+K,KAAKC,SAAS,CAAEpB,cAChBmB,KAAKC,SAAS,CAAEnB,aAChBkB,KAAKC,SAAS,CAAElB,UAChBiB,KAAKC,SAAS,CAAEjB,aAChBgB,KAAKC,SAAS,CAAEhB,UAChBe,KAAKC,SAAS,CAAEf,YAChBc,KAAKC,SAAS,CAAEd,mBAChBa,KAAKC,SAAS,CAAEb,eAChBY,KAAKC,SAAS,CAAEhL,S,0BAuBlB,SAAaiL,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,U,uBA+BtC,SAAUC,GACRL,KAAKC,SAAS,CACZF,aAAa,EACb9K,GAAIoL,M,wBAIR,WACEL,KAAKC,SAAS,CACZF,aAAa,M,oBAIjB,WAAU,IAAD,OACP,EAAiGC,KAAK7K,MAA9F0J,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,MAAOC,EAApC,EAAoCA,SAAUC,EAA9C,EAA8CA,MAAOC,EAArD,EAAqDA,QAASC,EAA9D,EAA8DA,eAAgBC,EAA9E,EAA8EA,WAAYnK,EAA1F,EAA0FA,GAC1F,OACE,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAIqL,SAAU,CAAE7F,GAAI,SAAW8F,GAAG,MAAlC,SACE,cAAC,IAAD,CAAMC,MAAM,SAAS9F,GAAG,QAAQ4F,SAAS,OAAOG,SAAS,SAAzD,SAEE,eAAC,IAAD,CAAM1D,UAAU,SAAhB,UACE,eAAC,IAAD,CACEpB,SAAS,KACThG,MAAO,WACP2E,WAAW,OACXgG,SAAS,OAJX,UAMGzB,EANH,IAMeC,KAEf,cAAC,IAAD,CAAMnD,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,SAAhD,SACGyE,WAMT,cAAC,IAAD,UACE,cAAC,IAAD,CAAMhC,UAAU,SAAhB,SACE,cAAC,IAAD,CAAMpB,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAlD,SACG2E,QAKP,eAAC,IAAD,WACE,cAAC,IAAD,CAAMtD,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAO5E,GAAG,QAA5D,SACGsJ,IAEH,cAAC,IAAD,CAAMrD,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,SAAhD,SACG4E,OAIL,cAAC,IAAD,UACE,cAAC,IAAD,CAAMvD,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAO5E,GAAG,QAA5D,SACGyJ,MAGL,cAAC,IAAD,UACE,cAAC,IAAD,CAAMxD,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAO5E,GAAG,QAA5D,SACG0J,MAML,cAAC,IAAD,UACE,cAAC,IAAD,CACErC,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,aACNE,EAAG,CAAElK,GAAI,QAHX,SAQE,cAAC,IAAD,CAAQkG,QAAS,WAAQ,EAAKiE,UAAU1L,IAAOyL,EAAE,MAAM3H,GAAG,cAA1D,SACE,cAAC,IAAD,CAAMpD,MAAM,WAAWiL,OAAO,UAAUJ,MAAM,SAASE,EAAE,OAAzD,SACE,cAAC,IAAD,CAAM1K,GAAI6K,IAAatK,GAAG,mBAMpC,eAAC,IAAD,CACE6F,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAFxB,UAGE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAMC,SAAUf,KAAKzB,aAArB,UACE,cAAC,IAAD,yCACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW7I,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,8BACA,eAAC,IAAD,CACEqH,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,UAWE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAEvC,cAAC,IAAD,CAAOwL,aAActC,EAAWuC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,cAAc8C,YAAY,iBAE1G,eAAC,IAAD,WACE,cAAC,IAAD,CACEJ,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAEvC,cAAC,IAAD,CAAOwL,aAAcrC,EAAUsC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAAa8C,YAAY,cAG1G,cAAC,KAAD,oBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEJ,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAa7C,MAAM,eAE/B,cAAC,IAAD,CAAOwL,aAAclC,EAAOmC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,aAElG,cAAC,KAAD,sBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEJ,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAsB7C,MAAM,eAExC,cAAC,IAAD,CAAOwL,aAAcjC,EAASkC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,YAAY8C,YAAY,eAEtG,cAAC,KAAD,oBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEJ,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAe7C,MAAM,eAEjC,cAAC,IAAD,CAAOwL,aAAcpC,EAAOqC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,aAElG,cAAC,KAAD,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEJ,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAmB7C,MAAM,eAErC,cAAC,IAAD,CAAOwL,aAAcnC,EAAUoC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAAa8C,YAAY,gBAExG,cAAC,IAAD,CACEvE,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,SAQE,cAAC,KAAD,MAID,cAAC,KAAD,mCAGC,eAAC,IAAD,CAAQtF,SAAS,KACfmB,GAAG,MACHpE,aAAa,OACb7C,GAAG,MACH0L,KAAK,KACLH,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,eALhD,UAME,wBAAQ4B,MAAM,iBAAd,4BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,iBAAd,oCAIR,eAAC,IAAD,WACE,cAAC,IAAD,CAAQoB,KAAK,SAASzI,GAAG,WACzBpD,MAAM,QAAQ8L,GAAI,EADlB,qBAIA,cAAC,IAAD,CAAQ/E,QAAS,WAAQ,EAAKoE,cAA9B,uC,GA/Pa3H,IAAMuI,WA2QpBpD,MCjQTqD,G,kDAkBJ,aAAe,IAAD,8BACZ,gBAwCFpD,aAzCc,uCAyCC,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAC,EAAU,CACdE,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBG,MAAO,EAAK5F,MAAM4F,MAClBF,MAAO,EAAK1F,MAAM0F,MAClBC,SAAU,EAAK3F,MAAM2F,SACrBE,QAAS,EAAK7F,MAAM6F,QACpBY,SAAU,EAAKzG,MAAMyG,SACrBV,WAAY,EAAK/F,MAAM+F,WACvBD,eAAgB,EAAK9F,MAAM8F,eAC3ByC,UAAW,EAAKvI,MAAMuI,UACtBC,QAAU,EAAKxI,MAAMwI,SAGH,CAClBhD,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBG,MAAO,EAAK5F,MAAM4F,MAClB6C,KAAM,EAAKzI,MAAMyI,KACjBC,MAAO,EAAK1I,MAAM0I,MAClBC,SAAU,EAAK3I,MAAM2I,SACrBC,KAAM,EAAK5I,MAAM4I,MAEnB5C,IAAM6C,KAAK,0DAA2DvD,GACnEY,MAAK,SAAAC,GAEJC,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,kCA/BG,2CAzCD,sDAGZ,EAAKxG,MAAQ,CACXwF,UAAW,GACXC,SAAU,GACVG,MAAO,GACPF,MAAO,GACPC,SAAU,GACVE,QAAS,GACTE,WAAY,GACZD,eAAgB,GAChBW,SAAU,GACVqC,OAAQ,GACRH,SAAU,GACVH,SAAS,EACTD,WAAW,EACX7B,aAAa,EACbqC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,EAAG,GACHC,GAAI,IAtBM,E,qDAfd,WAAqB,IAAD,OAClBnD,IAAMoD,IAAN,6DACGlD,MAAK,SAAAC,GACJ,IAAM4C,EAAW5C,EAAIkD,KACrB,EAAKzC,SAAS,CAAEmC,gBAGpB/C,IAAMoD,IAAN,mDACGlD,MAAK,SAAAC,GAEJ,IAAM6C,EAAW7C,EAAIkD,KACrB,EAAKzC,SAAS,CAAEoC,kB,0BA6BtB,SAAanC,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,QACvB,aAATD,IACFH,KAAK3G,MAAMuI,UAAY1B,EAAI7J,OAAOsM,QAClC3C,KAAKC,SAAS,CAAC2B,UAAU1B,EAAI7J,OAAOsM,UACpCC,QAAQC,IAAI7C,KAAK3G,MAAM0F,QAGZ,WAAToB,IAEFH,KAAK3G,MAAMwI,QAAU3B,EAAI7J,OAAOsM,QAChC3C,KAAKC,SAAS,CAAC4B,QAAQ3B,EAAI7J,OAAOsM,UAClCC,QAAQC,IAAI7C,KAAK3G,MAAMwI,Y,uBAuC3B,WACE7B,KAAKC,SAAS,CACZF,aAAa,M,wBAMjB,WACEC,KAAKC,SAAS,CACZF,aAAa,M,oBAIjB,WAAU,IAAD,OA4BP,OAxBAC,KAAK3G,MAAM+I,SAASU,SAAQ,SAAAC,GAC1B,EAAK1J,MAAMgJ,SAASS,SAAQ,SAAAE,IACtBD,EAASf,UAAYxE,eAAeC,QAAQ,OAASuF,EAAQpE,KAAOmE,EAASd,MAMvEzE,eAAeC,QAAQ,aAAasF,EAASf,UAAYgB,EAAQpE,KAAOmE,EAASd,QALzF,EAAK5I,MAAMkJ,EAAEU,KAAKD,GAClB,EAAK3J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,WAahB,YAAhC/E,eAAeC,QAAQ,SAEzBuC,KAAK3G,MAAMgJ,SAASS,SAAQ,SAAAE,GACxB,EAAK3J,MAAMkJ,EAAEU,KAAKD,GAClB,EAAK3J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,OAIlD,qCACE,eAAC,IAAD,CAAMxF,UAAU,SAAShB,GAAI,CAAE1G,KAAM,QAASmB,GAAI,QAAlD,UACE,eAAC,GAAD,CAAM6M,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,UAArC,UACE,cAAC,GAAD,CAAYoL,EAAE,mBAAd,SACE,eAAC,IAAD,CAAMM,QAAQ,gBAAgBR,MAAM,SAAS3K,GAAG,OAAOiD,EAAE,OAAzD,UACE,cAAC,IAAD,CAAM6C,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAlD,gCAGA,eAAC,IAAD,CACEmC,YAAY,UACZpB,YAAY,UACZ1F,MAAM,UACNiD,QAAQ,UACR+C,SAAS,KACT+E,EAAE,WACFhE,QAAS,WAAQ,EAAKiE,aAPxB,UASE,cAAC,IAAD,CAAM3K,GAAIsN,IAAQ/M,GAAG,QATvB,6BAeJ,cAAC,GAAD,UACE,eAAC,IAAD,CAAOqC,QAAQ,SAASjD,MAAO,WAA/B,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAI+F,GAAG,QAAQ6E,GAAG,MAAM5K,MAAM,WAA9B,UACE,cAAC,IAAD,CAAI4K,GAAG,MAAM5K,MAAM,WAAnB,qBAGA,cAAC,IAAD,CAAIA,MAAM,WAAV,mBACA,cAAC,IAAD,CAAIA,MAAM,WAAV,sBAEA,cAAC,IAAD,CAAIA,MAAM,WAAV,6BACA,cAAC,IAAD,CAAIA,MAAM,WAAV,kCACA,cAAC,IAAD,CAAIA,MAAM,YAAV,yBAKJ,cAAC,IAAD,UAGIqK,KAAK3G,MAAMmJ,GAAGvI,KAAI,SAACsJ,GAIjB,OACE,cAAC,GAAD,CACEtO,GAAIsO,EAAK3E,IACTC,UAAW0E,EAAK1E,UAChBC,SAAUyE,EAAKzE,SACfC,MAAOwE,EAAKxE,MACZC,SAAUuE,EAAKvE,SACfC,MAAOsE,EAAKtE,MACZC,QAASqE,EAAKrE,QACdC,eAAgBoE,EAAKpE,eACrBC,WAAYmE,EAAKnE,0BAgBjC,cAAC,GAAD,CACE1D,GAAG,OACH2H,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,eAMnC,eAAC,IAAD,CACE8G,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAFxB,UAKE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAM7L,GAAG,OAAO8L,SAAUf,KAAKzB,aAA/B,UACE,cAAC,IAAD,iCACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW7I,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,8BACA,eAAC,IAAD,CACEqH,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,UAWE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAGvC,cAAC,IAAD,CACEyL,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,cAC9C8C,YAAY,YACZjG,YAAY,WACZmI,iBAAiB,eAGrB,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAEvC,cAAC,IAAD,CACEyL,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAC9C8C,YAAY,MACZjG,YAAY,WACZmI,iBAAiB,kBAMvB,cAAC,KAAD,8BACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAa7C,MAAM,eAE/B,cAAC,IAAD,CACEyL,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAC9C8C,YAAY,kBACZjG,YAAY,WACZmI,iBAAiB,eAGrB,cAAC,KAAD,oBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAe7C,MAAM,eAEjC,cAAC,IAAD,CACE6L,KAAK,QACLJ,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAC9C8C,YAAY,QACZjG,YAAY,WACZmI,iBAAiB,eAKrB,cAAC,KAAD,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAmB7C,MAAM,eAErC,cAAC,IAAD,CACA6L,KAAK,OACHJ,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAC9C8C,YAAY,WACZjG,YAAY,WACZmI,iBAAiB,eAErB,cAAC,KAAD,sBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAsB7C,MAAM,eAExC,cAAC,IAAD,CACEyL,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,YAC9C8C,YAAY,UACZjG,YAAY,WACZmI,iBAAiB,eAGrB,cAAC,IAAD,CACEzG,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,SAQE,cAAC,KAAD,MAGF,eAAC,IAAD,CACElE,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,UAQE,eAAC,IAAD,CAAQtF,SAAS,KACfmB,GAAG,MACHpE,aAAa,OACb7C,GAAG,MACH0L,KAAK,KACLlG,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,eAPhD,UAQE,wBAAQ4B,MAAM,iBAAd,4BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,iBAAd,+BAGF,eAAC,IAAD,CAAQzE,SAAS,KACfmB,GAAG,MACHpE,aAAa,OACb7C,GAAG,MACHwF,YAAY,WACZmI,iBAAiB,UACjBjC,KAAK,KACLH,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,mBAPhD,UAQE,wBAAQ4B,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQqD,UAAQ,EAACrD,MAAM,KAAvB,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,uBAIJ,cAAC,IAAD,CACEgB,SAAU,SAAC5C,GACT,EAAK6C,aAAa7C,EAAO,gBAtJ/B,aA2JE,cAAC,IAAD,CACE4C,SAAU,SAAC5C,GACT,EAAK6C,aAAa7C,EAAO,cA7J/B,gBAqKF,eAAC,IAAD,WACE,cAAC,IAAD,CAAQgD,KAAK,SAASzI,GAAG,UACvBpD,MAAM,QAAQ8L,GAAI,EAClBtG,OAAQ,CACNpC,GAAI,WAENqC,QAAS,CACPrC,GAAI,WANR,qBAWA,cAAC,IAAD,CAAQ2D,QAAS,WAAQ,EAAKoE,cAAgB/H,GAAG,WAAjD,uC,GAvZOI,IAAMuI,WAkadC,M,UCtEA+B,OAlXf,WAEE,IAAMC,EAAY9J,YAAkB,WAAY,SAC1C+J,EAAY/J,YAChB,qBACA,4FAEIgK,EAAqBhK,YACzB,QACA,6BAEIiK,EAAajK,YAAkB,WAAY,YAC3CkK,EAAUC,cAChB,EAA0B5K,mBAAS,IAAnC,mBAAO2F,EAAP,KAAckF,EAAd,KACA,EAAsC7K,mBAAS,IAA/C,mBAAO8K,EAAP,KAAoBC,EAApB,KACA,EAAgD/K,mBAAS,IAAzD,mBAAOgL,EAAP,KAAyBC,EAAzB,KACA,EAA0CjL,mBAAS,IAAnD,mBAAOkL,EAAP,KAAsBC,EAAtB,KACA,EAAsCnL,mBAAS,IAA/C,mBAAOoL,EAAP,KAAoBC,EAApB,KACA,EAAwCrL,mBAAS,IAAjD,mBAAOsL,EAAP,KAAqBC,EAArB,KACA,EAAoCvL,mBAAS,IAA7C,mBAAOwL,EAAP,KAAmBC,EAAnB,KAGMC,EAAOtH,eAAeC,QAAQ,eAC9BsH,EAASvH,eAAeC,QAAQ,SAChCuH,EAAWxH,eAAeC,QAAQ,oBAClCwH,EAAQzH,eAAeC,QAAQ,iBAC/ByH,EAAM1H,eAAeC,QAAQ,eAC7BxI,EAAKuI,eAAeC,QAAQ,MAC5B0H,EAAW3H,eAAeC,QAAQ,gBAClC2H,EAAW5H,eAAeC,QAAQ,cAkDxC,OACE,eAAC,IAAD,CAAMV,UAAU,SAAhB,UACE,cAAC,IAAD,CACElH,GAAI,CAAE4E,GAAI,QAASjE,GAAI,OAAQlB,GAAI,QACnCoD,aAAa,OACbjD,GAAG,MACHa,QAAQ,OACRlB,cAAc,SACdI,eAAe,SACfgL,MAAM,SAPR,SASE,cAAC,IAAD,CAEE1H,EAAE,OACFD,EAAE,QACFH,aAAa,OACb2M,WAAW,MACXC,SAAS,YACTzH,SAAS,WACTvH,QAAQ,OACRd,eAAe,SATjB,SAWE,eAAC,IAAD,CACEuH,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/B+D,GAAG,SACHgL,KAAK,QACLzM,EAAG,CAAE2B,GAAI,MAAOnF,GAAI,OACpBE,eAAgB,CAAEiF,GAAI,SAAUjE,GAAI,iBACpCgK,MAAM,SACNgF,eAAe,4BACf3H,SAAS,WACTtC,UAAU,oCACVkK,OAAO,YACPpK,YAAawI,EACb9K,GAAI6K,EACJlD,EAAE,OACFhI,aAAa,OACbrB,UAAW,CACToD,GAAI,kBACJjE,GAAI,mBACJkP,GAAI,oBAlBR,UAqBE,eAAC,IAAD,CACElF,MAAM,SACN3K,GAAI,CAAE4E,GAAI,OAAQjE,GAAI,OACtBuG,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BsC,EAAG,CAAE2B,GAAI,QACT7E,UAAW,CAAE6E,GAAI,SAAUjE,GAAI,SALjC,UAOE,cAAC,KAAD,CACED,GAAI,CAAEC,GAAI,QAEVsC,EAAE,OACFD,EAAE,OACFH,aAAa,SAEf,eAAC,IAAD,CAAMqE,UAAU,SAAS4I,SAAS,OAAOjK,GAAI,CAAEjB,GAAI,QAAnD,UACE,cAAC,IAAD,CACEkB,SAAU,CAAElB,GAAI,KAAMiL,GAAI,MAC1B/P,MAAOgO,EACPrJ,WAAW,OACXwC,GAAI,CAAErC,GAAI,MAAOjE,GAAI,OAJvB,SAMGsO,IAEH,cAAC,IAAD,CACEnJ,SAAU,CAAElB,GAAI,KAAMjE,GAAI,MAC1Bb,MAAOmO,EACPxJ,WAAW,WAHb,SAKEyK,UAIN,cAAC,IAAD,CACEhI,UAAW,CAAEtC,GAAI,SAAUiL,GAAI,OAC/B5M,EAAG,CAAE2B,GAAI,OAAQjE,GAAI,MAAOkP,GAAI,iBAOxC,eAAC,IAAD,CAAME,gBAAiB,CAAEnL,GAAI,MAAOnF,GAAI,kBAAoBuQ,IAAI,OAAhE,UAEE,eAAC,GAAD,CAAMnF,EAAE,OAAOoF,GAAI,CAAErL,GAAI,OAAQnF,GAAI,OAArC,UACE,cAAC,GAAD,CAAYoL,EAAE,WAAW7K,GAAG,OAA5B,SACE,cAAC,IAAD,CAAM8F,SAAS,KAAKhG,MAAOgO,EAAWrJ,WAAW,OAAjD,mCAIF,cAAC,GAAD,CAAU7E,GAAG,MAAb,SACE,eAAC,IAAD,CAAMsH,UAAU,SAAhB,UAEE,eAAC,IAAD,CAAMyD,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,uBAMa,OAEb,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACGwK,OAIL,eAAC,IAAD,CAAMtE,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,mBAMS,OAET,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACGyK,OAGL,eAAC,IAAD,CAAMvE,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,sBAMY,OAEZ,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACG0K,OAGL,eAAC,IAAD,CAAMxE,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,oBAMU,OAEV,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACG2K,OAGL,eAAC,IAAD,CAAMzE,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,iBAMO,OAEP,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACG4K,OAIL,eAAC,IAAD,CAAM1E,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,gCAMmB,OAEnB,eAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,UACG6K,EADH,IACcC,gBAMtB,eAAC,GAAD,CAAM1E,EAAE,OAAR,UACE,cAAC,GAAD,CAAYA,EAAE,WAAW7K,GAAG,OAA5B,SACE,cAAC,IAAD,CAAM8F,SAAS,KAAKhG,MAAOgO,EAAWrJ,WAAW,OAAjD,sBAIF,cAAC,GAAD,CAAU7E,GAAG,MAAb,SACE,eAAC,IAAD,CAAMsH,UAAU,SAASjE,EAAE,OAA3B,UACA,eAAC,KAAD,WACA,cAAC,IAAD,CACE6C,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,iBACZlB,MAAO8D,EACL9C,SAAU,SAAC1M,GAAD,OAAOyP,EAAezP,EAAE2B,OAAO+J,QAC3CvK,GAAG,OACH0L,KAAK,OAEL,cAAC,IAAD,CACE7I,aAAa,OACb7C,GAAG,OACH8F,SAAS,KACT6F,KAAK,OACLpB,MAAOrB,EACPqC,SAAU,SAAC1M,GAAD,OAAOuP,EAASvP,EAAE2B,OAAO+J,QACnCkB,YAAY,oBACZC,KAAK,OAGP,cAAC,IAAD,CACA5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,oBACZlB,MAAOgE,EACLhD,SAAU,SAAC1M,GAAD,OAAO2P,EAAoB3P,EAAE2B,OAAO+J,QAChDvK,GAAG,OACH0L,KAAK,OAEN,cAAC,IAAD,CACC5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,kBACZlB,MAAOkE,EACLlD,SAAU,SAAC1M,GAAD,OAAO6P,EAAiB7P,EAAE2B,OAAO+J,QAC7CvK,GAAG,OACH0L,KAAK,OAGN,cAAC,IAAD,CACC5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,gBACZlB,MAAOoE,EACLpD,SAAU,SAAC1M,GAAD,OAAO+P,EAAe/P,EAAE2B,OAAO+J,QAC3CvK,GAAG,OACH0L,KAAK,OAEL,cAAC,IAAD,CACA5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,iBACZlB,MAAOsE,EACLtD,SAAU,SAAC1M,GAAD,OAAOiQ,EAAgBjQ,EAAE2B,OAAO+J,QAC5CvK,GAAG,OACH0L,KAAK,OAGjB,cAAC,IAAD,CACY5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,eACZlB,MAAOwE,EACLxD,SAAU,SAAC1M,GAAD,OAAOmQ,EAAcnQ,EAAE2B,OAAO+J,QAC1CvK,GAAG,OACH0L,KAAK,OA9EP,oBAiFE,cAAC,IAAD,CAAQb,EAAE,MAAM3H,GAAG,cAAc2D,QA5T9B,WACbqJ,IAAM7D,KAAK,sDAAuD,CAChEtD,IAAI3J,EACJ8J,MAAOA,EACPmF,YAAYA,EACZE,iBAAiBA,EACjBE,cAAcA,EACdE,YAAYA,EACZwB,WAAWtB,EACXuB,SAASrB,IACRrF,MAAK,SAAC2G,GAEDA,EAASxD,KAAKyD,QA4BhBC,eAAgBF,EAASxD,KAAK,GAAGyD,SAzBT,SAApBD,EAASxD,KAAK2D,OAEhB7I,eAAe8I,QAAQ,QAAQJ,EAASxD,KAAK3D,OAC7CvB,eAAe8I,QAAQ,WAAWJ,EAASxD,KAAK5C,UAChDtC,eAAe8I,QAAQ,cAAcJ,EAASxD,KAAKwB,aACnD1G,eAAe8I,QAAQ,mBAAmBJ,EAASxD,KAAK0B,kBACxD5G,eAAe8I,QAAQ,gBAAgBJ,EAASxD,KAAK4B,eACrD9G,eAAe8I,QAAQ,cAAcJ,EAASxD,KAAK8B,aACnDhH,eAAe8I,QAAQ,KAAKJ,EAASxD,KAAK9D,KAC1CpB,eAAe8I,QAAQ,OAAOJ,EAASxD,KAAK2D,MAC5C7I,eAAe8I,QAAQ,eAAeJ,EAASxD,KAAKsD,YACpDxI,eAAe8I,QAAQ,aAAaJ,EAASxD,KAAKsD,YAElDpD,QAAQC,IAAIqD,GAChBnC,EAAQd,KAAK,kBACbxD,OAAOxG,SAASyG,QAAO,QA8RjB,SACE,eAAC,IAAD,CAEEc,MAAM,SACN1H,EAAG,CAAE4M,GAAI,SACThN,aAAa,OACblD,eAAe,SACfkF,GAAG,OACHkG,OAAO,UAPT,UASE,cAAC,IAAD,CAAM5K,GAAIuQ,IAAYhQ,GAAG,QACzB,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAOgO,EAAWrJ,WAAW,OAAjD,wCCxYH,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,ICAA,I,cCqbAoJ,OAnYf,WAGE,IAAMC,EAAY9J,YAAkB,WAAY,SAC1C+J,EAAY/J,YAChB,qBACA,4FAEIgK,EAAqBhK,YACzB,QACA,6BAEIiK,EAAajK,YAAkB,WAAY,YAC3CkK,EAAUC,cAChB,EAA0B5K,mBAAS,IAAnC,mBAAO2F,EAAP,KAAckF,EAAd,KACA,EAAkC7K,mBAAS,IAA3C,mBAAOyF,EAAP,KAAkB2H,EAAlB,KACA,EAAgCpN,mBAAS,IAAzC,mBAAO0F,EAAP,KAAiB2H,EAAjB,KACA,EAAsBrN,mBAAS,IAA/B,mBAAOsN,EAAP,KAAYC,EAAZ,KACA,EAA0BvN,mBAAS,IAAnC,mBAAO6F,EAAP,KAAc2H,EAAd,KACA,EAA4BxN,mBAAS,IAArC,mBAAOyN,EAAP,KAAeC,EAAf,KACA,EAAoC1N,mBAAS,IAA7C,mBAAOgG,EAAP,KAAmB2H,EAAnB,KACA,EAA8B3N,mBAASoE,eAAeC,QAAQ,YAA9D,mBAAOoE,EAAP,KACA,GADA,KACkCzI,mBAA0D,GAAjD4N,KAAKC,MAAMzJ,eAAeC,QAAQ,gBAA7E,mBAAOmE,EAAP,KAEMsF,GAFN,KAEc1J,eAAeC,QAAQ,cAC/B0J,EAAU3J,eAAeC,QAAQ,YACjC2J,EAAS5J,eAAeC,QAAQ,SAChC4J,EAAO7J,eAAeC,QAAQ,OAC9B6J,GAAS9J,eAAeC,QAAQ,SAChC8J,GAAU/J,eAAeC,QAAQ,UACjC+J,GAAchK,eAAeC,QAAQ,aACrCgK,GAAMjK,eAAeC,QAAQ,MAsDnC,OAJAiK,qBAAU,cAGR,IAEA,eAAC,IAAD,CAAM3K,UAAU,SAAhB,UACE,cAAC,IAAD,CACElH,GAAI,CAAE4E,GAAI,QAASjE,GAAI,OAAQlB,GAAI,QACnCoD,aAAa,OACbjD,GAAG,MACHa,QAAQ,OACRlB,cAAc,SACdI,eAAe,SACfgL,MAAM,SAPR,SASE,cAAC,IAAD,CAEE1H,EAAE,OACFD,EAAE,QACFH,aAAa,OACb2M,WAAW,MACXC,SAAS,YACTzH,SAAS,WACTvH,QAAQ,OACRd,eAAe,SATjB,SAWE,eAAC,IAAD,CACEuH,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/B+D,GAAG,SACHgL,KAAK,QACLzM,EAAG,CAAE2B,GAAI,MAAOnF,GAAI,OACpBE,eAAgB,CAAEiF,GAAI,SAAUjE,GAAI,iBACpCgK,MAAM,SACNgF,eAAe,4BACf3H,SAAS,WACTtC,UAAU,oCACVkK,OAAO,YACPpK,YAAawI,EACb9K,GAAI6K,EACJlD,EAAE,OACFhI,aAAa,OACbrB,UAAW,CACToD,GAAI,kBACJjE,GAAI,mBACJkP,GAAI,oBAlBR,UAqBE,eAAC,IAAD,CACElF,MAAM,SACN3K,GAAI,CAAE4E,GAAI,OAAQjE,GAAI,OACtBuG,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BsC,EAAG,CAAE2B,GAAI,QACT7E,UAAW,CAAE6E,GAAI,SAAUjE,GAAI,SALjC,UAOE,cAAC,KAAD,CACED,GAAI,CAAEC,GAAI,QAEVsC,EAAE,OACFD,EAAE,OACFH,aAAa,SAEf,eAAC,IAAD,CAAMqE,UAAU,SAAS4I,SAAS,OAAOjK,GAAI,CAAEjB,GAAI,QAAnD,UACE,cAAC,IAAD,CACEkB,SAAU,CAAElB,GAAI,KAAMiL,GAAI,MAC1B/P,MAAOgO,EACPrJ,WAAW,OACXwC,GAAI,CAAErC,GAAI,MAAOjE,GAAI,OAJvB,SAMG0Q,IAEH,cAAC,IAAD,CACEvL,SAAU,CAAElB,GAAI,KAAMjE,GAAI,MAC1Bb,MAAOmO,EACPxJ,WAAW,WAHb,SAKG8M,UAIP,cAAC,IAAD,CACErK,UAAW,CAAEtC,GAAI,SAAUiL,GAAI,OAC/B5M,EAAG,CAAE2B,GAAI,OAAQjE,GAAI,MAAOkP,GAAI,iBAOxC,eAAC,IAAD,CAAME,gBAAiB,CAAEnL,GAAI,MAAOnF,GAAI,kBAAoBuQ,IAAI,OAAhE,UAEE,eAAC,GAAD,CAAMnF,EAAE,OAAOoF,GAAI,CAAErL,GAAI,OAAQnF,GAAI,OAArC,UACE,cAAC,GAAD,CAAYoL,EAAE,WAAW7K,GAAG,OAA5B,SACE,cAAC,IAAD,CAAM8F,SAAS,KAAKhG,MAAOgO,EAAWrJ,WAAW,OAAjD,0CAIF,cAAC,GAAD,CAAU7E,GAAG,MAAb,SACE,eAAC,IAAD,CAAMsH,UAAU,SAAhB,UAEE,eAAC,IAAD,CAAMyD,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,uBAMa,OAEb,eAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,UACG4M,EADH,IACWC,QAIb,eAAC,IAAD,CAAM3G,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,mBAMS,OAET,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACG8M,OAGL,eAAC,IAAD,CAAM5G,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,iBAMO,OAEP,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACG+M,OAGL,eAAC,IAAD,CAAM7G,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,oBAMU,OAEV,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACGgN,QAGL,eAAC,IAAD,CAAM9G,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,oBAMU,OAEV,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACGiN,QAGL,eAAC,IAAD,CAAM/G,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,iCAMuB,OAEvB,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACGkN,QAGL,cAAC,IAAD,YAgBN,eAAC,GAAD,CAAM9G,EAAE,OAAR,UACE,cAAC,GAAD,CAAYA,EAAE,WAAW7K,GAAG,OAA5B,SACE,cAAC,IAAD,CAAM8F,SAAS,KAAKhG,MAAOgO,EAAWrJ,WAAW,OAAjD,sBAIF,cAAC,GAAD,CAAU7E,GAAG,MAAb,SACE,eAAC,IAAD,CAAMsH,UAAU,SAASjE,EAAE,OAA3B,UACE,eAAC,KAAD,WACE,cAAC,IAAD,CACE6C,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,cACZlB,MAAOvB,EACPuC,SAAU,SAAC1M,GAAD,OAAO8R,EAAa9R,EAAE2B,OAAO+J,QACvCvK,GAAG,OACH0L,KAAK,OAEP,cAAC,IAAD,CACE5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,aACZlB,MAAOtB,EACPsC,SAAU,SAAC1M,GAAD,OAAO+R,EAAY/R,EAAE2B,OAAO+J,QACtCvK,GAAG,OACH0L,KAAK,OAEP,cAAC,IAAD,CACE7I,aAAa,OACb7C,GAAG,OACH8F,SAAS,KACT6F,KAAK,OACLpB,MAAOrB,EACPqC,SAAU,SAAC1M,GAAD,OAAOuP,EAASvP,EAAE2B,OAAO+J,QACnCkB,YAAY,oBACZC,KAAK,OAGP,cAAC,IAAD,CACE5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,gBACZlB,MAAOsG,EACPtF,SAAU,SAAC1M,GAAD,OAAOiS,EAAOjS,EAAE2B,OAAO+J,QACjCvK,GAAG,OACH0L,KAAK,OAEP,cAAC,IAAD,CACE5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,iBACZlB,MAAOnB,EACPmC,SAAU,SAAC1M,GAAD,OAAOkS,EAASlS,EAAE2B,OAAO+J,QACnCvK,GAAG,OACH0L,KAAK,OAEP,cAAC,IAAD,CACE5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,SACZlB,MAAOyG,EACPzF,SAAU,SAAC1M,GAAD,OAAOoS,EAAUpS,EAAE2B,OAAO+J,QACpCvK,GAAG,OACH0L,KAAK,OAEP,cAAC,IAAD,CACE5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,sBACZlB,MAAOhB,EACPgC,SAAU,SAAC1M,GAAD,OAAOqS,EAAcrS,EAAE2B,OAAO+J,QACxCvK,GAAG,OACH0L,KAAK,UAIT,cAAC,IAAD,CAAQb,EAAE,MAAM3H,GAAG,cAAc2D,QA1U9B,WACbqJ,IAAMzG,IAAI,mDAAoD,CAC5DV,IAAK6I,GACL1I,MAAOA,EACPD,SAAUA,EACVD,UAAWA,EACX6H,IAAKA,EACLzH,MAAOA,EACP4H,OAAQA,EACRzH,WAAYA,EACZwC,UAAWA,EACXC,QAASA,IACRtC,MAAK,SAAC2G,GAEFA,EAASxD,KAAKyD,QAyBjBC,eAAeF,EAASxD,KAAK,GAAGyD,UAtBhCvD,QAAQC,IAAI,OACZrF,eAAe8I,QAAQ,QAASvH,GAChCvB,eAAe8I,QAAQ,YAAazH,GACpCrB,eAAe8I,QAAQ,WAAYxH,GACnCtB,eAAe8I,QAAQ,MAAOI,GAC9BlJ,eAAe8I,QAAQ,QAASrH,GAChCzB,eAAe8I,QAAQ,SAAUO,GACjCrJ,eAAe8I,QAAQ,YAAalH,GACpC5B,eAAe8I,QAAQ,UAAWzE,GAClCrE,eAAe8I,QAAQ,YAAa1E,GACpCgB,QAAQC,IAAIqD,GACZnC,EAAQd,KAAK,kBACbxD,OAAOxG,SAASyG,QAAO,QA6SjB,SACE,eAAC,IAAD,CAEEc,MAAM,SACN1H,EAAG,CAAE4M,GAAI,SACThN,aAAa,OACblD,eAAe,SACfkF,GAAG,OACHkG,OAAO,UAPT,UASE,cAAC,IAAD,CAAM5K,GAAIuQ,IAAYhQ,GAAG,QACzB,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAOgO,EAAWrJ,WAAW,OAAjD,wCC+CHoJ,OAraf,WAEE,IAAMC,EAAY9J,YAAkB,WAAY,SAC1C+J,EAAY/J,YAChB,qBACA,4FAEIgK,EAAqBhK,YACzB,QACA,6BAEIiK,EAAajK,YAAkB,WAAY,YAC3CkK,EAAUC,cAChB,EAA0B5K,mBAAS,IAAnC,mBAAO2F,EAAP,KAAckF,EAAd,KACA,EAAkC7K,mBAAS,IAA3C,mBAAOyF,EAAP,KAAkB2H,EAAlB,KACA,EAAgCpN,mBAAS,IAAzC,mBAAO0F,EAAP,KAAiB2H,EAAjB,KACA,EAAgCrN,mBAAS,IAAzC,mBAAO4F,EAAP,KAAiB2I,EAAjB,KACA,EAA0BvO,mBAAS,IAAnC,mBAAO6F,EAAP,KAAc2H,EAAd,KACA,EAAoCxN,mBAAS,IAA7C,mBAAOgG,EAAP,KAAmB2H,EAAnB,KACA,EAA4C3N,mBAAS,IAArD,mBAAO+F,EAAP,KAAuByI,EAAvB,KACA,EAA8BxO,mBAAS,IAAvC,mBAAO8F,EAAP,KAAgB2I,EAAhB,KACA,EAA8BzO,oBAAS,GAAvC,mBAAOyI,EAAP,KAAgBiG,EAAhB,KACA,EAAkC1O,oBAAS,GAA3C,mBAAOwI,GAAP,KAAkBmG,GAAlB,KACA,GAAgC3O,mBAAwD,GAA/C4N,KAAKC,MAAMzJ,eAAeC,QAAQ,aAA3E,qBAAOuK,GAAP,MACA,IADA,MACoC5O,mBAA0D,GAAjD4N,KAAKC,MAAMzJ,eAAeC,QAAQ,gBAA/E,qBAAOwK,GAAP,YAKFrF,QAAQC,IAAIjB,IACV,IAAMsG,GAAQ1K,eAAeC,QAAQ,aAC/B0K,GAAU3K,eAAeC,QAAQ,YACjC2K,GAAS5K,eAAeC,QAAQ,SAChC4K,GAAa7K,eAAeC,QAAQ,YACpC6K,GAAS9K,eAAeC,QAAQ,SAChC8K,GAAW/K,eAAeC,QAAQ,WAClC+K,GAAchL,eAAeC,QAAQ,aACrCgL,GAAkBjL,eAAeC,QAAQ,kBACzCgK,GAAMjK,eAAeC,QAAQ,MA8CnC,OACE,eAAC,IAAD,CAAMV,UAAU,SAAhB,UACE,cAAC,IAAD,CACElH,GAAI,CAAE4E,GAAI,QAASjE,GAAI,OAAQlB,GAAI,QACnCoD,aAAa,OACbjD,GAAG,MACHa,QAAQ,OACRlB,cAAc,SACdI,eAAe,SACfgL,MAAM,SAPR,SASE,cAAC,IAAD,CAEE1H,EAAE,OACFD,EAAE,QACFH,aAAa,OACb2M,WAAW,MACXC,SAAS,YACTzH,SAAS,WACTvH,QAAQ,OACRd,eAAe,SATjB,SAWE,eAAC,IAAD,CACEuH,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/B+D,GAAG,SACHgL,KAAK,QACLzM,EAAG,CAAE2B,GAAI,MAAOnF,GAAI,OACpBE,eAAgB,CAAEiF,GAAI,SAAUjE,GAAI,iBACpCgK,MAAM,SACNgF,eAAe,4BACf3H,SAAS,WACTtC,UAAU,oCACVkK,OAAO,YACPpK,YAAawI,EACb9K,GAAI6K,EACJlD,EAAE,OACFhI,aAAa,OACbrB,UAAW,CACToD,GAAI,kBACJjE,GAAI,mBACJkP,GAAI,oBAlBR,UAqBE,eAAC,IAAD,CACElF,MAAM,SACN3K,GAAI,CAAE4E,GAAI,OAAQjE,GAAI,OACtBuG,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BsC,EAAG,CAAE2B,GAAI,QACT7E,UAAW,CAAE6E,GAAI,SAAUjE,GAAI,SALjC,UAOE,cAAC,KAAD,CACED,GAAI,CAAEC,GAAI,QAEVsC,EAAE,OACFD,EAAE,OACFH,aAAa,SAEf,eAAC,IAAD,CAAMqE,UAAU,SAAS4I,SAAS,OAAOjK,GAAI,CAAEjB,GAAI,QAAnD,UACE,cAAC,IAAD,CACEkB,SAAU,CAAElB,GAAI,KAAMiL,GAAI,MAC1B/P,MAAOgO,EACPrJ,WAAW,OACXwC,GAAI,CAAErC,GAAI,MAAOjE,GAAI,OAJvB,SAMG0R,KAEH,cAAC,IAAD,CACEvM,SAAU,CAAElB,GAAI,KAAMjE,GAAI,MAC1Bb,MAAOmO,EACPxJ,WAAW,WAHb,SAKE8N,WAIN,cAAC,IAAD,CACErL,UAAW,CAAEtC,GAAI,SAAUiL,GAAI,OAC/B5M,EAAG,CAAE2B,GAAI,OAAQjE,GAAI,MAAOkP,GAAI,iBAOxC,eAAC,IAAD,CAAME,gBAAiB,CAAEnL,GAAI,MAAOnF,GAAI,kBAAoBuQ,IAAI,OAAhE,UAEE,eAAC,GAAD,CAAMnF,EAAE,OAAOoF,GAAI,CAAErL,GAAI,OAAQnF,GAAI,OAArC,UACE,cAAC,GAAD,CAAYoL,EAAE,WAAW7K,GAAG,OAA5B,SACE,cAAC,IAAD,CAAM8F,SAAS,KAAKhG,MAAOgO,EAAWrJ,WAAW,OAAjD,2CAIF,cAAC,GAAD,CAAU7E,GAAG,MAAb,SACE,eAAC,IAAD,CAAMsH,UAAU,SAAhB,UAEE,eAAC,IAAD,CAAMyD,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,uBAMa,OAEb,eAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,UACG4N,GADH,IACWC,SAIb,eAAC,IAAD,CAAM3H,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,mBAMS,OAET,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACG8N,QAGL,eAAC,IAAD,CAAM5H,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,sBAMY,OAEZ,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACG+N,QAGL,eAAC,IAAD,CAAM7H,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,oBAMU,OAEV,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACGgO,QAGL,eAAC,IAAD,CAAM9H,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,qBAMW,OAEX,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACGiO,QAGL,eAAC,IAAD,CAAM/H,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,iCAMuB,OAEvB,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACGkO,QAGL,eAAC,IAAD,CAAMhI,MAAM,SAAS3K,GAAG,OAAxB,UACE,eAAC,IAAD,CACE8F,SAAS,KACThG,MAAOgO,EACPrJ,WAAW,OACX/D,GAAG,OAJL,8BAMoB,OAEpB,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,MAAhD,SACGmO,QAIL,eAAC,IAAD,CAAMjI,MAAM,SAAS3K,GAAG,OAAxB,UACE,uBAAO2L,KAAK,WACRmB,QAASsF,GACTS,UAAU,IAHhB,gBAOI,eAAC,IAAD,CAAMlI,MAAM,SAAS3K,GAAG,OAAxB,UACA,uBAAO2L,KAAK,WACVmB,QAASqF,GACTU,UAAU,IAHZ,sBAWV,eAAC,GAAD,CAAMhI,EAAE,OAAR,UACE,cAAC,GAAD,CAAYA,EAAE,WAAW7K,GAAG,OAA5B,SACE,cAAC,IAAD,CAAM8F,SAAS,KAAKhG,MAAOgO,EAAWrJ,WAAW,OAAjD,sBAIF,cAAC,GAAD,CAAU7E,GAAG,MAAb,SACE,eAAC,IAAD,CAAMsH,UAAU,SAASjE,EAAE,OAA3B,UACA,eAAC,KAAD,WACA,cAAC,IAAD,CACE6C,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,cACZlB,MAAOvB,EACLuC,SAAU,SAAC1M,GAAD,OAAO8R,EAAa9R,EAAE2B,OAAO+J,QACzCvK,GAAG,OACH0L,KAAK,OAEP,cAAC,IAAD,CACE5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,aACZlB,MAAOtB,EACLsC,SAAU,SAAC1M,GAAD,OAAO+R,EAAY/R,EAAE2B,OAAO+J,QACxCvK,GAAG,OACH0L,KAAK,OAEL,cAAC,IAAD,CACE7I,aAAa,OACb7C,GAAG,OACH8F,SAAS,KACT6F,KAAK,OACLpB,MAAOrB,EACPqC,SAAU,SAAC1M,GAAD,OAAOuP,EAASvP,EAAE2B,OAAO+J,QACnCkB,YAAY,oBACZC,KAAK,OAGP,cAAC,IAAD,CACA5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,qBACZlB,MAAOpB,EACLoC,SAAU,SAAC1M,GAAD,OAAOiT,EAAYjT,EAAE2B,OAAO+J,QACxCvK,GAAG,OACH0L,KAAK,OAEN,cAAC,IAAD,CACC5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,iBACZlB,MAAOnB,EACLmC,SAAU,SAAC1M,GAAD,OAAOkS,EAASlS,EAAE2B,OAAO+J,QACrCvK,GAAG,OACH0L,KAAK,OAEN,cAAC,IAAD,CACC5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,WACZlB,MAAOlB,EACLkC,SAAU,SAAC1M,GAAD,OAAOmT,EAAWnT,EAAE2B,OAAO+J,QACvCvK,GAAG,OACH0L,KAAK,OAEL,cAAC,IAAD,CACA5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,sBACZlB,MAAOhB,EACLgC,SAAU,SAAC1M,GAAD,OAAOqS,EAAcrS,EAAE2B,OAAO+J,QAC1CvK,GAAG,OACH0L,KAAK,OAEN,cAAC,IAAD,CACC5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,kBACZlB,MAAOjB,EACLiC,SAAU,SAAC1M,GAAD,OAAOkT,EAAkBlT,EAAE2B,OAAO+J,QAC9CvK,GAAG,OACH0L,KAAK,OAEP,uBAAOC,KAAK,WAEZJ,SAAU,SAAC1M,GAAD,OAAOqT,GAAarT,EAAE2B,OAAOsM,YA3FvC,aA6FM,uBAAOnB,KAAK,WAElBJ,SAAU,SAAC1M,GAAD,OAAOoT,EAAWpT,EAAE2B,OAAOsM,YA/FrC,cAmGE,cAAC,IAAD,CAAQjC,EAAE,MAAM3H,GAAG,cAAc2D,QAtW9B,WACbqJ,IAAMzG,IAAI,qDAAsD,CAC9DV,IAAI6I,GACJ1I,MAAOA,EACPD,SAASA,EACTD,UAAUA,EACVG,SAASA,EACTC,MAAMA,EACNC,QAAQA,EACRE,WAAWA,EACXD,eAAeA,EACfyC,UAAUA,GACVC,QAAQA,IACPtC,MAAK,SAAC2G,GAEDA,EAASxD,KAAKyD,QAqBhBC,eAAgBF,EAASxD,KAAK,GAAGyD,UAlBjCvD,QAAQC,IAAI,OACVrF,eAAe8I,QAAQ,QAAQvH,GAC/BvB,eAAe8I,QAAQ,YAAYzH,GACnCrB,eAAe8I,QAAQ,WAAWxH,GAClCtB,eAAe8I,QAAQ,WAAWtH,GAClCxB,eAAe8I,QAAQ,QAAQrH,GAC/BzB,eAAe8I,QAAQ,UAAUpH,GACjC1B,eAAe8I,QAAQ,YAAYlH,GACnC5B,eAAe8I,QAAQ,iBAAiBnH,GACxC3B,eAAe8I,QAAQ,YAAY1E,IACnCpE,eAAe8I,QAAQ,SAASzE,GAEhCe,QAAQC,IAAIqD,GAChBnC,EAAQd,KAAK,kBACbxD,OAAOxG,SAASyG,QAAO,QAsUjB,SACE,eAAC,IAAD,CAEEc,MAAM,SACN1H,EAAG,CAAE4M,GAAI,SACThN,aAAa,OACblD,eAAe,SACfkF,GAAG,OACHkG,OAAO,UAPT,UASE,cAAC,IAAD,CAAM5K,GAAIuQ,IAAYhQ,GAAG,QACzB,cAAC,IAAD,CAAMoF,SAAS,KAAKhG,MAAOgO,EAAWrJ,WAAW,OAAjD,wC,wHC3ZZgE,I,yDAuCJ,WAAYnJ,GAAQ,IAAD,gCAGjB,cAAMA,IAyBRwT,eA5BmB,sBA4BF,4BAAAlK,EAAA,+EAEcmK,KAAOC,UAAU,EAAKxP,MAAMyP,UAF1C,OAEH5C,EAFG,OAGTtD,QAAQC,IAAIqD,GACZ,EAAK7M,MAAM0P,SAAS7C,EACpBtD,QAAQC,IAAK,EAAKxJ,MAAM0P,UALf,gDAObnG,QAAQC,IAAR,MAPa,yDA5BE,EA0CnBmG,OA1CmB,sBA0CV,4BAAAvK,EAAA,sDACDwK,EAAc,CAClBrK,IAAK,EAAKzJ,MAAMF,IAElBoK,IAAMC,IAAN,+DAA0E2J,GACvE1J,MAAK,SAAAC,GAEJK,MAAM,+BACNJ,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,cAVH,2CA1CU,EAwDnBtB,aAxDmB,uCAwDJ,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAuK,EAAc,CAClBrK,IAAK,EAAKzJ,MAAMF,GAChBiU,OAAQ,EAAK7P,MAAM6P,OACnBrK,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBG,MAAO,EAAK5F,MAAM4F,MAClB6C,KAAM,EAAKzI,MAAMyI,KACjBC,MAAO,EAAK1I,MAAM0I,MAClBC,SAAU,EAAK3I,MAAM2I,SACrBmH,KAAM,EAAK9P,MAAM8P,MAEnB9J,IAAMC,IAAN,+DAA0E2J,GACvE1J,MAAK,SAAAC,GAEJK,MAAM,8BACNJ,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,kCApBG,2CAxDI,wDAgFnBuJ,cAhFmB,uCAgFH,WAAO5K,GAAP,iBAAAC,EAAA,sDAEdD,EAAME,iBACA2K,EAAc,CAClBzK,IAAK,EAAKzJ,MAAMmU,IAChBH,KAAM,EAAK9P,MAAM8P,KACjBtK,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBgD,KAAM,EAAKzI,MAAMyI,KACjByH,QAAS,EAAKlQ,MAAMyP,SACpBU,KAAM,EAAKnQ,MAAMmQ,KACjBP,YAAa,EAAK5P,MAAMgH,KAGpB4I,EAAc,CAClBrK,IAAK,EAAKzJ,MAAMF,GAChBkU,KAAM,EAAK9P,MAAM8P,MAInB9J,IAAMC,IAAN,8DAAyE+J,GACtE9J,MAAK,SAAAC,GAGJC,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,kCAGVoJ,EAAYE,MAAO,EACnB9J,IAAMC,IAAN,8DAAyE2J,GAAa1J,MACpF,SAAAC,GAEEC,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,kCAnCI,2CAhFG,wDAyLnB4J,QAzLmB,uCAyLT,WAAOjL,GAAP,eAAAC,EAAA,6DACRD,EAAME,iBADE,SAEaW,IAAM6C,KAAK,yDAA0D,IAFlF,OAEJgE,EAFI,OAGR,EAAKjG,SAAL,2BACK,EAAK5G,OADV,IAEEyP,SAAU5C,EAASxD,QAGrB,EAAKiG,iBARG,2CAzLS,sDAIjB,EAAKtP,OAAL,GACEyP,SAAU,GACVI,OAAQ,GACRrK,UAAW,GACXC,SAAU,GACVG,MAAO,GACP6C,KAAM,GACNC,MAAO,GACPC,SAAU,GACVmH,KAAM,GACNK,KAAM,IAVR,qBAWQ1T,KAAK4T,OAXb,wBAYW,IAZX,yBAaW,IAbX,6BAce,GAdf,8BAee,GAff,8BAgBgB,GAhBhB,yBAiBY,IAjBZ,qBAkBQ,IAlBR,qBAmBQ,IAnBR,GAJiB,E,qDArCnB,WAAqB,IAAD,OAElB,EAA2E1J,KAAK7K,MAAxE0J,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUgD,EAA7B,EAA6BA,KAAMC,EAAnC,EAAmCA,MAAO9C,EAA1C,EAA0CA,MAAOiK,EAAjD,EAAiDA,OAAYI,GAA7D,EAAyDrU,GAAzD,EAA6DqU,KAAKH,EAAlE,EAAkEA,KAClEnJ,KAAKC,SAAS,CAAEpB,cAChBmB,KAAKC,SAAS,CAAEnB,aAChBkB,KAAKC,SAAS,CAAE6B,SAChB9B,KAAKC,SAAS,CAAE8B,UAChB/B,KAAKC,SAAS,CAAEhB,UAChBe,KAAKC,SAAS,CAAEiJ,WAChBlJ,KAAKC,SAAS,CAAEqJ,QAChBtJ,KAAKC,SAAS,CAAEkJ,SAChB9J,IAAMoD,IAAN,wDACGlD,MAAK,SAAAC,GACJ,IAAM6C,EAAW7C,EAAIkD,KACrB,EAAKzC,SAAS,CAAEoC,aAEhB,EAAKhJ,MAAM8P,KAAO3J,EAAIkD,KAAKyG,QAG/B9J,IAAM6C,KAAK,wDAAyD,CAClEtD,IAAKoB,KAAK7K,MAAMmU,MACf/J,MAAK,SAAC2G,GAEFA,EAASxD,KAAKyD,UAEjB,EAAK9M,MAAMmQ,KAAOtD,EAASxD,KAAK8G,KAChC,EAAKnQ,MAAMyP,SAAW5C,EAASxD,KAAK6G,c,gCAO1C,WACE3G,QAAQC,IAAI7C,KAAK3G,S,0BAyCnB,SAAa6G,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,U,uBAiFtC,SAAUC,GACRL,KAAKC,SAAS,CACZF,aAAa,EACb9K,GAAIoL,M,wBAeR,SAAWsJ,GAAM,IAAD,OACd3J,KAAKC,SAAS,CACZ2J,cAAc,EACd3U,GAAI0U,IAEN3J,KAAK2I,iBACLtJ,IAAM6C,KAAK,wDAAyD,CAElEtD,IAAKoB,KAAK7K,MAAMmU,MACf/J,MAAK,SAAC2G,GAEFA,EAASxD,KAAKyD,UAEjB,EAAK9M,MAAMmQ,KAAOtD,EAASxD,KAAK8G,KAChC,EAAKnQ,MAAMkQ,QAAUrD,EAASxD,KAAK6G,c,wBAMzC,SAAWlJ,GACTL,KAAKC,SAAL,2BACKD,KAAK3G,OADV,IAEEwQ,cAAc,EACd5U,GAAIoL,O,wBAGR,WACEL,KAAKC,SAAS,CACZF,aAAa,M,yBAIjB,WACEC,KAAKC,SAAL,2BACKD,KAAK3G,OADV,IAEEwQ,cAAa,O,yBAKjB,WACE7J,KAAKC,SAAS,CACZ2J,cAAc,M,iIAclB,WACEhH,QAAQC,IAAI,SACZiH,MAAM9J,KAAK2I,sB,oBAKb,WAAU,IAAD,OASP,EAA2E3I,KAAK7K,MAAxE0J,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUgD,EAA7B,EAA6BA,KAAMC,EAAnC,EAAmCA,MAAO9C,EAA1C,EAA0CA,MAAOiK,EAAjD,EAAiDA,OAAQjU,EAAzD,EAAyDA,GAAIqU,EAA7D,EAA6DA,IAAKH,EAAlE,EAAkEA,KAElE,OACE,qCAEE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM3I,MAAM,SAAZ,SACE,cAAC,IAAD,CAAMzD,UAAU,SAAhB,SACE,eAAC,IAAD,CACEpB,SAAS,KACThG,MAAM,WACN2E,WAAW,OAHb,UAKGwE,EALH,IAKcD,WAMpB,cAAC,IAAD,UACE,cAAC,IAAD,CAAM9B,UAAU,SAAhB,SACE,cAAC,IAAD,CAAMpB,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,OAAhD,SACGyP,KAAOjI,GAAMkI,MAAMC,OAAO,cAAcC,iBAK/C,cAAC,IAAD,UACE,cAAC,IAAD,CAAMvO,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,OAAO5E,GAAG,QAA1D,SACGqM,MAGL,cAAC,IAAD,UACE,cAAC,IAAD,CACEhJ,GAAe,cAAXmQ,EAAsB,YAAc,WACxCvT,MAAkB,kBAAXuT,EAA0B,QAAU,WAC3CvN,SAAS,OACT+E,EAAE,WACFhI,aAAa,MALf,SAOGwQ,EAAOgB,eAGZ,cAAC,IAAD,UACE,eAAC,IAAD,CACEnN,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,aACNE,EAAG,CAAElK,GAAI,QAHX,UAKE,eAAC,KAAD,CACE2T,gBAAiBnK,KAAK3G,MAAM0G,YAC5BzD,QAAS,WAAQ,EAAKwE,cACtBnE,UAAU,QACVyN,aAAa,EAJf,UAME,cAAC,KAAD,UACE,cAAC,IAAD,CACE1J,EAAE,MACF3H,GAAG,cACHlD,GAAI,CAAE4E,GAAI,OAAQjE,GAAI,OACtBD,GAAI,CAAEC,GAAI,QAJZ,SAME,cAAC,IAAD,CAAMb,MAAM,UAAUiL,OAAO,UAAUJ,MAAM,SAASE,EAAE,OAAxD,SACE,cAAC,IAAD,CAAM1K,GAAIqU,IAAY9T,GAAG,cAK/B,eAAC,KAAD,WACE,cAAC,KAAD,CAAe+D,WAAW,WAA1B,0BACA,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,sEAGA,cAAC,KAAD,CAAexD,EAAE,OAAOtB,eAAe,WAAvC,SACE,cAAC,IAAD,CAAa+L,KAAK,KAAlB,SACE,cAAC,IAAD,CAAQ7E,QAAS,WAAQ,EAAKsM,UAAYvM,YAAY,MAAtD,+BAOR,cAAC,IAAD,CAAQC,QAAS,WAAQ,EAAKiE,UAAU1L,IAAOyL,EAAE,MAAM3H,GAAG,cAA1D,SAEE,cAAC,IAAD,CAAMpD,MAAM,WAAWiL,OAAO,UAAUJ,MAAM,SAASE,EAAE,OAAzD,SACE,cAAC,IAAD,CAAM1K,GAAI6K,IAAatK,GAAG,iBAKlC,cAAC,IAAD,UAGE,cAAC,IAAD,CAAQmG,QAAS,WAAQ,EAAK4N,WAAWhB,IAAQ5I,EAAE,MAAM3H,GAAG,cAA5D,SAEE,cAAC,IAAD,CAAM6H,OAAO,UAAUJ,MAAM,SAASE,EAAE,OACtChI,aAAc,OACdK,IAAa,IAAToQ,EAAgB,YAAc,WAClCxT,OAAgB,IAATwT,EAAiB,QAAU,WAHpC,SAKE,cAAC,IAAD,CAAMnT,GAAIuU,KAAiBhU,GAAG,iBAOtC,eAAC,IAAD,CACE6F,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAFxB,UAIE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAM7L,GAAG,OAAO8L,SAAUf,KAAKzB,aAA/B,UACE,cAAC,IAAD,yCACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW7I,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,wBACA,cAAC,IAAD,CAAOyL,aAActC,EAAWuC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,cAAc8C,YAAY,cACxG,cAAC,KAAD,kBACA,cAAC,IAAD,CAAOH,aAAcrC,EAAUsC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAAa8C,YAAY,QACtG,cAAC,KAAD,8BACA,cAAC,IAAD,CAAOH,aAAclC,EAAOmC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,oBAChG,cAAC,KAAD,mBACA,cAAC,IAAD,CAAOE,KAAK,OAAOL,aAAcW,EAAMV,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,SAAS8C,YAAY,SAC1G,cAAC,KAAD,oBACA,cAAC,IAAD,CAAOH,aAAcY,EAAOX,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,UAChG,cAAC,KAAD,qBACA,cAAC,IAAD,CAAOH,aAAc+H,EAAQ9H,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,WAAW8C,YAAY,gBAGtG,eAAC,IAAD,WACE,cAAC,IAAD,CAAQE,KAAK,SAAS/E,YAAY,OAAOgF,GAAI,EAA7C,qBAGA,cAAC,IAAD,CAAQ/E,QAAS,WAAQ,EAAKoE,cAA9B,gCAMR,eAAC,IAAD,CACE1E,OAAQ4D,KAAK3G,MAAMuQ,aACnBtN,QAAS,WAAQ,EAAKkO,eAFxB,UAIE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAMvV,GAAG,OAAO8L,SAAUf,KAAKoJ,cAA/B,UACE,cAAC,IAAD,iCACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW1T,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,wBACA,cAAC,IAAD,CAAOyL,aAActC,EAAWuC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,cAAc8C,YAAY,cACxG,cAAC,KAAD,kBACA,cAAC,IAAD,CAAOH,aAAcrC,EAAUsC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAAa8C,YAAY,QACtG,cAAC,KAAD,mBACA,cAAC,IAAD,CAAOH,aAAcnB,KAAK3G,MAAMmQ,KAAMpI,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,SAAS8C,YAAY,SACzG,cAAC,KAAD,oCACA,eAAC,IAAD,CAAYC,KAAK,KAAjB,UACE,cAAC,IAAD,CAAOnB,MAAOJ,KAAK3G,MAAMyP,SAAU2B,UAAQ,EAACrJ,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,YAAY8C,YAAY,YAElH,cAAC,IAAD,CAAmBrK,MAAM,SAAzB,SACE,eAAC,KAAD,CACEkT,gBAAiBnK,KAAK3G,MAAMwQ,aAC5BxN,OAAQ,WAAQ,EAAKqO,eACrB/N,UAAU,QAEVyN,aAAa,EALf,UAOE,cAAC,KAAD,UACE,cAAC,IAAD,CACC1N,QAAS,WAAQ,EAAKiM,kBACrB9P,EAAE,UAAU0I,KAAK,KACjB1L,GAAI,CAAE4E,GAAI,OAAQjE,GAAI,OACtBD,GAAI,CAAEC,GAAI,QAJZ,oBAUF,eAAC,KAAD,WACE,cAAC,KAAD,CAAe8D,WAAW,WAA1B,qBACA,cAAC,KAAD,IACA,cAAC,KAAD,IACA,eAAC,KAAD,+BAGE,cAAC,KAAD,CAAOoD,IAAKsC,KAAK3G,MAAM0P,SAAUvM,IAAK,SAAAmO,GAAE,OAAK,EAAKC,aAAeD,KACjE,0BAIF,cAAC,KAAD,CAAe7T,EAAE,OAAOtB,eAAe,WAAvC,SACE,cAAC,IAAD,CAAa+L,KAAK,KAAlB,SACA,cAAC,KAAD,CAClBsJ,QAAS,kBAAM,oDACfC,QAAS,kBAAM,EAAKF,oCAahB,eAAC,IAAD,WAIE,cAAC,IAAD,CAAQpJ,KAAK,SAASzI,GAAG,UACvBoC,OAAQ,CACNpC,GAAI,WAENqC,QAAS,CACPrC,GAAI,WAEN0I,GAAI,EAPN,qBAUA,cAAC,IAAD,CAAQ/E,QAAS,WAAQ,EAAK8N,eAA9B,sBACExK,KAAK3G,MAAMyP,UAAY,cAAC,IAAD,CAAQpM,QAASsD,KAAKyJ,QAC7C1Q,GAAG,UACHoC,OAAQ,CACNpC,GAAI,WAENqC,QAAS,CACPrC,GAAI,WANiB,qC,GAjeZI,IAAMuI,YAofpBpD,MCrfTyM,G,kDA4BJ,aAAe,IAAD,gCACZ,gBAiCFxM,aAlCc,uCAkCC,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAuK,EAAc,CAClBpK,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBG,MAAO,EAAK5F,MAAM4F,MAClB6C,KAAM,EAAKzI,MAAMyI,KACjBC,MAAO,EAAK1I,MAAM0I,MAClBC,SAAU,EAAK3I,MAAM2I,SACrBqH,YAAa,EAAKhQ,MAAMgQ,aAE1BhK,IAAM6C,KAAN,+DAA2E+G,GACxE1J,MAAK,SAAAC,GACJK,MAAM,6BACNJ,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,kCAjBG,2CAlCD,wDAkEdtB,aAAe,SAAAC,GACbA,EAAME,iBAEN,IAAMsM,EAAU,EAAK3R,MAAM2R,QAC3BC,aAAa3E,QAAQ,UAAW0E,GAChCpI,QAAQC,IAAImI,GACZpI,QAAQC,IAAI,EAAKxJ,MAAMmJ,IACtB,IAAMA,EAAI,EAAKnJ,MAAMmJ,GAAG0I,QAAO,SAACC,GACjCA,EAAMtM,UAAUuM,cAAcC,SAAS,EAAKhS,MAAM2R,UAElDG,EAAMrM,SAASsM,cAAcC,SAAS,EAAKhS,MAAM2R,YAK/C,GADApI,QAAQC,IAAIL,GACE,GAAXA,EAAG8I,OAAU,CACd,EAAKrL,SAAS,CAAEuC,OAEhB,EAAKvC,SAAS,CAAEsL,SADE,aAGhB,CAEF,EAAKtL,SAAS,CAAEsL,SADC,YApFrB,EAAKlS,OAAL,GACEwF,UAAW,GACXC,SAAU,GACVG,MAAO,GACP6C,KAAM,GACNC,MAAO,GACPC,SAAU,GACVwJ,MAAO,GACPrC,KAAM,GACNE,YAAa,GACbtJ,aAAa,EACb0L,QAAS,IAXX,qBAYO,IAZP,yBAaY,IAbZ,yBAcY,IAdZ,kBAeK,IAfL,mBAgBM,IAhBN,yBAiBY,IAjBZ,yBAkBY,IAlBZ,oBAmBO,IAnBP,mBAoBM,IApBN,sBAqBS,IArBT,wBAsBW,IAtBX,yBAuBW,IAvBX,GAHY,E,qDA1Bd,WAAqB,IAAD,OAClBpM,IAAMoD,IAAN,6DACGlD,MAAK,SAAAC,GACJ,IAAMiM,EAAUjM,EAAIkD,KACpB,EAAKzC,SAAS,CAAEwL,YAChB,IAAM3J,EAAK,GAET,EAAKzI,MAAMmJ,GAAGvI,KAAI,SAACyR,GACjB5J,EAAKmB,KAAK,CAAC0I,MAAMD,EAAI7M,UAAU,IAAI6M,EAAI5M,SAAS8M,MAAM7B,KAAO,IAAIjU,KAAK4V,EAAI5J,OAAOmI,OAAO,cAAc4B,IAAI9B,KAAO,IAAIjU,KAAK4V,EAAI5J,OAAQmI,OAAO,mBAEvJ,EAAKhK,SAAS,CAAE6B,YAIdzC,IAAMoD,IAAN,iDACGlD,MAAK,SAAAC,GACJ,IAAMsM,EAAWtM,EAAIkD,KACrB,EAAKzC,SAAS,CAAE6L,gBAEpBzM,IAAMoD,IAAN,wDACGlD,MAAK,SAAAC,GACJ,IAAM6C,EAAW7C,EAAIkD,KACrB,EAAKzC,SAAS,CAAEoC,kB,0BAiEtB,SAAanC,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,U,uBAPtC,WACEJ,KAAKC,SAAS,CACZF,aAAa,M,wBAmCjB,WACEC,KAAKC,SAAS,CACZF,aAAa,M,uBAIjB,c,oBAGA,WAAU,IAAD,OAEPC,KAAK3G,MAAMoS,QAAQ3I,SAAQ,SAAAC,GACa,SAAlCvF,eAAeC,QAAQ,QACrBsF,EAASf,UAAYxE,eAAeC,QAAQ,QAC9C,EAAKpE,MAAMkJ,EAAEU,KAAKF,GAClB,EAAK1J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,KAKP,QAAlC/E,eAAeC,QAAQ,QAC1BsF,EAASf,UAAYxE,eAAeC,QAAQ,cAC9C,EAAKpE,MAAMkJ,EAAEU,KAAKF,GAClB,EAAK1J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,KAGN,YAAlC/E,eAAeC,QAAQ,QAC/B,EAAKpE,MAAMoS,QAAQ3I,SAAQ,SAAAC,GAGrB,EAAK1J,MAAMkJ,EAAEU,KAAKF,GAClB,EAAK1J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,OAKhDQ,EAASd,MAAQzE,eAAeC,QAAQ,QAC1C,EAAKpE,MAAMkJ,EAAEU,KAAKF,GAClB,EAAK1J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,QAMpDvC,KAAK3G,MAAMgJ,SAASS,SAAQ,SAAAiJ,GAC1BnJ,QAAQC,IAAIkJ,GACRA,EAAU5C,KACZ,EAAK9P,MAAM8P,KAAO,OAElB,EAAK9P,MAAM8P,KAAO,WAGtB,IAAM6C,EAAYC,aAAgBlC,MAIlC,OACE,qCACE,cAAC,IAAD,CAAMhN,UAAU,SAAShB,GAAI,CAAE1G,KAAM,QAASmB,GAAI,QAAlD,SACE,eAAC,GAAD,CAAM6M,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,UAArC,UACE,cAAC,GAAD,CAAYoL,EAAE,mBAAd,SACE,eAAC,IAAD,CAAMM,QAAQ,gBAAgBR,MAAM,SAAS3K,GAAG,OAAOiD,EAAE,OAAzD,UACE,cAAC,IAAD,CAAM6C,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,OAAhD,uCAGA,eAAC,IAAD,CACVvB,GAAI,WACJL,aAAa,OACbI,EAAE,QACFwC,OAAQ,CACND,YAAa,YAEfD,QAAS,CACPC,YAAa,YARL,UAWV,cAAC,IAAD,CACE7C,SACE,cAAC,IAAD,CACEO,GAAG,UACHL,aAAa,UACbyC,OAAO,OACPC,QAAS,CACPrC,GAAI,UACJ1B,UAAW,OACXgE,YAAa,eAEfC,OAAQ,CACNC,UAAW,QAEbC,KAAM,cAAC,IAAD,CAAY7F,MAAO,WAAYmD,EAAE,OAAOD,EAAE,aAItD,sBAAMqT,MAAO,CAACC,WAAY,QAAUpL,SAAUf,KAAKzB,aAAnD,SAEY,cAAC,IAAD,CACA6C,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,YAC9CgD,KAAK,OACf7F,SAAS,KACTjB,GAAG,OACH4G,YAAY,kCAwBR,cAAC,KAAD,CAAU0K,UAAWA,EAAWI,OAAQpM,KAAK3G,MAAMyI,KAAMuK,cAAc,QAAUC,gBAAiB,SAAC9N,EAAOoN,EAAOC,EAAKU,GAApB,MAAoC,CACxI/N,QACAoN,QACAC,MACAU,aACAL,MAAO,CAAEM,gBAAiB,WACxBN,MAAO,CAAEO,eAAgB,QAASzV,OAAQ,IAAK0V,OAAQ,UACvD,cAAC,GAAD,UACwB,QAAvB1M,KAAK3G,MAAMkS,SACV,eAAC,IAAD,CAAO3S,QAAQ,SAASjD,MAAM,WAA9B,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAI+F,GAAG,QAAQ6E,GAAG,MAAM5K,MAAM,WAA9B,UACE,cAAC,IAAD,CAAIA,MAAM,WAAV,8BAGA,cAAC,IAAD,CAAIA,MAAM,WAAV,kBACA,cAAC,IAAD,CAAIA,MAAM,WAAV,mBACA,cAAC,IAAD,CAAIA,MAAM,WAAV,oBACA,cAAC,IAAD,CAAIA,MAAM,WAAV,qBACA,cAAC,IAAD,CAAIA,MAAM,WAAV,8BAIJ,cAAC,IAAD,UACGqK,KAAK3G,MAAMmJ,GAAGvI,KAAI,SAACyR,GAIhB,OAEE,cAACiB,GAAD,CACE1X,GAAIyW,EAAI9M,IACRC,UAAW6M,EAAI7M,UACfC,SAAU4M,EAAI5M,SACdgD,KAAM4J,EAAI5J,KACVC,MAAO2J,EAAI3J,MACX9C,MAAOyM,EAAIzM,MACXiK,OAAQwC,EAAIxC,OACZC,KAAMuC,EAAIvC,KACVG,IAAKoC,EAAIrC,sBAerB,cAAC,IAAD,qDAMN,eAAC,IAAD,CACEjN,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAFxB,UAIE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAM7L,GAAG,OAAO8L,SAAUf,KAAKzB,aAA/B,UACE,cAAC,IAAD,yCACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW7I,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,wBACA,cAAC,IAAD,CAAO0L,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,cAAc8C,YAAY,cAC/E,cAAC,KAAD,kBACA,cAAC,IAAD,CAAOF,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAAa8C,YAAY,QAC9E,cAAC,KAAD,8BACA,cAAC,IAAD,CAAOF,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,oBAC3E,cAAC,KAAD,mBACA,cAAC,IAAD,CAAOE,KAAK,OAAOJ,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,SAAS8C,YAAY,SACtF,cAAC,KAAD,oBACA,cAAC,IAAD,CAAOF,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,eAG/E,eAAC,IAAD,WACE,cAAC,IAAD,CAAQE,KAAK,SAAS/E,YAAY,OAAOgF,GAAI,EAA7C,qBAGA,cAAC,IAAD,CAAQ/E,QAAS,WAAQ,EAAKoE,cAA9B,uC,GA7UK3H,IAAMuI,WAuVZqJ,MC9VTzM,G,kDAiCJ,WAAYnJ,GAAQ,IAAD,gCAGjB,cAAMA,IAwBR6T,OA3BmB,sBA2BV,4BAAAvK,EAAA,sDACDwK,EAAc,CAClBrK,IAAK,EAAKzJ,MAAMF,IAElBoK,IAAMC,IAAN,+DAA0E2J,GACvE1J,MAAK,SAAAC,GAEJK,MAAM,+BACNJ,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,cAVH,2CA3BU,EAyCnBtB,aAzCmB,uCAyCJ,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAuK,EAAc,CAClBrK,IAAK,EAAKzJ,MAAMF,GAChBiU,OAAQ,EAAK7P,MAAM6P,OACnBrK,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBG,MAAO,EAAK5F,MAAM4F,MAClB6C,KAAM,EAAKzI,MAAMyI,KACjBC,MAAO,EAAK1I,MAAM0I,MAClBC,SAAU,EAAK3I,MAAM2I,SACrBmH,KAAM,EAAK9P,MAAM8P,MAGnB9J,IAAMC,IAAN,+DAA0E2J,GACvE1J,MAAK,SAAAC,GAEJK,MAAM,8BACNJ,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,kCArBG,2CAzCI,wDAkEnBuJ,cAlEmB,uCAkEH,WAAO5K,GAAP,iBAAAC,EAAA,sDAEdD,EAAME,iBACA2K,EAAc,CAClBzK,IAAK,EAAKzJ,MAAMmU,IAChBH,KAAM,EAAK9P,MAAM8P,KACjBtK,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBgD,KAAM,EAAKzI,MAAMyI,KACjByH,QAAS,EAAKlQ,MAAMkQ,QACpBC,KAAM,EAAKnQ,MAAMmQ,KACjBP,YAAa,EAAK5P,MAAMgH,KAGpB4I,EAAc,CAClBrK,IAAK,EAAKzJ,MAAMF,GAChBkU,KAAM,EAAK9P,MAAM8P,MAInB9J,IAAMC,IAAN,8DAAyE+J,GACtE9J,MAAK,SAAAC,GAGJC,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,kCAGVoJ,EAAYE,MAAO,EACnB9J,IAAMC,IAAN,8DAAyE2J,GAAa1J,MACpF,SAAAC,GAEEC,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,kCAnCI,2CAlEG,sDAIjB,EAAKxG,OAAL,GACE6P,OAAQ,GACRrK,UAAW,GACXC,SAAU,GACVG,MAAO,GACP6C,KAAM,GACNC,MAAO,GACPC,SAAU,GACVmH,KAAM,GACNK,KAAM,IATR,qBAUQ1T,KAAK4T,OAVb,wBAWW,IAXX,6BAYe,GAZf,8BAagB,GAbhB,yBAcY,IAdZ,qBAeQ,IAfR,qBAgBQ,IAhBR,GAJiB,E,qDA/BnB,WAAqB,IAAD,OAElB,EAA2E1J,KAAK7K,MAAxE0J,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUgD,EAA7B,EAA6BA,KAAMC,EAAnC,EAAmCA,MAAO9C,EAA1C,EAA0CA,MAAOiK,EAAjD,EAAiDA,OAAYI,GAA7D,EAAyDrU,GAAzD,EAA6DqU,KAAKH,EAAlE,EAAkEA,KAClEnJ,KAAKC,SAAS,CAAEpB,cAChBmB,KAAKC,SAAS,CAAEnB,aAChBkB,KAAKC,SAAS,CAAE6B,SAChB9B,KAAKC,SAAS,CAAE8B,UAChB/B,KAAKC,SAAS,CAAEhB,UAChBe,KAAKC,SAAS,CAAEiJ,WAChBlJ,KAAKC,SAAS,CAAEqJ,QAChBtJ,KAAKC,SAAS,CAAEkJ,SAChB9J,IAAMoD,IAAN,wDACGlD,MAAK,SAAAC,GACJ,IAAM6C,EAAW7C,EAAIkD,KACrB,EAAKzC,SAAS,CAAEoC,aAEhB,EAAKhJ,MAAM8P,KAAO3J,EAAIkD,KAAKyG,QAG/B9J,IAAM6C,KAAK,wDAAyD,CAClEtD,IAAKoB,KAAK7K,MAAMmU,MACf/J,MAAK,SAAC2G,GAEFA,EAASxD,KAAKyD,UAEjB,EAAK9M,MAAMmQ,KAAOtD,EAASxD,KAAK8G,KAChC,EAAKnQ,MAAMkQ,QAAUrD,EAASxD,KAAK6G,c,0BA4BzC,SAAarJ,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,U,uBAkFtC,SAAUC,GACRL,KAAKC,SAAS,CACZF,aAAa,EACb9K,GAAIoL,M,wBAeR,SAAWsJ,GAAM,IAAD,OACd3J,KAAKC,SAAS,CACZ2J,cAAc,EACd3U,GAAI0U,IAENtK,IAAM6C,KAAK,wDAAyD,CAElEtD,IAAKoB,KAAK7K,MAAMmU,MACf/J,MAAK,SAAC2G,GAEFA,EAASxD,KAAKyD,UACjBvD,QAAQC,IAAIqD,EAASxD,KAAK8G,MAC1B,EAAKnQ,MAAMmQ,KAAOtD,EAASxD,KAAK8G,KAChC,EAAKnQ,MAAMkQ,QAAUrD,EAASxD,KAAK6G,c,wBAOzC,WACEvJ,KAAKC,SAAS,CACZF,aAAa,M,yBAIjB,WACEC,KAAKC,SAAS,CACZ2J,cAAc,M,oBAKlB,WAAU,IAAD,OASP,EAA2E5J,KAAK7K,MAAxE0J,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUgD,EAA7B,EAA6BA,KAAMC,EAAnC,EAAmCA,MAAO9C,EAA1C,EAA0CA,MAAOiK,EAAjD,EAAiDA,OAAQjU,EAAzD,EAAyDA,GAAzD,EAA6DqU,IAA7D,EAAkEH,KAElE,OACE,qCAEE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM3I,MAAM,SAAZ,SACE,cAAC,IAAD,CAAMzD,UAAU,SAAhB,SACE,eAAC,IAAD,CACEpB,SAAS,KACThG,MAAM,WACN2E,WAAW,OAHb,UAKGwE,EALH,IAKcD,WAMpB,cAAC,IAAD,UACE,cAAC,IAAD,CAAM9B,UAAU,SAAhB,SACE,cAAC,IAAD,CAAMpB,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,OAAhD,SACGyP,KAAOjI,GAAMkI,MAAMC,OAAO,cAAcC,iBAK/C,cAAC,IAAD,UACE,cAAC,IAAD,CAAMvO,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,OAAO5E,GAAG,QAA1D,SACGqM,MAGL,cAAC,IAAD,UACE,cAAC,IAAD,CAAMpG,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,OAAO5E,GAAG,QAA1D,SACGuJ,MAGL,cAAC,IAAD,UACE,cAAC,IAAD,CACElG,GAAe,cAAXmQ,EAAsB,YAAc,WACxCvT,MAAkB,kBAAXuT,EAA0B,QAAU,WAC3CvN,SAAS,OACT+E,EAAE,WACFhI,aAAa,MALf,SAOGwQ,EAAOgB,eAGZ,cAAC,IAAD,UACE,eAAC,IAAD,CACEnN,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,aACNE,EAAG,CAAElK,GAAI,QAHX,UAKE,eAAC,KAAD,CACE2T,gBAAiBnK,KAAK3G,MAAM0G,YAC5BzD,QAAS,WAAQ,EAAKwE,cACtBnE,UAAU,QACVyN,aAAa,EAJf,UAME,cAAC,KAAD,UACE,cAAC,IAAD,CACE1J,EAAE,MACF3H,GAAG,cACHlD,GAAI,CAAE4E,GAAI,OAAQjE,GAAI,OACtBD,GAAI,CAAEC,GAAI,QAJZ,SAME,cAAC,IAAD,CAAMb,MAAM,UAAUiL,OAAO,UAAUJ,MAAM,SAASE,EAAE,OAAxD,SACE,cAAC,IAAD,CAAM1K,GAAIqU,IAAY9T,GAAG,cAK/B,eAAC,KAAD,WACE,cAAC,KAAD,CAAe+D,WAAW,WAA1B,0BACA,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,sEAGA,cAAC,KAAD,CAAexD,EAAE,OAAOtB,eAAe,WAAvC,SACE,cAAC,IAAD,CAAa+L,KAAK,KAAlB,SACE,cAAC,IAAD,CAAQ7E,QAAS,WAAQ,EAAKsM,UAAYvM,YAAY,MAAtD,+BAOR,cAAC,IAAD,CAAQC,QAAS,WAAQ,EAAKiE,UAAU1L,IAAOyL,EAAE,MAAM3H,GAAG,cAA1D,SAEE,cAAC,IAAD,CAAMpD,MAAM,WAAWiL,OAAO,UAAUJ,MAAM,SAASE,EAAE,OAAzD,SACE,cAAC,IAAD,CAAM1K,GAAI6K,IAAatK,GAAG,oBAOpC,eAAC,IAAD,CACE6F,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAFxB,UAIE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAM7L,GAAG,OAAO8L,SAAUf,KAAKzB,aAA/B,UACE,cAAC,IAAD,yCACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW7I,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,wBACA,cAAC,IAAD,CAAOyL,aAActC,EAAWuC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,cAAc8C,YAAY,cACxG,cAAC,KAAD,kBACA,cAAC,IAAD,CAAOH,aAAcrC,EAAUsC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAAa8C,YAAY,QACtG,cAAC,KAAD,8BACA,cAAC,IAAD,CAAOH,aAAclC,EAAOmC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,oBAChG,cAAC,KAAD,mBACA,cAAC,IAAD,CAAOE,KAAK,OAAOL,aAAcW,EAAMV,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,SAAS8C,YAAY,SAC1G,cAAC,KAAD,oBACA,cAAC,IAAD,CAAOH,aAAcY,EAAOX,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,UAChG,cAAC,KAAD,qBACA,cAAC,IAAD,CAAOH,aAAc+H,EAAQ9H,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,WAAW8C,YAAY,gBAGtG,eAAC,IAAD,WACE,cAAC,IAAD,CAAQE,KAAK,SAAS/E,YAAY,OAAOgF,GAAI,EAA7C,qBAGA,cAAC,IAAD,CAAQ/E,QAAS,WAAQ,EAAKoE,cAA9B,gCAMR,eAAC,IAAD,CACE1E,OAAQ4D,KAAK3G,MAAMuQ,aACnBtN,QAAS,WAAQ,EAAKkO,eAFxB,UAIE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAMvV,GAAG,OAAO8L,SAAUf,KAAKoJ,cAA/B,UACE,cAAC,IAAD,iCACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW1T,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,wBACA,cAAC,IAAD,CAAOyL,aAActC,EAAWuC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,cAAc8C,YAAY,cACxG,cAAC,KAAD,kBACA,cAAC,IAAD,CAAOH,aAAcrC,EAAUsC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAAa8C,YAAY,QACtG,cAAC,KAAD,mBACA,cAAC,IAAD,CAAOH,aAAcnB,KAAK3G,MAAMmQ,KAAMpI,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,SAAS8C,YAAY,SACzG,cAAC,KAAD,oCAEA,cAAC,IAAD,CAAOH,aAAcnB,KAAK3G,MAAMkQ,QAASnI,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,YAAY8C,YAAY,iBAKnH,eAAC,IAAD,WACE,cAAC,IAAD,CAAQE,KAAK,SAAS/E,YAAY,OAAOgF,GAAI,EAA7C,qBAGA,cAAC,IAAD,CAAQ/E,QAAS,WAAQ,EAAK8N,eAA9B,uC,GA5WarR,IAAMuI,WAsXpBpD,MCxXTyM,G,kDAoBJ,aAAe,IAAD,8BACZ,gBAyBFxM,aA1Bc,uCA0BC,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAuK,EAAc,CAClBpK,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBG,MAAO,EAAK5F,MAAM4F,MAClB6C,KAAM,EAAKzI,MAAMyI,KACjBC,MAAO,EAAK1I,MAAM0I,MAClBC,SAAU,EAAK3I,MAAM2I,UAEvB3C,IAAM6C,KAAN,+DAA2E+G,GACxE1J,MAAK,SAAAC,GACJK,MAAM,6BACNJ,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,kCAhBG,2CA1BD,sDAGZ,EAAKxG,MAAQ,CACXuF,IAAI,GACJC,UAAW,GACXC,SAAU,GACVG,MAAO,GACP6C,KAAM,GACNC,MAAO,GACPC,SAAU,GACVkC,YAAY,GACZnE,aAAa,EACb0L,QAAS,GACTrJ,SAAU,GACVwK,SAAU,GAEVrK,EAAG,GACHC,GAAI,GACJsJ,SAAU,IAnBA,E,qDAlBd,WAAqB,IAAD,OAClBzM,IAAMoD,IAAN,sDAAgE,CAAC7D,IAAIoB,KAAK3G,MAAMuF,MAC7EW,MAAK,SAAAC,GACJ,IAAMiM,EAAUjM,EAAIkD,KACpB,EAAKzC,SAAS,CAAEwL,eAGpBpM,IAAMoD,IAAN,iDACGlD,MAAK,SAAAC,GACJ,IAAMsM,EAAWtM,EAAIkD,KACrB,EAAKzC,SAAS,CAAE6L,gBAElBzM,IAAMoD,IAAN,oDACClD,MAAK,SAAAC,GACJ,IAAMoN,EAAWpN,EAAIkD,KACrB,EAAKzC,SAAS,CAAE2M,kB,0BAyBtB,SAAa1M,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,U,uBAuBtC,WACEJ,KAAKC,SAAS,CACZF,aAAa,M,wBAKjB,WACEC,KAAKC,SAAS,CACZF,aAAa,M,oBAIjB,WAAU,IAAD,OA+BP,OA9BAC,KAAK3G,MAAMuT,SAAS9J,SAAQ,SAAAE,GAC1BJ,QAAQC,IAAIG,MAGdhD,KAAK3G,MAAMoS,QAAQ3I,SAAQ,SAAAC,GACa,SAAlCvF,eAAeC,QAAQ,QACrBsF,EAASf,UAAYxE,eAAeC,QAAQ,QAC9C,EAAKpE,MAAMkJ,EAAEU,KAAKF,GAClB,EAAK1J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,KAIP,QAAlC/E,eAAeC,QAAQ,QAC1BsF,EAASf,UAAYxE,eAAeC,QAAQ,cAC9C,EAAKpE,MAAMkJ,EAAEU,KAAKF,GAClB,EAAK1J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,KAK5CQ,EAASd,MAAQzE,eAAeC,QAAQ,QAC1C,EAAKpE,MAAMkJ,EAAEU,KAAKF,GAClB,EAAK1J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,QASlD,qCACE,cAAC,IAAD,CAAMxF,UAAU,SAAShB,GAAI,CAAE1G,KAAM,QAASmB,GAAI,QAAlD,SACE,eAAC,GAAD,CAAM6M,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,UAArC,UACE,cAAC,GAAD,CAAYoL,EAAE,mBAAd,SACE,eAAC,IAAD,CAAMM,QAAQ,gBAAgBR,MAAM,SAAS3K,GAAG,OAAOiD,EAAE,OAAzD,UACE,cAAC,IAAD,CAAM6C,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,OAAhD,uCAGA,eAAC,IAAD,CACEmC,YAAY,UACZpB,YAAY,UACZ1F,MAAM,UACNiD,QAAQ,UACR+C,SAAS,KACT+E,EAAE,WACFhE,QAAS,WAAQ,EAAKiE,aAPxB,UASE,cAAC,IAAD,CAAM3K,GAAIsN,IAAQ/M,GAAG,QATvB,qCAcJ,cAAC,GAAD,UACE,eAAC,IAAD,CAAOqC,QAAQ,SAASjD,MAAM,WAA9B,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAI+F,GAAG,QAAQ6E,GAAG,MAAM5K,MAAM,WAA9B,UACE,cAAC,IAAD,CAAIA,MAAM,WAAV,8BAGA,cAAC,IAAD,CAAIA,MAAM,WAAV,kBACA,cAAC,IAAD,CAAIA,MAAM,WAAV,mBACA,cAAC,IAAD,CAAIA,MAAM,WAAV,oBACA,cAAC,IAAD,CAAIA,MAAM,WAAV,qBACA,cAAC,IAAD,SAIJ,cAAC,IAAD,UAEGqK,KAAK3G,MAAMoS,QAAQxR,KAAI,SAACyR,GAEvB,OACE,cAAC,GAAD,CACEzW,GAAIyW,EAAI9M,IACRC,UAAW6M,EAAI7M,UACfC,SAAU4M,EAAI5M,SACdgD,KAAM4J,EAAI5J,KACVC,MAAO2J,EAAI3J,MACXmH,OAAQwC,EAAIxC,wBAW5B,eAAC,IAAD,CACE9M,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAFxB,UAIE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAM7L,GAAG,OAAO8L,SAAUf,KAAKzB,aAA/B,UACE,cAAC,IAAD,yCACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW7I,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,wBACA,cAAC,IAAD,CAAO0L,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,cAAc2C,aAAc3D,eAAeC,QAAQ,aAAc6D,YAAY,cAClI,cAAC,KAAD,kBACA,cAAC,IAAD,CAAOF,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAAa2C,aAAc3D,eAAeC,QAAQ,YAAa6D,YAAY,QAChI,cAAC,KAAD,8BACA,cAAC,IAAD,CAAOF,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU2C,aAAc3D,eAAeC,QAAQ,SAAU6D,YAAY,oBAC1H,cAAC,KAAD,mBACA,cAAC,IAAD,CAAOE,KAAK,OAAOJ,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,SAAS8C,YAAY,SACtF,cAAC,KAAD,oBACA,cAAC,IAAD,CAAOF,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,eAI/E,eAAC,IAAD,WACE,cAAC,IAAD,CAAQE,KAAK,SAAS/E,YAAY,OAAOgF,GAAI,EAA7C,qBAGA,cAAC,IAAD,CAAQ/E,QAAS,WAAQ,EAAKoE,cAA9B,uC,GAvMK3H,IAAMuI,WAiNZqJ,MCrMT8B,G,kDAeJ,WAAY1X,GAAQ,IAAD,8BAGjB,cAAMA,IAgBR6T,OAnBmB,sBAmBV,4BAAAvK,EAAA,sDACDuD,EAAW,CACfpD,IAAK,EAAKzJ,MAAMF,IAElBoK,IAAM6C,KAAN,sDAAkEF,GAC/DzC,MAAK,SAAAC,GAGJC,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,cAVH,2CAnBU,EAiCnBtB,aAjCmB,uCAiCJ,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAsD,EAAW,CACfpD,IAAK,EAAKzJ,MAAMF,GAChBiP,YAAa,EAAK7K,MAAM6K,YACxBE,iBAAkB,EAAK/K,MAAM+K,iBAC7BE,cAAe,EAAKjL,MAAMiL,cAC1BE,YAAa,EAAKnL,MAAMmL,YACxBzF,MAAO,EAAK1F,MAAM0F,OAIpBM,IAAM6C,KAAN,sDAAkEF,GAC/DzC,MAAK,SAAAC,GAGJC,OAAOxG,SAASyG,QAAO,MAEtBC,OAAM,SAAAC,GACPC,MAAM,kCApBG,2CAjCI,sDAIjB,EAAKxG,MAAQ,CACX6K,YAAa,GACbE,iBAAkB,GAClBE,cAAe,GACfE,YAAa,GACbzF,MAAO,GACP9J,GAAI,GACJ8K,aAAa,GAXE,E,qDAXnB,WACE,MAAiFC,KAAK7K,MAA9E+O,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,iBAAkBE,EAAvC,EAAuCA,cAAeE,EAAtD,EAAsDA,YAAazF,EAAnE,EAAmEA,MAAO9J,EAA1E,EAA0EA,GAC1E+K,KAAKC,SAAS,CAAEiE,gBAChBlE,KAAKC,SAAS,CAAEmE,qBAChBpE,KAAKC,SAAS,CAAEqE,kBAChBtE,KAAKC,SAAS,CAAEuE,gBAChBxE,KAAKC,SAAS,CAAElB,UAChBiB,KAAKC,SAAS,CAAEhL,S,0BAkBlB,SAAaiL,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,U,uBA0CtC,SAAUC,GACRL,KAAKC,SAAS,CACZF,aAAa,EACb9K,GAAIoL,M,wBAIR,WACEL,KAAKC,SAAS,CACZF,aAAa,M,oBAIjB,WAAU,IAAD,OACP,EAAiFC,KAAK7K,MAA9E+O,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,iBAAkBE,EAAvC,EAAuCA,cAAeE,EAAtD,EAAsDA,YAAazF,EAAnE,EAAmEA,MAAO9J,EAA1E,EAA0EA,GAI1E,OACE,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAIqL,SAAU,CAAE7F,GAAI,SAAW8F,GAAG,MAAlC,SACE,cAAC,IAAD,CAAMC,MAAM,SAAS9F,GAAG,QAAQ4F,SAAS,OAAOG,SAAS,SAAzD,SAEE,eAAC,IAAD,CAAM1D,UAAU,SAAhB,UACE,cAAC,IAAD,CACEpB,SAAS,KACThG,MAAO,WACP2E,WAAW,OACXgG,SAAS,OAJX,SAMG4D,IAEH,cAAC,IAAD,CAAMvI,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,SAAhD,SACGyE,WAQT,cAAC,IAAD,UACE,cAAC,IAAD,CAAMhC,UAAU,SAAhB,SACE,cAAC,IAAD,CAAMpB,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAlD,SACGgK,QAKP,cAAC,IAAD,UACE,cAAC,IAAD,CAAMvH,UAAU,SAAhB,SACE,cAAC,IAAD,CAAMpB,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAlD,SACGkK,QAKP,cAAC,IAAD,UACE,cAAC,IAAD,CAAMzH,UAAU,SAAhB,SACE,cAAC,IAAD,CAAMpB,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAlD,SACG8J,QASP,cAAC,IAAD,UACE,eAAC,IAAD,CACErH,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,aACNE,EAAG,CAAElK,GAAI,QAHX,UAKE,eAAC,KAAD,CACE2T,gBAAiBnK,KAAK3G,MAAM0G,YAC5BzD,QAAS,WAAQ,EAAKwE,cACtBnE,UAAU,QACVyN,aAAa,EAJf,UAME,cAAC,KAAD,UACE,cAAC,IAAD,CACE1J,EAAE,MACF3H,GAAG,cACHlD,GAAI,CAAE4E,GAAI,OAAQjE,GAAI,OACtBD,GAAI,CAAEC,GAAI,QAJZ,SAME,cAAC,IAAD,CAAMb,MAAM,UAAUiL,OAAO,UAAUJ,MAAM,SAASE,EAAE,OAAxD,SACE,cAAC,IAAD,CAAM1K,GAAIqU,IAAY9T,GAAG,cAK/B,eAAC,KAAD,WACE,cAAC,KAAD,CAAe+D,WAAW,WAA1B,0BACA,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,sEAGA,cAAC,KAAD,CAAexD,EAAE,OAAOtB,eAAe,WAAvC,SACE,cAAC,IAAD,CAAa+L,KAAK,KAAlB,SACE,cAAC,IAAD,CAAQ7E,QAAS,WAAQ,EAAKsM,UAAYvM,YAAY,MAAtD,+BAOR,cAAC,IAAD,CAAQC,QAAS,WAAQ,EAAKiE,UAAU1L,IAAOyL,EAAE,MAAM3H,GAAG,cAA1D,SACE,cAAC,IAAD,CAAMpD,MAAM,WAAWiL,OAAO,UAAUJ,MAAM,SAASE,EAAE,OAAzD,SACE,cAAC,IAAD,CAAM1K,GAAI6K,IAAatK,GAAG,oBAQpC,eAAC,IAAD,CACE6F,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAFxB,UAGE,cAAC,IAAD,IACA,cAAC,IAAD,UACE,uBAAMC,SAAUf,KAAKzB,aAArB,UAEE,cAAC,IAAD,gCACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW7I,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,6BACA,cAAC,IAAD,CACEqH,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,SAQE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAEvC,cAAC,IAAD,CAAOwL,aAAc+C,EAAa9C,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,gBAAgB8C,YAAY,sBAGhH,cAAC,KAAD,+BACA,cAAC,IAAD,CACEvE,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,SAQE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAa7C,MAAM,eAE/B,cAAC,IAAD,CAAOwL,aAAcpC,EAAOqC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,wBAKpG,cAAC,KAAD,+BACA,cAAC,IAAD,CACEvE,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,SAQE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAa7C,MAAM,eAE/B,cAAC,IAAD,CAAOwL,aAAcmD,EAAelD,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,kBAAkB8C,YAAY,wBAKpH,cAAC,KAAD,6BACA,cAAC,IAAD,CACEvE,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,SAQE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAa7C,MAAM,eAE/B,cAAC,IAAD,CAAOwL,aAAcqD,EAAapD,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,gBAAgB8C,YAAY,sBAKhH,cAAC,KAAD,iCACA,cAAC,IAAD,CACEvE,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,SAQE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAa7C,MAAM,eAE/B,cAAC,IAAD,CAAOwL,aAAciD,EAAkBhD,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,qBAAqB8C,YAAY,+BAQ9H,eAAC,IAAD,WACE,cAAC,IAAD,CAAQE,KAAK,SAASzI,GAAG,WACvBpD,MAAM,QAAQ8L,GAAI,EADpB,qBAIA,cAAC,IAAD,CAAQ/E,QAAS,WAAQ,EAAKoE,cAA9B,uC,GAjTqB3H,IAAMuI,WA8T5BmL,MC/TTC,G,kDAUJ,aAAe,IAAD,8BACZ,gBAkBFvO,aAnBc,uCAmBC,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAsD,EAAW,CACfkC,YAAa,EAAK7K,MAAM6K,YACxBE,iBAAkB,EAAK/K,MAAM+K,iBAC7BE,cAAe,EAAKjL,MAAMiL,cAC1BvF,MAAO,EAAK1F,MAAM0F,MAClByF,YAAa,EAAKnL,MAAMmL,aAM1BnF,IAAM6C,KAAK,6DAA8DF,GACtEzC,MAAK,SAAAC,GAEJC,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPgD,QAAQC,IAAIZ,MACZpC,MAAM,kCApBG,2CAnBD,sDAGZ,EAAKxG,MAAQ,CACX6K,YAAa,GACbE,iBAAkB,GAClBE,cAAe,GACfvF,MAAO,GAEPyF,YAAa,GACb3C,SAAS,EACTD,WAAW,EACX7B,aAAa,EACb0L,QAAS,IAbC,E,qDAPd,WAAqB,IAAD,OAClBpM,IAAMoD,IAAN,oDACGlD,MAAK,SAAAC,GACJ,IAAMiM,EAAUjM,EAAIkD,KACpB,EAAKzC,SAAS,CAAEwL,iB,0BAmBtB,SAAavL,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,U,uBA0BtC,WACEJ,KAAKC,SAAS,CACZF,aAAa,M,wBAKjB,WACEC,KAAKC,SAAS,CACZF,aAAa,M,oBAKjB,WAAU,IAAD,OAGP,OACE,qCACE,eAAC,IAAD,CAAMhD,UAAU,SAAShB,GAAI,CAAE1G,KAAM,QAASmB,GAAI,QAAlD,UACE,eAAC,GAAD,CAAM6M,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,UAArC,UACE,cAAC,GAAD,CAAYoL,EAAE,mBAAd,SACE,eAAC,IAAD,CAAMM,QAAQ,gBAAgBR,MAAM,SAAS3K,GAAG,OAAOiD,EAAE,OAAzD,UACE,cAAC,IAAD,CAAM6C,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAlD,gCAGA,eAAC,IAAD,CACEmC,YAAY,UACZpB,YAAY,UACZ1F,MAAM,UACNiD,QAAQ,UACR+C,SAAS,KACT+E,EAAE,WACFhE,QAAS,WAAQ,EAAKiE,aAPxB,UASE,cAAC,IAAD,CAAM3K,GAAIsN,IAAQ/M,GAAG,QATvB,8BAgBJ,cAAC,GAAD,UACE,eAAC,IAAD,CAAOqC,QAAQ,SAASjD,MAAO,WAA/B,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAI+F,GAAG,QAAQ6E,GAAG,MAAM5K,MAAM,WAA9B,UAEE,cAAC,IAAD,CAAIA,MAAM,SAAV,uBACA,cAAC,IAAD,CAAIA,MAAM,SAAV,mBAEA,cAAC,IAAD,CAAIA,MAAM,SAAV,yBACA,cAAC,IAAD,CAAIA,MAAM,SAAV,8BACA,cAAC,IAAD,CAAIA,MAAM,SAAV,yBAGJ,cAAC,IAAD,UACGqK,KAAK3G,MAAMoS,QAAQxR,KAAI,SAACyR,GAEvB,OACE,cAAC,GAAD,CACEzW,GAAIyW,EAAI9M,IACRG,MAAO2M,EAAI3M,MACXmF,YAAawH,EAAIxH,YACjBE,iBAAkBsH,EAAItH,iBACtBE,cAAeoH,EAAIpH,cACnBE,YAAakH,EAAIlH,2BAS/B,cAAC,GAAD,CACE9I,GAAG,OACH2H,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,eAInC,eAAC,IAAD,CACE8G,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAFxB,UAIE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAM7L,GAAG,OAAO8L,SAAUf,KAAKzB,aAA/B,UACE,cAAC,IAAD,kCACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW7I,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,2BACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEwL,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAEvC,cAAC,IAAD,CACEyL,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,gBAC9C8C,YAAY,eACZjG,YAAY,WACZmI,iBAAiB,eAKrB,cAAC,KAAD,oBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAe7C,MAAM,eAEjC,cAAC,IAAD,CACE6L,KAAK,QACLJ,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAC9C8C,YAAY,QACZjG,YAAY,WACZmI,iBAAiB,eAErB,cAAC,KAAD,sBACA,cAAC,IAAD,CACEpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,qBAC9C8C,YAAY,WACZjG,YAAY,WACZmI,iBAAiB,YACjB,cAAC,KAAD,oBACA,cAAC,IAAD,CACEpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,kBAC9C8C,YAAY,QACZjG,YAAY,WACZmI,iBAAiB,YAEnB,cAAC,KAAD,kBACA,cAAC,IAAD,CACEpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,gBAC9C8C,YAAY,MACZjG,YAAY,WACZmI,iBAAiB,YACnB,cAAC,IAAD,CACEzG,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,aAUhB,eAAC,IAAD,WACE,cAAC,IAAD,CAAQO,KAAK,SAASzI,GAAG,UACvBpD,MAAM,QAAQ8L,GAAI,EAClBtG,OAAQ,CACNpC,GAAI,WAENqC,QAAS,CACPrC,GAAI,WANR,qBAWA,cAAC,IAAD,CAAQ2D,QAAS,WAAQ,EAAKoE,cAAgB/H,GAAG,WAAjD,uC,GA5NQI,IAAMuI,WAuOfoL,MCvOTC,G,kDAiBJ,WAAY5X,GAAQ,IAAD,8BAGjB,cAAMA,IAwBR6T,OA3BmB,sBA2BV,4BAAAvK,EAAA,sDACDwD,EAAO,CACXrD,IAAK,EAAKzJ,MAAMF,IAElBoK,IAAM6C,KAAN,mDAA+DD,GAC5D1C,MAAK,SAAAC,GAGJC,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,cAVH,2CA3BU,EAyCnBtB,aAzCmB,uCAyCJ,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAuD,EAAO,CACXrD,IAAK,EAAKzJ,MAAMF,GAChB4J,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBG,MAAO,EAAK5F,MAAM4F,MAClByH,IAAK,EAAKrN,MAAMqN,IAChB3H,MAAO,EAAK1F,MAAM0F,MAClBC,SAAU,EAAK3F,MAAM2F,SACrB6H,OAAQ,EAAKxN,MAAMwN,OACnBzH,WAAY,EAAK/F,MAAM+F,WACvB4C,SAAS,EAAK3I,MAAM2I,UAEtB3C,IAAMC,IAAN,mDAA8D2C,GAC3D1C,MAAK,SAAAC,GAGJC,OAAOxG,SAASyG,QAAO,MAEtBC,OAAM,SAAAC,GACPC,MAAM,kCAtBG,2CAzCI,sDAIjB,EAAKxG,MAAQ,CACXwF,UAAW,GACXC,SAAU,GACVG,MAAO,GACPyH,IAAK,GACL3H,MAAO,GACPC,SAAU,GACV6H,OAAQ,GACRzH,WAAY,GACZ4C,SAAS,GACTJ,WAAU,EACVC,SAAQ,EACR9B,aAAa,GAhBE,E,qDAhBnB,WACE,MAAiHC,KAAK7K,MAA9G0M,EAAR,EAAQA,QAAQD,EAAhB,EAAgBA,UAAU/C,EAA1B,EAA0BA,UAAWC,EAArC,EAAqCA,SAAUG,EAA/C,EAA+CA,MAAOyH,EAAtD,EAAsDA,IAAK3H,EAA3D,EAA2DA,MAAOC,EAAlE,EAAkEA,SAAU6H,EAA5E,EAA4EA,OAAQzH,EAApF,EAAoFA,WAAYnK,EAAhG,EAAgGA,GAAI+M,EAApG,EAAoGA,SACpGhC,KAAKC,SAAS,CAAEpB,cAChBmB,KAAKC,SAAS,CAAEnB,aAChBkB,KAAKC,SAAS,CAAEhB,UAChBe,KAAKC,SAAS,CAAEyG,QAChB1G,KAAKC,SAAS,CAAElB,UAChBiB,KAAKC,SAAS,CAAEjB,aAChBgB,KAAKC,SAAS,CAAE4G,WAChB7G,KAAKC,SAAS,CAAEb,eAChBY,KAAKC,SAAS,CAAEhL,OAChB+K,KAAKC,SAAS,CAAC2B,cACf5B,KAAKC,SAAS,CAAC4B,YACf7B,KAAKC,SAAS,CAAC+B,e,0BAsBjB,SAAa9B,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,U,yBAGtC,SAAYF,EAAKC,GACfH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAOsM,UACrCC,QAAQC,IAAI3C,EAAI7J,OAAOsM,W,uBA0CxB,SAAUtC,GACRL,KAAKC,SAAS,CACZF,aAAa,EACb9K,GAAIoL,M,wBAIR,WACEL,KAAKC,SAAS,CACZF,aAAa,M,oBAIjB,WAAU,IAAD,OACP,EAAgHC,KAAK7K,MAA3F0J,GAA1B,EAAQ+C,UAAR,EAAkBC,QAAlB,EAA0BhD,WAAWC,EAArC,EAAqCA,SAAUG,EAA/C,EAA+CA,MAAOyH,EAAtD,EAAsDA,IAAK3H,EAA3D,EAA2DA,MAAOC,EAAlE,EAAkEA,SAAU6H,EAA5E,EAA4EA,OAAQzH,EAApF,EAAoFA,WAAYnK,EAAhG,EAAgGA,GAAhG,EAAoG+M,SAIpG,OACE,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAI1B,SAAU,CAAE7F,GAAI,SAAW8F,GAAG,MAAlC,SACE,cAAC,IAAD,CAAMC,MAAM,SAAS9F,GAAG,QAAQ4F,SAAS,OAAOG,SAAS,SAAzD,SAEE,eAAC,IAAD,CAAM1D,UAAU,SAAhB,UACE,eAAC,IAAD,CACEpB,SAAS,KACThG,MAAO,WACP2E,WAAW,OACXgG,SAAS,OAJX,UAMGzB,EANH,IAMeC,KAEf,cAAC,IAAD,CAAMnD,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,SAAhD,SACGyE,WAMT,cAAC,IAAD,UACE,cAAC,IAAD,CAAMhC,UAAU,SAAhB,SACE,cAAC,IAAD,CAAMpB,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAlD,SACG2E,QAKP,eAAC,IAAD,WACE,cAAC,IAAD,CAAMtD,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAO5E,GAAG,QAA5D,SACGsJ,IAEH,eAAC,IAAD,CAAMrD,SAAS,KAAKhG,MAAM,WAAW2E,WAAW,SAAhD,UACGoM,EADH,aAKF,cAAC,IAAD,UACE,cAAC,IAAD,CAAM/K,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAO5E,GAAG,QAA5D,SACGmR,MAGL,cAAC,IAAD,UACE,cAAC,IAAD,CAAMlL,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAO5E,GAAG,QAA5D,SACG0J,MAKL,cAAC,IAAD,UACE,eAAC,IAAD,CACErC,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,aACNE,EAAG,CAAElK,GAAI,QAHX,UAKE,eAAC,KAAD,CACE2T,gBAAiBnK,KAAK3G,MAAM0G,YAC5BzD,QAAS,WAAQ,EAAKwE,cACtBnE,UAAU,QACVyN,aAAa,EAJf,UAME,cAAC,KAAD,UACE,cAAC,IAAD,CACE1J,EAAE,MACF3H,GAAG,cACHlD,GAAI,CAAE4E,GAAI,OAAQjE,GAAI,OACtBD,GAAI,CAAEC,GAAI,QAJZ,SAME,cAAC,IAAD,CAAMb,MAAM,UAAUiL,OAAO,UAAUJ,MAAM,SAASE,EAAE,OAAxD,SACE,cAAC,IAAD,CAAM1K,GAAIqU,IAAY9T,GAAG,cAK/B,eAAC,KAAD,WACE,cAAC,KAAD,CAAe+D,WAAW,WAA1B,0BACA,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,sEAGA,cAAC,KAAD,CAAexD,EAAE,OAAOtB,eAAe,WAAvC,SACE,cAAC,IAAD,CAAa+L,KAAK,KAAlB,SACE,cAAC,IAAD,CAAQ7E,QAAS,WAAQ,EAAKsM,UAAYvM,YAAY,MAAtD,+BAOR,cAAC,IAAD,CAAQC,QAAS,WAAQ,EAAKiE,UAAU1L,IAAOyL,EAAE,MAAM3H,GAAG,cAA1D,SACE,cAAC,IAAD,CAAMpD,MAAM,WAAWiL,OAAO,UAAUJ,MAAM,SAASE,EAAE,OAAzD,SACE,cAAC,IAAD,CAAM1K,GAAI6K,IAAatK,GAAG,oBAQpC,eAAC,IAAD,CACE6F,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAFxB,UAGE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAMC,SAAUf,KAAKzB,aAArB,UAEE,cAAC,IAAD,4BACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW7I,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,8BACA,eAAC,IAAD,CACEqH,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,UAQE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAEvC,cAAC,IAAD,CAAOwL,aAActC,EAAWuC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,cAAc8C,YAAY,iBAE1G,eAAC,IAAD,WACE,cAAC,IAAD,CACEJ,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAEvC,cAAC,IAAD,CAAOwL,aAAcrC,EAAUsC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAAa8C,YAAY,cAG1G,cAAC,KAAD,oBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEJ,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAa7C,MAAM,eAE/B,cAAC,IAAD,CAAOwL,aAAclC,EAAOmC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,aAElG,cAAC,KAAD,kBACA,cAAC,IAAD,CAAOH,aAAcuF,EAAKtF,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,QAAQ8C,YAAY,QAC5F,cAAC,KAAD,oBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEJ,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAe7C,MAAM,eAEjC,cAAC,IAAD,CAAOwL,aAAcpC,EAAOqC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAAU8C,YAAY,aAIlG,cAAC,IAAD,CACEvE,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,SAQE,cAAC,KAAD,MAGF,eAAC,IAAD,CACElE,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,UAQE,eAAC,IAAD,CAAQtF,SAAS,KACfmB,GAAG,MACHpE,aAAa,OACb7C,GAAG,MACH0L,KAAK,KACLH,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,WALhD,UAOE,wBAAQ4B,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,sBAKF,eAAC,IAAD,CAAQzE,SAAS,KACfmB,GAAG,MACHpE,aAAa,OACb7C,GAAG,MACH0L,KAAK,KACLH,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,eALhD,UAME,wBAAQ4B,MAAM,iBAAd,4BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,iBAAd,uCAMR,eAAC,IAAD,WACE,cAAC,IAAD,CAAQoB,KAAK,SAASzI,GAAG,WACzBpD,MAAM,QAAQ8L,GAAI,EADlB,qBAIA,cAAC,IAAD,CAAQ/E,QAAS,WAAQ,EAAKoE,cAA9B,uC,GAxTiB3H,IAAMuI,WAoUxBqL,MCpUTC,G,kDAUJ,aAAe,IAAD,8BACZ,gBAyCFzO,aA1Cc,uCA0CC,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAuD,EAAO,CACXpD,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBG,MAAO,EAAK5F,MAAM4F,MAClBF,MAAO,EAAK1F,MAAM0F,MAClB2H,IAAK,EAAKrN,MAAMqN,IAEhBtH,WAAY,EAAK/F,MAAM+F,WACvByH,OAAQ,EAAKxN,MAAMwN,OACnB7E,SAAUxE,eAAeC,QAAQ,MACjCmE,UAAW,EAAKvI,MAAMuI,UACtBC,QAAS,EAAKxI,MAAMwI,SAGtBe,QAAQC,IAAI,EAAKxJ,MAAMuI,WACvBvC,IAAM6C,KAAK,wDAAyDD,GACjE1C,MAAK,SAAAC,GAEJC,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPgD,QAAQC,IAAIZ,GACZpC,MAAM,kCAxBG,2CA1CD,sDAGZ,EAAKxG,MAAQ,CACXwF,UAAW,GACXC,SAAU,GACVG,MAAO,GACPF,MAAO,GACPC,SAAU,GACV6H,OAAQ,GACRzH,WAAY,iBACZsH,IAAK,GAEL1E,SAAU,GACVH,SAAS,EACTD,WAAW,EACX7B,aAAa,EACb0L,QAAS,GAETlJ,EAAG,GACHC,GAAI,IApBM,E,qDAPd,WAAqB,IAAD,OAClBnD,IAAMoD,IAAN,iDACGlD,MAAK,SAAAC,GACJ,IAAMiM,EAAUjM,EAAIkD,KACpB,EAAKzC,SAAS,CAAEwL,iB,0BA0BtB,SAAavL,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,QAEvB,aAATD,IACFH,KAAK3G,MAAMuI,UAAY1B,EAAI7J,OAAOsM,QAClC3C,KAAKC,SAAS,CAAE2B,UAAW1B,EAAI7J,OAAOsM,UACtCC,QAAQC,IAAI7C,KAAK3G,MAAM0F,QAGZ,WAAToB,IACFH,KAAK3G,MAAMwI,QAAU3B,EAAI7J,OAAOsM,QAChC3C,KAAKC,SAAS,CAAE4B,QAAS3B,EAAI7J,OAAOsM,UACpCC,QAAQC,IAAI7C,KAAK3G,MAAMwI,Y,uBAmC3B,WACE7B,KAAKC,SAAS,CACZF,aAAa,M,wBAKjB,WACEC,KAAKC,SAAS,CACZF,aAAa,M,oBAKjB,WAAU,IAAD,OAsBP,MArBsC,YAAlCvC,eAAeC,QAAQ,QACzBuC,KAAK3G,MAAMoS,QAAQ3I,SAAQ,SAAAC,GACzB,EAAK1J,MAAMkJ,EAAEU,KAAKF,GAClB,EAAK1J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,OAKL,SAAlC/E,eAAeC,QAAQ,SAChCuC,KAAK3G,MAAMoS,QAAQ3I,SAAQ,SAAAC,GACrBA,EAASf,UAAYxE,eAAeC,QAAQ,QAC9C,EAAKpE,MAAMkJ,EAAEU,KAAKF,GAClB,EAAK1J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,QAUlD,qCACE,eAAC,IAAD,CAAMxF,UAAU,SAAShB,GAAI,CAAE1G,KAAM,QAASmB,GAAI,QAAlD,UACE,eAAC,GAAD,CAAM6M,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,UAArC,UACE,cAAC,GAAD,CAAYoL,EAAE,mBAAd,SACE,eAAC,IAAD,CAAMM,QAAQ,gBAAgBR,MAAM,SAAS3K,GAAG,OAAOiD,EAAE,OAAzD,UACE,cAAC,IAAD,CAAM6C,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAlD,mCAGA,eAAC,IAAD,CACEmC,YAAY,UACZpB,YAAY,UACZ1F,MAAM,UACNiD,QAAQ,UACR+C,SAAS,KACT+E,EAAE,WACFhE,QAAS,WAAQ,EAAKiE,aAPxB,UASE,cAAC,IAAD,CAAM3K,GAAIsN,IAAQ/M,GAAG,QATvB,0BAgBJ,cAAC,GAAD,UACE,eAAC,IAAD,CAAOqC,QAAQ,SAASjD,MAAO,WAA/B,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAI+F,GAAG,QAAQ6E,GAAG,MAAM5K,MAAM,WAA9B,UACE,cAAC,IAAD,CAAI4K,GAAG,MAAM5K,MAAM,SAAnB,yBAGA,cAAC,IAAD,CAAIA,MAAM,SAAV,mBACA,cAAC,IAAD,CAAIA,MAAM,SAAV,sBACA,cAAC,IAAD,CAAIA,MAAM,SAAV,oBACA,cAAC,IAAD,CAAIA,MAAM,SAAV,kCACA,cAAC,IAAD,CAAIA,MAAM,SAAV,yBAGJ,cAAC,IAAD,UACGqK,KAAK3G,MAAMmJ,GAAGvI,KAAI,SAACyR,GAElB,OACE,cAAC,GAAD,CACEzW,GAAIyW,EAAI9M,IACRC,UAAW6M,EAAI7M,UACfC,SAAU4M,EAAI5M,SACdG,MAAOyM,EAAIzM,MACXyH,IAAKgF,EAAIhF,IACT3H,MAAO2M,EAAI3M,MACXe,SAAU4L,EAAI5L,SACdd,SAAU0M,EAAI1M,SACd6H,OAAQ6E,EAAI7E,OACZzH,WAAYsM,EAAItM,WAChBwC,UAAW8J,EAAI9J,UACfC,QAAS6J,EAAI7J,uBAU3B,cAAC,GAAD,CACEnG,GAAG,OACH2H,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,eAInC,eAAC,IAAD,CACE8G,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAFxB,UAIE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAM7L,GAAG,OAAO8L,SAAUf,KAAKzB,aAA/B,UACE,cAAC,IAAD,8BACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW7I,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,8BACA,eAAC,IAAD,CACEqH,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,UAQE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAEvC,cAAC,IAAD,CACEyL,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,cAC9C8C,YAAY,YACZjG,YAAY,WACZmI,iBAAiB,eAErB,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAEvC,cAAC,IAAD,CACEyL,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAC9C8C,YAAY,MACZjG,YAAY,WACZmI,iBAAiB,kBAGvB,cAAC,KAAD,8BACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAa7C,MAAM,eAI/B,cAAC,IAAD,CACEyL,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAC9C8C,YAAY,kBACZjG,YAAY,WACZmI,iBAAiB,eAErB,cAAC,KAAD,oBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAe7C,MAAM,eAEjC,cAAC,IAAD,CACE6L,KAAK,QACLJ,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAC9C8C,YAAY,QACZjG,YAAY,WACZmI,iBAAiB,eAErB,cAAC,KAAD,kBACA,cAAC,IAAD,CACEpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,QAC9C8C,YAAY,MACZjG,YAAY,WACZmI,iBAAiB,YAEnB,cAAC,IAAD,CACEzG,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,SAQE,cAAC,KAAD,MAGF,eAAC,IAAD,CACElE,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,UAQE,eAAC,IAAD,CAAQtF,SAAS,KACfmB,GAAG,MACHpE,aAAa,OACb7C,GAAG,MACH0L,KAAK,KACLlG,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,WAPhD,UAQE,wBAAQ4B,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,sBAIF,eAAC,IAAD,CAAQzE,SAAS,KACfmB,GAAG,MACHpE,aAAa,OACb7C,GAAG,MACH0L,KAAK,KACLlG,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,eAPhD,UAQE,wBAAQ4B,MAAM,iBAAd,4BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,iBAAd,kCAIJ,cAAC,IAAD,CACEgB,SAAU,SAAC5C,GACT,EAAK6C,aAAa7C,EAAO,gBApH/B,aAyHE,cAAC,IAAD,CACE4C,SAAU,SAAC5C,GACT,EAAK6C,aAAa7C,EAAO,cA3H/B,gBAoIF,eAAC,IAAD,WACE,cAAC,IAAD,CAAQgD,KAAK,SAASzI,GAAG,UACvBpD,MAAM,QAAQ8L,GAAI,EAClBtG,OAAQ,CACNpC,GAAI,WAENqC,QAAS,CACPrC,GAAI,WANR,qBAWA,cAAC,IAAD,CAAQ2D,QAAS,WAAQ,EAAKoE,cAAgB/H,GAAG,WAAjD,uC,GAtVII,IAAMuI,WAiWXsL,MCxVTC,G,kDAkBJ,aAAe,IAAD,8BACZ,gBAwCF1O,aAzCc,uCAyCC,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAC,EAAU,CACdE,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBG,MAAO,EAAK5F,MAAM4F,MAClBF,MAAO,EAAK1F,MAAM0F,MAClBC,SAAU,EAAK3F,MAAM2F,SACrBE,QAAS,EAAK7F,MAAM6F,QACpBY,SAAU,EAAKzG,MAAMyG,SACrBV,WAAY,EAAK/F,MAAM+F,WACvBD,eAAgB,EAAK9F,MAAM8F,eAC3ByC,UAAW,EAAKvI,MAAMuI,UACtBC,QAAU,EAAKxI,MAAMwI,SAGH,CAClBhD,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBG,MAAO,EAAK5F,MAAM4F,MAClB6C,KAAM,EAAKzI,MAAMyI,KACjBC,MAAO,EAAK1I,MAAM0I,MAClBC,SAAU,EAAK3I,MAAM2I,SACrBC,KAAM,EAAK5I,MAAM4I,MAEnB5C,IAAM6C,KAAK,0DAA2DvD,GACnEY,MAAK,SAAAC,GAEJC,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPC,MAAM,kCA/BG,2CAzCD,sDAGZ,EAAKxG,MAAQ,CACXwF,UAAW,GACXC,SAAU,GACVG,MAAO,GACPF,MAAO,GACPC,SAAU,GACVE,QAAS,GACTE,WAAY,GACZD,eAAgB,GAChBW,SAAU,GACVqC,OAAQ,GACRH,SAAU,GACVH,SAAS,EACTD,WAAW,EACX7B,aAAa,EACbqC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,EAAG,GACHC,GAAI,IAtBM,E,qDAfd,WAAqB,IAAD,OAClBnD,IAAMoD,IAAN,6DACGlD,MAAK,SAAAC,GACJ,IAAM4C,EAAW5C,EAAIkD,KACrB,EAAKzC,SAAS,CAAEmC,gBAGpB/C,IAAMoD,IAAN,mDACGlD,MAAK,SAAAC,GAEJ,IAAM6C,EAAW7C,EAAIkD,KACrB,EAAKzC,SAAS,CAAEoC,kB,0BA6BtB,SAAanC,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,QACvB,aAATD,IACFH,KAAK3G,MAAMuI,UAAY1B,EAAI7J,OAAOsM,QAClC3C,KAAKC,SAAS,CAAC2B,UAAU1B,EAAI7J,OAAOsM,UACpCC,QAAQC,IAAI7C,KAAK3G,MAAM0F,QAGZ,WAAToB,IAEFH,KAAK3G,MAAMwI,QAAU3B,EAAI7J,OAAOsM,QAChC3C,KAAKC,SAAS,CAAC4B,QAAQ3B,EAAI7J,OAAOsM,UAClCC,QAAQC,IAAI7C,KAAK3G,MAAMwI,Y,uBAuC3B,WACE7B,KAAKC,SAAS,CACZF,aAAa,M,wBAMjB,WACEC,KAAKC,SAAS,CACZF,aAAa,M,oBAIjB,WAAU,IAAD,OA4BP,OAxBAC,KAAK3G,MAAM+I,SAASU,SAAQ,SAAAC,GAC1B,EAAK1J,MAAMgJ,SAASS,SAAQ,SAAAE,IACtBD,EAASf,UAAYxE,eAAeC,QAAQ,OAASuF,EAAQpE,KAAOmE,EAASd,MAMvEzE,eAAeC,QAAQ,aAAasF,EAASf,UAAYgB,EAAQpE,KAAOmE,EAASd,QALzF,EAAK5I,MAAMkJ,EAAEU,KAAKD,GAClB,EAAK3J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,WAahB,YAAhC/E,eAAeC,QAAQ,SAEzBuC,KAAK3G,MAAMgJ,SAASS,SAAQ,SAAAE,GACxB,EAAK3J,MAAMkJ,EAAEU,KAAKD,GAClB,EAAK3J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,OAIlD,mCACE,eAAC,IAAD,CAAMxF,UAAU,SAAShB,GAAI,CAAE1G,KAAM,QAASmB,GAAI,QAAlD,UACE,eAAC,GAAD,CAAM6M,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,UAArC,UACE,cAAC,GAAD,CAAYoL,EAAE,mBAAd,SACE,cAAC,IAAD,CAAMM,QAAQ,gBAAgBR,MAAM,SAAS3K,GAAG,OAAOiD,EAAE,OAAzD,SACE,cAAC,IAAD,CAAM6C,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAlD,oCAOJ,cAAC,GAAD,UACE,eAAC,IAAD,CAAO1B,QAAQ,SAASjD,MAAO,WAA/B,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAI+F,GAAG,QAAQ6E,GAAG,MAAM5K,MAAM,WAA9B,UACE,cAAC,IAAD,CAAI4K,GAAG,MAAM5K,MAAM,WAAnB,qBAGA,cAAC,IAAD,CAAIA,MAAM,WAAV,mBACA,cAAC,IAAD,CAAIA,MAAM,WAAV,sBAEA,cAAC,IAAD,CAAIA,MAAM,WAAV,6BACA,cAAC,IAAD,CAAIA,MAAM,WAAV,kCACA,cAAC,IAAD,CAAIA,MAAM,YAAV,yBAKJ,cAAC,IAAD,UAGIqK,KAAK3G,MAAMmJ,GAAGvI,KAAI,SAACsJ,GAIjB,OACE,cAAC,GAAD,CACEtO,GAAIsO,EAAK3E,IACTC,UAAW0E,EAAK1E,UAChBC,SAAUyE,EAAKzE,SACfC,MAAOwE,EAAKxE,MACZC,SAAUuE,EAAKvE,SACfC,MAAOsE,EAAKtE,MACZC,QAASqE,EAAKrE,QACdC,eAAgBoE,EAAKpE,eACrBC,WAAYmE,EAAKnE,0BAgBjC,cAAC,GAAD,CACE1D,GAAG,OACH2H,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,qB,GAzMnB6D,IAAMuI,WAqNfuL,MC9NTC,G,kDAUJ,aAAe,IAAD,8BACZ,gBAyCF3O,aA1Cc,uCA0CC,WAAOC,GAAP,eAAAC,EAAA,sDAEbD,EAAME,iBACAuD,EAAO,CACXpD,UAAW,EAAKxF,MAAMwF,UACtBC,SAAU,EAAKzF,MAAMyF,SACrBG,MAAO,EAAK5F,MAAM4F,MAClBF,MAAO,EAAK1F,MAAM0F,MAClB2H,IAAK,EAAKrN,MAAMqN,IAEhBtH,WAAY,EAAK/F,MAAM+F,WACvByH,OAAQ,EAAKxN,MAAMwN,OACnB7E,SAAUxE,eAAeC,QAAQ,MACjCmE,UAAW,EAAKvI,MAAMuI,UACtBC,QAAS,EAAKxI,MAAMwI,SAGtBe,QAAQC,IAAI,EAAKxJ,MAAMuI,WACvBvC,IAAM6C,KAAK,wDAAyDD,GACjE1C,MAAK,SAAAC,GAEJC,OAAOxG,SAASyG,QAAO,MACtBC,OAAM,SAAAC,GACPgD,QAAQC,IAAIZ,GACZpC,MAAM,kCAxBG,2CA1CD,sDAGZ,EAAKxG,MAAQ,CACXwF,UAAW,GACXC,SAAU,GACVG,MAAO,GACPF,MAAO,GACPC,SAAU,GACV6H,OAAQ,GACRzH,WAAY,iBACZsH,IAAK,GAEL1E,SAAU,GACVH,SAAS,EACTD,WAAW,EACX7B,aAAa,EACb0L,QAAS,GAETlJ,EAAG,GACHC,GAAI,IApBM,E,qDAPd,WAAqB,IAAD,OAClBnD,IAAMoD,IAAN,iDACGlD,MAAK,SAAAC,GACJ,IAAMiM,EAAUjM,EAAIkD,KACpB,EAAKzC,SAAS,CAAEwL,iB,0BA0BtB,SAAavL,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,QAEvB,aAATD,IACFH,KAAK3G,MAAMuI,UAAY1B,EAAI7J,OAAOsM,QAClC3C,KAAKC,SAAS,CAAE2B,UAAW1B,EAAI7J,OAAOsM,UACtCC,QAAQC,IAAI7C,KAAK3G,MAAM0F,QAGZ,WAAToB,IACFH,KAAK3G,MAAMwI,QAAU3B,EAAI7J,OAAOsM,QAChC3C,KAAKC,SAAS,CAAE4B,QAAS3B,EAAI7J,OAAOsM,UACpCC,QAAQC,IAAI7C,KAAK3G,MAAMwI,Y,uBAmC3B,WACE7B,KAAKC,SAAS,CACZF,aAAa,M,wBAKjB,WACEC,KAAKC,SAAS,CACZF,aAAa,M,oBAKjB,WAAU,IAAD,OAsBP,MArBsC,YAAlCvC,eAAeC,QAAQ,QACzBuC,KAAK3G,MAAMoS,QAAQ3I,SAAQ,SAAAC,GACzB,EAAK1J,MAAMkJ,EAAEU,KAAKF,GAClB,EAAK1J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,OAKL,SAAlC/E,eAAeC,QAAQ,SAChCuC,KAAK3G,MAAMoS,QAAQ3I,SAAQ,SAAAC,GACrBA,EAASf,UAAYxE,eAAeC,QAAQ,QAC9C,EAAKpE,MAAMkJ,EAAEU,KAAKF,GAClB,EAAK1J,MAAMmJ,GAAKU,MAAMC,KAAK,IAAIC,IAAI,EAAK/J,MAAMkJ,QAUlD,qCACE,eAAC,IAAD,CAAMxF,UAAU,SAAShB,GAAI,CAAE1G,KAAM,QAASmB,GAAI,QAAlD,UACE,eAAC,GAAD,CAAM6M,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,UAArC,UACE,cAAC,GAAD,CAAYoL,EAAE,mBAAd,SACE,eAAC,IAAD,CAAMM,QAAQ,gBAAgBR,MAAM,SAAS3K,GAAG,OAAOiD,EAAE,OAAzD,UACE,cAAC,IAAD,CAAM6C,SAAS,KAAKhG,MAAO,WAAY2E,WAAW,OAAlD,mCAGA,eAAC,IAAD,CACEmC,YAAY,UACZpB,YAAY,UACZ1F,MAAM,UACNiD,QAAQ,UACR+C,SAAS,KACT+E,EAAE,WACFhE,QAAS,WAAQ,EAAKiE,aAPxB,UASE,cAAC,IAAD,CAAM3K,GAAIsN,IAAQ/M,GAAG,QATvB,0BAgBJ,cAAC,GAAD,UACE,eAAC,IAAD,CAAOqC,QAAQ,SAASjD,MAAO,WAA/B,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAI+F,GAAG,QAAQ6E,GAAG,MAAM5K,MAAM,WAA9B,UACE,cAAC,IAAD,CAAI4K,GAAG,MAAM5K,MAAM,SAAnB,yBAGA,cAAC,IAAD,CAAIA,MAAM,SAAV,mBACA,cAAC,IAAD,CAAIA,MAAM,SAAV,sBACA,cAAC,IAAD,CAAIA,MAAM,SAAV,oBACA,cAAC,IAAD,CAAIA,MAAM,SAAV,kCACA,cAAC,IAAD,CAAIA,MAAM,SAAV,yBAGJ,cAAC,IAAD,UACGqK,KAAK3G,MAAMmJ,GAAGvI,KAAI,SAACyR,GAElB,OACE,cAAC,GAAD,CACEzW,GAAIyW,EAAI9M,IACRC,UAAW6M,EAAI7M,UACfC,SAAU4M,EAAI5M,SACdG,MAAOyM,EAAIzM,MACXyH,IAAKgF,EAAIhF,IACT3H,MAAO2M,EAAI3M,MACXe,SAAU4L,EAAI5L,SACdd,SAAU0M,EAAI1M,SACd6H,OAAQ6E,EAAI7E,OACZzH,WAAYsM,EAAItM,WAChBwC,UAAW8J,EAAI9J,UACfC,QAAS6J,EAAI7J,uBAU3B,cAAC,GAAD,CACEnG,GAAG,OACH2H,UAAW,CAAE5I,GAAI,SAAUnF,GAAI,eAInC,eAAC,IAAD,CACE8G,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAFxB,UAIE,cAAC,IAAD,IACA,cAAC,IAAD,UAEE,uBAAM7L,GAAG,OAAO8L,SAAUf,KAAKzB,aAA/B,UACE,cAAC,IAAD,8BACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAW7I,GAAI,EAAf,SACE,eAAC,KAAD,WACE,cAAC,KAAD,8BACA,eAAC,IAAD,CACEqH,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,UAQE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAEvC,cAAC,IAAD,CACEyL,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,cAC9C8C,YAAY,YACZjG,YAAY,WACZmI,iBAAiB,eAErB,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAqB7C,MAAM,eAEvC,cAAC,IAAD,CACEyL,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAC9C8C,YAAY,MACZjG,YAAY,WACZmI,iBAAiB,kBAGvB,cAAC,KAAD,8BACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAa7C,MAAM,eAI/B,cAAC,IAAD,CACEyL,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAC9C8C,YAAY,kBACZjG,YAAY,WACZmI,iBAAiB,eAErB,cAAC,KAAD,oBACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAe7C,MAAM,eAEjC,cAAC,IAAD,CACE6L,KAAK,QACLJ,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAC9C8C,YAAY,QACZjG,YAAY,WACZmI,iBAAiB,eAErB,cAAC,KAAD,kBACA,cAAC,IAAD,CACEpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,QAC9C8C,YAAY,MACZjG,YAAY,WACZmI,iBAAiB,YAEnB,cAAC,IAAD,CACEzG,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,SAQE,cAAC,KAAD,MAGF,eAAC,IAAD,CACElE,UAAW,CAAEtC,GAAI,SAAUjE,GAAI,OAC/BgK,MAAM,SACN1H,EAAE,OACFkI,QAAQ,SACRtG,GAAG,OACHuG,QAAQ,MANV,UAQE,eAAC,IAAD,CAAQtF,SAAS,KACfmB,GAAG,MACHpE,aAAa,OACb7C,GAAG,MACH0L,KAAK,KACLlG,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,WAPhD,UAQE,wBAAQ4B,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,sBAIF,eAAC,IAAD,CAAQzE,SAAS,KACfmB,GAAG,MACHpE,aAAa,OACb7C,GAAG,MACH0L,KAAK,KACLlG,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,eAPhD,UAQE,wBAAQ4B,MAAM,iBAAd,4BACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,iBAAd,kCAIJ,cAAC,IAAD,CACEgB,SAAU,SAAC5C,GACT,EAAK6C,aAAa7C,EAAO,gBApH/B,aAyHE,cAAC,IAAD,CACE4C,SAAU,SAAC5C,GACT,EAAK6C,aAAa7C,EAAO,cA3H/B,gBAoIF,eAAC,IAAD,WACE,cAAC,IAAD,CAAQgD,KAAK,SAASzI,GAAG,UACvBpD,MAAM,QAAQ8L,GAAI,EAClBtG,OAAQ,CACNpC,GAAI,WAENqC,QAAS,CACPrC,GAAI,WANR,qBAWA,cAAC,IAAD,CAAQ2D,QAAS,WAAQ,EAAKoE,cAAgB/H,GAAG,WAAjD,uC,GAtVMI,IAAMuI,WAiWbwL,M,yCC1YFC,GAAkB,CAC7BC,MAAO,CACLC,QAAS,CACPC,MAAM,IAGVC,QAAS,CACPrB,MAAO,CACLM,gBAAiB,MACjB7Q,SAAU,OACV6R,gBAAYC,GAEdC,eAAgB,CACdxB,MAAO,CACLM,gBAAiB,MACjB7Q,SAAU,OACV6R,gBAAYC,IAGhBE,MAAO,QAETC,MAAO,CACLC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACrEP,MAAM,EACNQ,OAAQ,CACNR,MAAM,EACNpB,MAAO,CACL6B,OAAQ,OACRpS,SAAU,SAGdqS,WAAY,CACVV,MAAM,GAERW,UAAW,CACTX,MAAM,IAGVY,MAAO,CACLZ,MAAM,EACN3X,MAAO,OACPmY,OAAQ,CACNR,MAAM,EACNpB,MAAO,CACL6B,OAAQ,OACRpS,SAAU,UAIhBwS,KAAM,CACJb,MAAM,GAERvW,KAAM,CACJgX,OAAQ,QAEVK,WAAY,CACVC,SAAS,GAEXC,YAAa,CACXC,IAAK,CACH7V,aAAc,EACd8V,YAAa,SAGjBC,WAAY,CACV,CACEC,WAAY,IACZC,QAAS,CACPL,YAAa,CACXC,IAAK,CACH7V,aAAc,QAQbkW,GAAgB,CAC3B,CACEhU,KAAM,cACN8H,KAAM,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAE/C,CACE9H,KAAM,WACN8H,KAAM,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,OAInCmM,GAAmB,CAC9BzB,MAAO,CACLC,QAAS,CACPC,MAAM,IAGVC,QAAS,CACPI,MAAO,QAETS,WAAY,CACVC,SAAS,GAEXjX,OAAQ,CACN0X,MAAO,UAETlB,MAAO,CACLpM,KAAM,WACNqM,WAAY,CACV,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,OAAQ,CACN5B,MAAO,CACL6B,OAAQ,UACRpS,SAAU,UAIhBuS,MAAO,CACLJ,OAAQ,CACN5B,MAAO,CACL6B,OAAQ,UACRpS,SAAU,UAIhBoT,OAAQ,CACNzB,MAAM,GAERa,KAAM,CACJa,gBAAiB,GAEnBjY,KAAM,CACJyK,KAAM,WACNyN,SAAU,CACRC,MAAO,QACP1N,KAAM,WACN2N,eAAgB,GAChBC,sBAAkB3B,EAClB4B,eAAe,EACfC,YAAa,GACbC,UAAW,EACXC,MAAO,IAETzB,OAAQ,CAAC,UAAW,YAEtBA,OAAQ,CAAC,UAAW,YC1GP0B,G,kDAhDb,WAAYta,GAAQ,IAAD,8BACjB,cAAMA,IACDkE,MAAQ,CACXoS,QAAQ,GACRlJ,EAAE,EACFmN,UAAW,GACXC,aAAc,IANC,E,qDAUnB,WAAqB,IAAD,OAClBtQ,IAAMoD,IAAN,6DACClD,MAAK,SAAAC,GACJ,IAAMiM,EAAUjM,EAAIkD,KACpB,EAAKzC,SAAS,CAAEwL,YAChB,IAAMlJ,EAAIkJ,EAAQH,OAClB,EAAKrL,SAAS,CAAEsC,SAElBvC,KAAKC,SAAS,CACZyP,UAAW,CAAE,CACX9U,KAAM,kBACN8H,KAAM,CAAC1C,KAAK3G,MAAMkJ,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAE7CoN,aAAcxC,O,oBAIlB,WACE,OACE,cAAC,GAAD,CACEzS,GAAG,OACH1D,OAAQ,CAAEyD,GAAI,SACdxD,MAAM,OACN8B,GAAG,uDACH8E,SAAS,WALX,SAOE,cAAC,KAAD,CACE8Q,QAAS3O,KAAK3G,MAAMsW,aACpBC,OAAQ5P,KAAK3G,MAAMqW,UACnBlO,KAAK,MACLvK,MAAM,OACND,OAAO,e,GA3CM0K,aCFCvI,IAAMuI,U,OCqCfmO,IC4GEC,G,kDArGf,aAAe,IAAD,8BACZ,gBAEIzW,MAAQ,CACXoS,QAAQ,GACRsE,QAAQ,GACRC,QAAQ,IANG,E,qDAjBd,WAAqB,IAAD,OAClB3Q,IAAMoD,IAAN,6DACClD,MAAK,SAAAC,GACJ,IAAMiM,EAAUjM,EAAIkD,KACpB,EAAKzC,SAAS,CAAEwL,eAElBpM,IAAMoD,IAAN,oDACClD,MAAK,SAAAC,GACJ,IAAMuQ,EAAUvQ,EAAIkD,KACpB,EAAKzC,SAAS,CAAE8P,eAElB1Q,IAAMoD,IAAN,mDACClD,MAAK,SAAAC,GACJ,IAAMwQ,EAAUxQ,EAAIkD,KACpB,EAAKzC,SAAS,CAAE+P,iB,oBAapB,WAEA,OACE,eAAC,IAAD,CAAM5a,cAAc,SAAS2G,GAAI,CAAE1G,KAAM,QAASmB,GAAI,QAAtD,UACE,eAAC,IAAD,CAAYyZ,QAAS,CAAExV,GAAI,EAAGjE,GAAI,EAAGlB,GAAI,GAAKsI,QAAQ,OAAtD,UACE,cAAC,GAAD,CAAMsS,KAAK,OAAX,SACE,cAAC,GAAD,UACE,eAAC,IAAD,CAAM9a,cAAc,MAAMoL,MAAM,SAASQ,QAAQ,SAASlI,EAAE,OAA5D,UACE,eAAC,KAAD,CAAMvC,GAAG,OAAT,UACE,cAAC,KAAD,CACEoF,SAAS,KACThG,MAAM,WACN2E,WAAW,OACX5E,GAAG,QAJL,+BAQA,cAAC,IAAD,UACE,cAAC,KAAD,CAAYiG,SAAS,KAAKhG,MAAM,WAAhC,SACGqK,KAAK3G,MAAM0W,QAAQzE,OAAOpB,kBAKjC,cAAC3R,EAAD,CAASvC,GAAG,MAAM6C,EAAG,OAAQC,EAAG,OAAQC,GAAG,QAA3C,SACE,cAACT,EAAD,CAAYO,EAAG,OAAQC,EAAG,OAAQnD,MAAM,mBAKhD,cAAC,GAAD,CAAMua,KAAK,OAAX,SACE,cAAC,GAAD,UACE,eAAC,IAAD,CAAM9a,cAAc,MAAMoL,MAAM,SAASQ,QAAQ,SAASlI,EAAE,OAA5D,UACE,eAAC,KAAD,CAAMvC,GAAG,OAAT,UACE,cAAC,KAAD,CACEoF,SAAS,KACThG,MAAM,WACN2E,WAAW,OACX5E,GAAG,QAJL,gCAQA,cAAC,IAAD,UACE,cAAC,KAAD,CAAYiG,SAAS,KAAKhG,MAAM,WAAhC,SACCqK,KAAK3G,MAAM2W,QAAQ1E,OAAOpB,kBAM/B,cAAC3R,EAAD,CAASvC,GAAG,MAAM6C,EAAG,OAAQC,EAAG,OAAQC,GAAG,QAA3C,SACE,cAACjB,EAAD,CAAWe,EAAG,OAAQC,EAAG,OAAQnD,MAAM,mBAK/C,cAAC,GAAD,CAAMua,KAAK,OAAX,SACE,cAAC,GAAD,UACE,eAAC,IAAD,CAAM9a,cAAc,MAAMoL,MAAM,SAASQ,QAAQ,SAASlI,EAAE,OAA5D,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CACE6C,SAAS,KACThG,MAAM,WACN2E,WAAW,OACX5E,GAAG,QAJL,uCAQA,cAAC,IAAD,UACE,cAAC,KAAD,CAAYiG,SAAS,KAAKhG,MAAM,WAAhC,SACCqK,KAAK3G,MAAMoS,QAAQH,OAAOpB,kBAK/B,cAAC,IAAD,IACA,cAAC3R,EAAD,CAASvC,GAAG,MAAM6C,EAAG,OAAQC,EAAG,OAAQC,GAAG,QAA3C,SACE,cAACzB,EAAD,CAAcuB,EAAG,OAAQC,EAAG,OAAQnD,MAAM,sBAOrD,uBACA,uBACH,cAAC,GAAD,W,GAlHsBwD,IAAMuI,WCL9B,GAAoC,SAAhClE,eAAeC,QAAQ,QAC1B,IAAI0S,GAAa,CAEhB,CACEtZ,KAAM,gBACN+D,KAAM,kBACND,QAAS,uCACTa,KAAM,cAAC,IAAD,CAAc7F,MAAM,YAC1Bya,UAAWC,GACXtV,OAAQ,UAEV,CACElE,KAAM,UACN+D,KAAM,UACND,QAAS,uCACTa,KAAM,cAAC,IAAD,CAAY7F,MAAM,YACxBya,UAAWnD,GACXlS,OAAQ,UAGV,CACElE,KAAM,QACN+D,KAAM,OACND,QAAS,uCACTa,KAAM,cAAC,IAAD,CAAc7F,MAAM,YAC1Bya,UAAWpD,GACXjS,OAAQ,UAEV,CACMlE,KAAM,WACN+D,KAAM,UACND,QAAS,sEACTa,KAAM,cAACzD,EAAD,CAAYpC,MAAM,YACxBya,UAAW1M,GACX3I,OAAQ,gBAKX,GAAoC,QAAhCyC,eAAeC,QAAQ,QAC1B0S,GAAa,CACf,CACEtZ,KAAM,gBACN+D,KAAM,kBACND,QAAS,uCACTa,KAAM,cAAC,IAAD,CAAc7F,MAAM,YAC1Bya,UAAWC,GACXtV,OAAQ,UAEV,CACElE,KAAM,UACN+D,KAAM,UACND,QAAS,uCACTa,KAAM,cAAC,IAAD,CAAY7F,MAAM,YACxBya,UAAWrF,GACXhQ,OAAQ,UAEV,CACMlE,KAAM,WACN+D,KAAM,UACND,QAAS,sEACTa,KAAM,cAACzD,EAAD,CAAYpC,MAAM,YACxBya,UAAWE,GACXvV,OAAQ,gBAKZ,GAAoC,YAAhCyC,eAAeC,QAAQ,QAE3B0S,GAAa,CACf,CACEtZ,KAAM,aACN+D,KAAM,cACND,QAAS,uCACTa,KAAM,cAAC,KAAD,CAAa7F,MAAM,YACzBya,UAAWN,GACX/U,OAAQ,UAEV,CACElE,KAAM,gBACN+D,KAAM,kBACND,QAAS,uCACTa,KAAM,cAAC,IAAD,CAAc7F,MAAM,YAC1Bya,UAAWC,GACXtV,OAAQ,UAEV,CACElE,KAAM,YACN+D,KAAM,YACND,QAAS,uCACTa,KAAM,cAAC,IAAD,CAAc7F,MAAM,YAC1Bya,UAAWG,GACXxV,OAAQ,UAEV,CACElE,KAAM,UACN+D,KAAM,UACND,QAAS,uCACTa,KAAM,cAAC,IAAD,CAAY7F,MAAM,YACxBya,UAAWrF,GACXhQ,OAAQ,UAGV,CACElE,KAAM,QACN+D,KAAM,OACND,QAAS,uCACTa,KAAM,cAAC,IAAD,CAAc7F,MAAM,YAC1Bya,UAAWlD,GACXnS,OAAQ,gBAURoV,GAAa,CACf,CACEtZ,KAAM,gBACN+D,KAAM,kBACND,QAAS,uCACTa,KAAM,cAAC,IAAD,CAAc7F,MAAM,YAC1Bya,UAAWI,GACXzV,OAAQ,UAEV,CACMlE,KAAM,WACN+D,KAAM,UACND,QAAS,sEACTa,KAAM,cAACzD,EAAD,CAAYpC,MAAM,YACxBya,UAAWK,GACX1V,OAAQ,WAOHoV,U,cCvKA,OAA0B,qCC8R1BO,OApQf,WAEE,IAAM3M,EAAUC,cAEVL,GADa9J,YAAkB,WAAY,YAC/BA,YAAkB,WAAY,UAChD,EAA0BT,mBAAS,IAAnC,mBAAO2F,EAAP,KAAckF,EAAd,KACA,EAAgC7K,mBAAS,IAAzC,mBAAO0G,EAAP,KAAiB6Q,EAAjB,KAIA,GAHcC,eACKzX,IAAMI,SACfsX,EAAQ,KACM1X,IAAMC,UAAS,IAAvC,mBAAOkU,EAAP,KAAawD,EAAb,KA0FMC,EAAS,WAIb,QAAIhS,EAAMiS,MAFE,oDAWd,OADApO,QAAQC,IAAIkO,GAEV,mCACE,cAAC,IAAD,CAAMlT,SAAS,WAAWhI,GAAG,OAA7B,SACE,eAAC,IAAD,CACEgD,EAAG,CAAE4B,GAAI,UAAWjE,GAAI,OAAQkP,GAAI,QACpC5M,EAAE,OACF+D,KAAK,SACLtC,GAAG,OACH/E,eAAe,gBACfK,GAAG,OACHkG,GAAI,CAAEtB,GAAI,QAASjE,GAAI,OAPzB,UASE,cAAC,IAAD,CACEjB,WAAW,SACXC,eAAe,QACf0W,MAAO,CAAE+E,WAAY,QACrBnY,EAAG,CAAEzD,KAAM,OAAQmB,GAAI,MAAOkP,GAAI,OAJpC,SAME,eAAC,IAAD,CACE3I,UAAU,SACVjE,EAAE,OACFoY,WAAW,cAEXxQ,EAAE,OACFxE,GAAI,CAAE1F,GAAI,QAASkP,GAAI,QANzB,UAQE,cAAC,IAAD,CAAS/P,MAAM,UAAUgG,SAAS,OAAO9F,GAAG,OAA5C,0BAGA,cAAC,IAAD,CACEA,GAAG,OACHiH,GAAG,MACHnH,MAAOgO,EACPrJ,WAAW,OACXqB,SAAS,OALX,sDASA,eAAC,KAAD,WACE,cAAC,KAAD,CAAWmB,GAAG,MAAMnB,SAAS,KAAKrB,WAAW,SAA7C,mBAGA,cAAC,IAAD,CACE5B,aAAa,OACb7C,GAAG,OACH8F,SAAS,KACT6F,KAAK,OACLpB,MAAOrB,EACP1D,YAAY,WACZmI,iBAAiB,UAGjBpC,SAAU,SAAC1M,GAAD,OAAOuP,EAASvP,EAAE2B,OAAO+J,QACnCkB,YAAY,oBACZC,KAAK,OAEP,cAAC,KAAD,CAAWzE,GAAG,MAAMnB,SAAS,KAAKrB,WAAW,SAA7C,sBAGA,eAAC,IAAD,CAAYiH,KAAK,KAAjB,UACE,cAAC,IAAD,CACE7I,aAAa,OACb7C,GAAG,OACH8F,SAAS,KACT6F,KAAM8L,EAAO,OAAS,WACtBlN,MAAON,EACPzE,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC1M,GAAD,OAAOic,EAAYjc,EAAE2B,OAAO+J,QACtCkB,YAAY,gBACZC,KAAK,OAEP,cAAC,IAAD,CAAmBtK,MAAM,SAAzB,SACE,cAAC,IAAD,CAAQ4B,EAAE,UAAU0I,KAAK,KAAK7E,QA/K5B,kBAAMoU,GAASxD,IA+KjB,SACGA,EAAO,OAAS,cAIvB,cAAC,IAAD,CAAM3X,MAAOgO,EAAWrJ,WAAW,SAAnC,SAEE,cAAC,IAAD,CAAM3E,MAAO,UAAWK,GAAG,OAAO8G,GAAG,MAAMxC,WAAW,OACpDoC,QA9KK,WACrBqH,EAAQd,KAAK,wBA4KC,iCAKF,cAAC,IAAD,CACEvG,QAhLF,WACZkG,QAAQC,IAAIkO,GACZhL,IAAM7D,KAAK,kDAAmD,CAE5DnD,MAAOA,EAEPe,SAASA,IACRP,MAAK,SAAC2G,GAEFA,EAASxD,KAAKyD,QAgEjBvD,QAAQC,IAAIkO,GA9Dc,SAAtB7K,EAASxD,KAAK2D,MAAmB0K,GACnCvT,eAAe8I,QAAQ,QAASJ,EAASxD,KAAK3D,OAC9CvB,eAAe8I,QAAQ,WAAYJ,EAASxD,KAAK5C,UACjDtC,eAAe8I,QAAQ,cAAeJ,EAASxD,KAAKwB,aACpD1G,eAAe8I,QAAQ,mBAAoBJ,EAASxD,KAAK0B,kBACzD5G,eAAe8I,QAAQ,gBAAiBJ,EAASxD,KAAK4B,eACtD9G,eAAe8I,QAAQ,cAAeJ,EAASxD,KAAK8B,aACpDhH,eAAe8I,QAAQ,KAAMJ,EAASxD,KAAK9D,KAC3CpB,eAAe8I,QAAQ,OAAQJ,EAASxD,KAAK2D,MAE7CzD,QAAQC,IAAIqD,GACZnC,EAAQd,KAAK,uBACbxD,OAAOxG,SAASyG,QAAO,IACK,QAApBwG,EAASxD,KAAK2D,MACtB7I,eAAe8I,QAAQ,QAASJ,EAASxD,KAAK3D,OAC9CvB,eAAe8I,QAAQ,WAAYJ,EAASxD,KAAK5C,UACjDtC,eAAe8I,QAAQ,YAAaJ,EAASxD,KAAK7D,WAClDrB,eAAe8I,QAAQ,WAAYJ,EAASxD,KAAK5D,UACjDtB,eAAe8I,QAAQ,QAASJ,EAASxD,KAAKzD,OAC9CzB,eAAe8I,QAAQ,SAAUJ,EAASxD,KAAKmE,QAC/CrJ,eAAe8I,QAAQ,KAAMJ,EAASxD,KAAK9D,KAC3CpB,eAAe8I,QAAQ,MAAOJ,EAASxD,KAAKgE,KAC5ClJ,eAAe8I,QAAQ,YAAaJ,EAASxD,KAAKtD,YAClD5B,eAAe8I,QAAQ,OAAQJ,EAASxD,KAAK2D,MAC7C7I,eAAe8I,QAAQ,WAAWJ,EAASxD,KAAKV,UAChDxE,eAAe8I,QAAQ,UAAUJ,EAASxD,KAAKb,SAC/CrE,eAAe8I,QAAQ,YAAYJ,EAASxD,KAAKd,WACjDgB,QAAQC,IAAIqD,GACZnC,EAAQd,KAAK,uBAEbxD,OAAOxG,SAASyG,QAAO,IACK,YAApBwG,EAASxD,KAAK2D,MACtB7I,eAAe8I,QAAQ,QAASJ,EAASxD,KAAK3D,OAC9CvB,eAAe8I,QAAQ,WAAYJ,EAASxD,KAAK5C,UACjDtC,eAAe8I,QAAQ,OAAQJ,EAASxD,KAAK2D,MAC7CzD,QAAQC,IAAIqD,GACZnC,EAAQd,KAAK,uBACbxD,OAAOxG,SAASyG,QAAO,KAIvBlC,eAAe8I,QAAQ,QAASJ,EAASxD,KAAK3D,OAC9CvB,eAAe8I,QAAQ,WAAYJ,EAASxD,KAAK5C,UACjDtC,eAAe8I,QAAQ,YAAaJ,EAASxD,KAAK7D,WAClDrB,eAAe8I,QAAQ,WAAYJ,EAASxD,KAAK5D,UACjDtB,eAAe8I,QAAQ,QAASJ,EAASxD,KAAKzD,OAC9CzB,eAAe8I,QAAQ,UAAWJ,EAASxD,KAAKxD,SAChD1B,eAAe8I,QAAQ,KAAMJ,EAASxD,KAAK9D,KAC3CpB,eAAe8I,QAAQ,WAAYJ,EAASxD,KAAK1D,UACjDxB,eAAe8I,QAAQ,YAAaJ,EAASxD,KAAKtD,YAClD5B,eAAe8I,QAAQ,iBAAkBJ,EAASxD,KAAKvD,gBACvD3B,eAAe8I,QAAQ,UAAUJ,EAASxD,KAAKb,SAC/CrE,eAAe8I,QAAQ,YAAYJ,EAASxD,KAAKd,WAEjDgB,QAAQC,IAAIqD,GACZnC,EAAQd,KAAK,uBACbxD,OAAOxG,SAASyG,QAAO,QA8Gf/D,SAAS,OACT6F,KAAK,SACLzI,GAAG,UACHD,EAAE,OACFD,EAAE,KACFhD,GAAG,OACHF,MAAM,QACNuG,GAAG,OACHf,OAAQ,CACNpC,GAAI,WAENqC,QAAS,CACPrC,GAAI,WAdR,wBAoBF,cAAC,IAAD,CACE3D,cAAc,SACdI,eAAe,SACfD,WAAW,SACXsH,KAAK,OACLX,GAAG,MALL,SAOE,eAAC,IAAD,CAAMvG,MAAOgO,EAAWrJ,WAAW,SAAnC,mCAEE,cAAC,IAAD,CAAM3E,MAAO,UAAWK,GAAG,OAAO8G,GAAG,MAAMxC,WAAW,OACpDoC,QAnNH,WACbqH,EAAQd,KAAK,iBAiNC,+BAQR,cAAC,IAAD,CACE3M,QAAS,CAAEjB,KAAM,OAAQmB,GAAI,SAE7BqC,EAAE,QACFC,EAAE,QACF+E,SAAS,WACTsT,MAAM,OACNC,IAAI,QAPN,SASE,cAAC,IAAD,CACEC,QAASC,GACTxY,EAAE,QACFD,EAAE,QACF0Y,OAAO,QACPlM,WAAW,MACXmM,uBAAuB,mB,gDClRtBC,G,QAAAA,EAAEjW,KAAK,CACpBkW,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,QAAS,4DACTC,UAAW,gE,UCPE,OAA0B,sCCqCnCC,I,yDAEJ,WAAY5c,GAAQ,IAAD,8BAEjB,cAAMA,IA4DP6c,SA9DkB,uCA8DP,WAAOxT,GAAP,SAAAC,EAAA,sDAEVsH,IAAM7D,KAAK,wDAAyD,CAClE+P,SAAS,EAAK5Y,MAAM4Y,SACpBC,UAAU,EAAK7Y,MAAM6Y,UACrBnT,MAAO,EAAK1F,MAAM0F,MAClBe,SAAU,EAAKzG,MAAMyG,SACrBoE,YAAa,EAAK7K,MAAM6K,YACxBE,iBAAkB,EAAK/K,MAAM+K,iBAC7BE,cAAe,EAAKjL,MAAMiL,cAC1BE,YAAa,EAAKnL,MAAMmL,cACvBjF,MAAK,SAAC2G,GAEFA,EAASxD,KAAKyD,UACjB,EAAKgM,aAEqB,SAAtBjM,EAASxD,KAAK2D,OAChB7I,eAAe8I,QAAQ,QAASJ,EAASxD,KAAK3D,OAC9CvB,eAAe8I,QAAQ,WAAYJ,EAASxD,KAAK5C,UACjDtC,eAAe8I,QAAQ,cAAeJ,EAASxD,KAAKwB,aACpD1G,eAAe8I,QAAQ,mBAAoBJ,EAASxD,KAAK0B,kBACzD5G,eAAe8I,QAAQ,gBAAiBJ,EAASxD,KAAK4B,eACtD9G,eAAe8I,QAAQ,cAAeJ,EAASxD,KAAK8B,aACpDhH,eAAe8I,QAAQ,KAAMJ,EAASxD,KAAK9D,KAC3CpB,eAAe8I,QAAQ,OAAQJ,EAASxD,KAAK2D,MAC7C7I,eAAe8I,QAAQ,OAAQJ,EAASxD,KAAK0P,MAE7CxP,QAAQC,IAAIqD,GAEZ,EAAK/Q,MAAM4O,QAAQd,KAAK,4BA7BpB,2CA9DO,wDAqGnB5J,MAAQ,CAAEY,IAAK,MAlGb,EAAKZ,MAAQ,CACX+G,MAAO,GACPmB,KAAM,GACNxB,aAAY,EACZsS,cAAa,EACbtT,MAAM,GACNe,SAAS,GACToE,YAAY,GACZE,iBAAiB,GACjBE,cAAc,GACdE,YAAY,GACZyN,SAAS,EACTC,UAAU,GAfK,E,6CAoBnB,WACElS,KAAKC,SAAS,CACZF,aAAa,M,wBAIjB,SAAWkS,EAASC,GAClBtP,QAAQC,IAAIoP,GACZjS,KAAKC,SAAS,CACZF,aAAa,M,wBAIjB,WACEC,KAAKC,SAAS,CACZoS,cAAc,M,yBAGlB,WACErS,KAAKC,SAAS,CACZoS,cAAc,M,oBAGjB,WAECrS,KAAK7K,MAAM4O,QAAQd,KAAK,kB,uBAE1B,WACE,IAAMmP,EAAK5U,eAAeC,QAAQ,QAC9BuC,KAAK3G,MAAM+G,OAASgS,GAGtB3S,OAAOxG,SAASyG,QAAO,K,0BAM3B,SAAaQ,EAAKC,GAChBH,KAAKC,SAAL,eAAiBE,EAAQD,EAAI7J,OAAO+J,U,gCA4CtC,SAAmBkS,EAAWC,GAC5B,IAAQtY,EAAQ+F,KAAK3G,MAAbY,IACJsY,EAAUtY,MAAQA,GAAOA,GAE3BA,EAAIuY,GAAG,QAAS,SAAU9d,GAExBkO,QAAQC,IAAI,cAAgBnO,EAAE+d,OAAOC,IAAM,KAAOhe,EAAE+d,OAAOE,KAC3D3S,KAAKC,SAAS,CAACgS,SAASvd,EAAE+d,OAAOC,IAC/BR,UAAUxd,EAAE+d,OAAOE,OAGrBC,KAAK5S,S,oBAGX,WAAU,IAAD,OAIDiS,EAAWjS,KAAK7K,MAAM0d,OAAS7S,KAAK7K,MAAM0d,OAAOZ,SAF9B,kBAGnBC,EAAYlS,KAAK7K,MAAM0d,OAAS7S,KAAK7K,MAAM0d,OAAOX,UAF9B,mBAK5B,OACE,qCACE,eAAC,IAAD,CACEnV,UAAU,SACV+V,UAAU,SACVC,YAAY,SACZC,SAAS,SAJX,UAME,cAAC,IAAD,CACEnV,SAAS,WACTqS,KAAM,CAAE7a,KAAM,OAAQmB,GAAI,QAC1BsC,EAAG,CAAEtC,GAAI,sBACTkC,aAAc,CAAElC,GAAI,QACpByc,KAAK,IACL9B,MAAM,IACN7L,SAAS,YACT0N,SAAS,SACTE,OAAO,KACP9B,IAAI,IACJC,QAAS8B,GACT5B,OAAO,QACPhX,GAAI,CAAE/D,GAAI,QACV0F,GAAI,CAAE1F,GAAI,UAEZ,cAAC,IAAD,CACEuG,UAAU,SACVnH,UAAU,SACVJ,eAAe,SACfgL,MAAM,SACNtE,GAAG,SACHrG,GAAG,OANL,SAQE,cAAC,IAAD,CAAM8F,SAAS,MAAMhG,MAAM,QAAQ2E,WAAW,OAA9C,wBAKF,cAAC,IAAD,CAAM/E,WAAW,SAASC,eAAe,SAASK,GAAG,OAAOqG,GAAG,OAA/D,SACE,eAAC,IAAD,CACEa,UAAU,SACVjE,EAAE,QACFoY,WAAW,cACXxY,aAAa,OACbgI,EAAE,OACFnG,GAAI,CAAElF,KAAM,SACZ0D,GAAG,QACHwC,UAAU,gCARZ,UAUE,cAAC,IAAD,CACEI,SAAS,KACThG,MAAM,WACN2E,WAAW,OACX1E,UAAU,SACVC,GAAG,OALL,sBAUA,eAAC,KAAD,WACE,cAAC,IAAD,CACE8F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLF,YAAY,gBACblB,MAAOJ,KAAK3G,MAAM6K,YACjB7I,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,gBAC9C3I,GAAG,OACH0L,KAAK,OAGP,cAAC,IAAD,CACE5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,QACLpB,MAAOJ,KAAK3G,MAAM0F,MAClB1D,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAC9C8C,YAAY,qBACZzL,GAAG,OACH0L,KAAK,OAER,eAAC,IAAD,CAAYA,KAAK,KAAjB,UACC,cAAC,IAAD,CACAmH,UAAQ,EACN/M,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLpB,MACEJ,KAAK3G,MAAM4Y,SAAW,YAAW,gBAEnC5W,YAAY,WACZmI,iBAAiB,UAEjBlC,YAAY,oBACZzL,GAAG,OACH0L,KAAK,OAEP,cAAC,IAAD,CAAmBtK,MAAM,SAAzB,SACM,cAAC,IAAD,CAAQ4B,EAAE,UAAU0I,KAAK,KAAQ7E,QAAS,WAAO,EAAKiE,aAAtD,6BAKN,cAAC,IAAD,CAEEhF,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,OACLpB,MAAOJ,KAAK3G,MAAM+K,iBAClB/I,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,qBAC9C8C,YAAY,oBACZzL,GAAG,OACH0L,KAAK,OAEP,cAAC,IAAD,CACE5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,SACLpB,MAAOJ,KAAK3G,MAAMiL,cAClBjJ,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,kBAC9C8C,YAAY,kBACZzL,GAAG,OACH0L,KAAK,OAEP,cAAC,IAAD,CACE5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,SACLpB,MAAOJ,KAAK3G,MAAMmL,YAClBnJ,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,gBAC9C8C,YAAY,sBACZzL,GAAG,OACH0L,KAAK,OAEP,cAAC,IAAD,CACE5F,SAAS,KACTmB,GAAG,MACHpE,aAAa,OACb8I,KAAK,WACLpB,MAAOJ,KAAK3G,MAAMyG,SAClBzE,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,aAC9C8C,YAAY,gBACZzL,GAAG,OACH0L,KAAK,OAGP,cAAC,IAAD,CACC7E,QAAS,WAAO,EAAKsV,YACpBxQ,KAAK,SACLzI,GAAG,UACH4C,SAAS,OACThG,MAAM,QACN2E,WAAW,OACXxB,EAAE,OACFD,EAAE,KACFhD,GAAG,OACHsF,OAAQ,CACNpC,GAAI,WAENqC,QAAS,CACPrC,GAAI,WAdR,wBAoBF,cAAC,IAAD,CACE3D,cAAc,SACdI,eAAe,SACfD,WAAW,SACXsH,KAAK,OACLX,GAAG,MALL,SAOE,eAAC,IAAD,CAAMvG,MAAM,WAAW2E,WAAW,SAAlC,qCAEE,cAAC,IAAD,CAEEtE,GAAG,OACH8G,GAAG,MACH1G,KAAK,IACLkE,WAAW,OACXoC,QAAS,WAAO,EAAK0W,UACrBzd,MAAO,UAPT,kCAgBV,eAAC,IAAD,CAEEyG,OAAQ4D,KAAK3G,MAAM0G,YACnBzD,QAAS,WAAQ,EAAKwE,cAHxB,UAKE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,wCACA,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,UAGS,eAACuS,GAAA,EAAD,CAEAC,UAAU,cACvBC,OAAQ,CAACtB,EAAUC,GACnBsB,KAAM,GACNC,iBAAiB,EACjBvH,MAAO,CAAElV,OAAQ,OAAQC,MAAM,SAC/Byc,UAAW,SAACzZ,GAAD,OAAU,EAAKgG,SAAS,CAAChG,IAAIA,EAAI5D,UAP/B,UAUb,cAACsd,GAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,GAAA,EAAD,CAAUjW,SAAU,CAACmC,KAAK3G,MAAM4Y,SAAUjS,KAAK3G,MAAM6Y,WAAY1W,KAAMA,YAMrE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQiB,YAAY,OAAOgF,GAAI,EAAG/E,QAAS,WAAO,EAAKoE,WAAWmR,EAASC,IAA3E,uBAGA,cAAC,IAAD,CAASxV,QAAS,WAAO,EAAKoE,cAA9B,8BAON,eAAC,IAAD,CACM1E,OAAQ4D,KAAK3G,MAAMgZ,aACnB/V,QAAS,WAAQ,EAAKyX,eAF5B,UAKE,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,kCACA,cAAC,IAAD,IACA,cAAC,IAAD,CAAWre,GAAI,EAAf,SACE,cAAC,IAAD,UAEE,cAAC,IAAD,UACE,eAAC,KAAD,CAAWse,MAAI,EAAC5S,SAAU,SAAC5C,GAAD,OAAW,EAAK6C,aAAa7C,EAAO,UAA9D,UAEE,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,aAMR,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ/B,YAAY,OAAOgF,GAAI,EAAG/E,QAAS,WAAO,EAAKoT,aAAvD,kBAGA,cAAC,IAAD,CAASpT,QAAS,WAAO,EAAKqX,eAA9B,oC,GAvZSrS,cA+ZNqQ,MC7MArB,OA9Nf,WAEE,IAAM3M,EAAUC,cAEVL,GADa9J,YAAkB,WAAY,YAC/BA,YAAkB,WAAY,UAKhD,GAHc+W,eACKzX,IAAMI,SAEDJ,IAAMC,UAAS,IAAvC,mBAAOkU,EAAP,KAAawD,EAAb,KACMmD,EAAc,kBAAMnD,GAASxD,IAoBnC,EAA0BlU,mBAAS,IAAnC,mBAAO2F,EAAP,KAAckF,EAAd,KACA,EAAsC7K,mBAAS,IAA/C,mBAAO8a,EAAP,KAAoBC,EAApB,KACA,EAAsC/a,mBAAS,IAA/C,mBAAOgb,EAAP,KAAoBC,EAApB,KAgBA,OADAzR,QAAQC,KA7BO,WAIb,QAAI9D,EAAMiS,MAFE,sDA6BZ,mCACE,cAAC,IAAD,CAAMnT,SAAS,WAAWhI,GAAG,OAA7B,SACE,eAAC,IAAD,CACEgD,EAAG,CAAE4B,GAAI,UAAWjE,GAAI,OAAQkP,GAAI,QACpC5M,EAAE,OACF+D,KAAK,SACLtC,GAAG,OACH/E,eAAe,gBACfK,GAAG,OACHkG,GAAI,CAAEtB,GAAI,QAASjE,GAAI,OAPzB,UASE,cAAC,IAAD,CACEjB,WAAW,SACXC,eAAe,QACf0W,MAAO,CAAE+E,WAAY,QACrBnY,EAAG,CAAEzD,KAAM,OAAQmB,GAAI,MAAOkP,GAAI,OAJpC,SAME,eAAC,IAAD,CACE3I,UAAU,SACVjE,EAAE,OACFoY,WAAW,cAEXxQ,EAAE,OACFxE,GAAI,CAAE1F,GAAI,QAASkP,GAAI,QANzB,UAQE,cAAC,IAAD,CAAS/P,MAAM,UAAUgG,SAAS,OAAO9F,GAAG,OAA5C,+BAGA,cAAC,IAAD,CACEA,GAAG,OACHiH,GAAG,MACHnH,MAAOgO,EACPrJ,WAAW,OACXqB,SAAS,SAIX,eAAC,KAAD,WACE,cAAC,KAAD,CAAWmB,GAAG,MAAMnB,SAAS,KAAKrB,WAAW,SAA7C,mBAGA,cAAC,IAAD,CACE5B,aAAa,OACb7C,GAAG,OACH8F,SAAS,KACT6F,KAAK,OACLpB,MAAOrB,EACP1D,YAAY,WACZmI,iBAAiB,UAGjBpC,SAAU,SAAC1M,GAAD,OAAOuP,EAASvP,EAAE2B,OAAO+J,QACnCkB,YAAY,oBACZC,KAAK,OAEP,cAAC,KAAD,CAAWzE,GAAG,MAAMnB,SAAS,KAAKrB,WAAW,SAA7C,0BAGA,eAAC,IAAD,CAAYiH,KAAK,KAAjB,UACE,cAAC,IAAD,CACE7I,aAAa,OACb7C,GAAG,OACH8F,SAAS,KACT6F,KAAM8L,EAAO,OAAS,WACtBlN,MAAO8T,EACP7Y,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC1M,GAAD,OAAOyf,EAAezf,EAAE2B,OAAO+J,QACzCkB,YAAY,oBACZC,KAAK,OAEP,cAAC,IAAD,CAAmBtK,MAAM,SAAzB,SACE,cAAC,IAAD,CAAQ4B,EAAE,UAAU0I,KAAK,KAAK7E,QAASuX,EAAvC,SACG3G,EAAO,OAAS,cAIvB,cAAC,KAAD,CAAWxQ,GAAG,MAAMnB,SAAS,KAAKrB,WAAW,SAA7C,0BAGA,eAAC,IAAD,CAAYiH,KAAK,KAAjB,UACE,cAAC,IAAD,CACE7I,aAAa,OACb7C,GAAG,OACH8F,SAAS,KACT6F,KAAM8L,EAAO,OAAS,WACtBlN,MAAOgU,EACP/Y,YAAY,WACZmI,iBAAiB,UACjBpC,SAAU,SAAC1M,GAAD,OAAO2f,EAAe3f,EAAE2B,OAAO+J,QACzCkB,YAAY,oBACZC,KAAK,OAEP,cAAC,IAAD,CAAmBtK,MAAM,SAAzB,SACE,cAAC,IAAD,CAAQ4B,EAAE,UAAU0I,KAAK,KAAK7E,QAASuX,EAAvC,SACG3G,EAAO,OAAS,cAIvB,cAAC,IAAD,CACE5Q,QApHK,WACF,GAAbwX,GAA6B,GAAbE,GAClBrO,IAAM7D,KAAK,wDAAyD,CAClEnD,MAAOA,EACPuV,OAAOJ,EACPK,YAAaH,IACZ7U,MAAK,SAAC2G,GACPzG,OAAOxG,SAASyG,QAAO,MAEzBkD,QAAQC,IAAI,QAEZD,QAAQC,IAAI,OA0GAlH,SAAS,OACT6F,KAAK,SACLzI,GAAG,UACHD,EAAE,OACFD,EAAE,KACFhD,GAAG,OACHF,MAAM,QACNuG,GAAG,OACHf,OAAQ,CACNpC,GAAI,WAENqC,QAAS,CACPrC,GAAI,WAdR,uBAoBF,cAAC,IAAD,CACE3D,cAAc,SACdI,eAAe,SACfD,WAAW,SACXsH,KAAK,OACLX,GAAG,MALL,SAOE,eAAC,IAAD,CAAMvG,MAAOgO,EAAWrJ,WAAW,SAAnC,mCAEE,cAAC,IAAD,CAAM3E,MAAO,UAAWK,GAAG,OAAO8G,GAAG,MAAMxC,WAAW,OACpDoC,QAvKH,WACbqH,EAAQd,KAAK,iBAqKC,qBAIA,eAAC,IAAD,CACFzN,eAAe,SACfD,WAAW,SACXsH,KAAK,OACLX,GAAG,MAJD,eAOA,cAAC,IAAD,CAAMvG,MAAO,UAAWK,GAAG,OAAO8G,GAAG,MAAMxC,WAAW,OACpDoC,QA/KD,WACfqH,EAAQd,KAAK,kBA6KC,kCASR,cAAC,IAAD,CACE3M,QAAS,CAAEjB,KAAM,OAAQmB,GAAI,SAE7BqC,EAAE,QACFC,EAAE,QACF+E,SAAS,WACTsT,MAAM,OACNC,IAAI,QAPN,SASE,cAAC,IAAD,CACEC,QAASC,GACTxY,EAAE,QACFD,EAAE,QACF0Y,OAAO,QACPlM,WAAW,MACXmM,uBAAuB,mBChMtBrB,GA5BE,CACX,CACEtZ,KAAM,UACN+D,KAAM,UACND,QAAS,sEACTa,KAAM,cAAClE,EAAD,CAAc3B,MAAM,YAC1Bya,UAAWM,GACX3V,OAAQ,SAEV,CACElE,KAAM,iBACN+D,KAAM,iBACND,QAAS,sEACTa,KAAM,cAAClE,EAAD,CAAc3B,MAAM,YAC1Bya,UAAWoE,GACXzZ,OAAQ,SAEV,CACElE,KAAM,UACN+D,KAAM,UACND,QAAS,sEACTa,KAAM,cAACpD,EAAD,CAAYzC,MAAM,YACxB8e,iBAAiB,EACjBrE,UAAW2B,GACXhX,OAAQ,U,QCvCH2Z,GAAe,CAC1B3G,OAAQ,CACN4G,KAAM,CACJ,IAAK,YAGT1W,OAAQ,CACN2W,OAAQ,SAACzf,GAAD,MAAY,CAClB0f,KAAM,CACJ9b,GAAI+b,aAAK,UAAW,WAAhBA,CAA4B3f,GAChCqY,WAAY,yBAEduH,KAAM,CACJvH,WAAY,6BCZPwH,GAAcC,aAAkB,CAC3Cxa,GAAI,QACJjE,GAAI,QACJkP,GAAI,QACJpQ,GAAI,WCPO4f,GAAe,CAC1BC,WAAY,CACVC,OAAQ,CACNC,SAAU,CACR,WAAY,CACVla,OAAQ,CACNI,UAAW,SAGf,wBAAwB,aACtBxC,GAAI,cACJuB,WAAY,OACZ5B,aAAc,UACdkI,OAAQ,UACRzF,OAAQ,OACRC,QAAS,CACPrC,GAAI,cACJ1B,UAAW,OACXgE,YAAa,eAEfC,OAAQ,CACNC,UAAW,SAZf,SAcU,CACNA,UAAW,UAIjB+Z,UAAW,CACT5c,aAAc,OACd4C,OAAQ,CACNC,UAAW,YCPRga,GAAgB,CAC3BJ,WAAY,CACVnX,KA1BS,CACXsX,UAAW,CACT5U,EAAG,OACHpK,QAAS,OACTlB,cAAe,SACf6B,MAAO,OACP4G,SAAU,WACVyC,SAAU,MACVkV,SAAU,aACVC,eAAgB,cAElBJ,SAAU,CACRK,MAAO,SAACvgB,GAAD,MAAY,CACjB4D,GAAwB,SAApB5D,EAAMwgB,UAAuB,WAAa,QAC9C1e,MAAO,OACPsE,UAAW,sCACX7C,aAAc,UAGlBkd,aAAc,CACZhd,QAAS,YCbAid,GAAoB,CAC/BV,WAAY,CACV9W,SATa,CACfiX,UAAW,CACThf,QAAS,OACTW,MAAO,WCIE6e,GAAsB,CACjCX,WAAY,CACV/W,WATe,CACjBkX,UAAW,CACThf,QAAS,OACTW,MAAO,WCsBE8e,GAAqB,CAChCZ,WAAY,CACVa,UA3Bc,CAChBV,UAAW,CACTW,MAAO,QACPtQ,SAAU,OACVqN,SAAU,OACVnV,SAAU,WACVqY,UAAW,OACX9Y,WAAY,kDACZ+Y,mBAAoB,iBACpBC,mBAAoB,qBACpBC,yBAA0B,wBAE5BhB,SAAU,CACRiB,KAAM,SAACnhB,GAAD,MAAY,CAChB8gB,MAAO,UAETM,IAAK,SAACphB,GAAD,MAAY,CACf8gB,MAAO,UAGXL,aAAc,CACZhd,QAAS,WCZA4d,GAAwB,CACnCrB,WAAY,CACVsB,aAXiB,CACnBnB,UAAW,CACTxY,GAAI,OACJvG,GAAI,OACJiE,GAAI,OACJsD,GAAI,WCEK4Y,GAA0B,CACrCvB,WAAY,CACVwB,eATmB,CACrBrB,UAAW,CACT5U,EAAG,YACHkW,UAAW,0BCYAC,eACb,CAAE7B,gBACFN,GCjBkB,CAChBG,KAAM,UDkBRK,GEjByB,CACvBC,WAAY,CACR2B,MAAO,CACHC,MAAO,CACHvgB,GAAI,CACAS,MAAO,OACPD,OAAQ,SAGhBse,UAAW,CACP0B,cAAe,iBCZL,CACxB7B,WAAY,CACV8B,KAAM,CAEJC,WAAY,OACZ5B,UAAW,CACTna,OAAQ,CACNgc,eAAgB,QAElB7b,OAAQ,CACNC,UAAW,YCVO,CAC1B4Z,WAAY,CACViC,OAAQ,CAEN/B,SAAU,CACR,cAAe,CACb1Y,UAAW,QACXpB,UAAW,sBACX8b,QAAS,WJejB9B,GACAM,GACAC,GACAC,GACAS,GACAE,I,kEKkBa,SAASY,GAAaniB,GACoBA,EAA/C0G,UAA+C1G,EAApCiH,OAAoCjH,EAA5BmH,QAA4BnH,EAAnBoiB,MAApC,YAAuDpiB,EAAvD,QACA,EAAgCiE,mBAASjE,EAAMqiB,WAA/C,mBAEA,GAFA,UAEuCC,eAA/B9B,EAAR,EAAQA,UAAW+B,EAAnB,EAAmBA,gBAGfviB,EAAM0G,UAIKhC,YACb,2DACA,SAEgBA,YAAkB,QAAS,YACnBA,YAAkB,QAAS,eACvBA,YAAkB,WAAY,SAC/BA,YAAkB,WAAY,SAP3D,IAQM8d,EAAcxe,IAAMI,SACpBuG,EAAYtC,eAAeC,QAAQ,YACzC,EAAsCrE,mBAAS,IAA/C,mBAAO8a,EAAP,KAAoBC,EAApB,KACA,EAAsC/a,mBAAS,IAA/C,mBAAOgb,EAAP,KAAoBC,EAApB,KAsDA,OACE,mCACE,cAAC,IAAD,CACEjY,OAAQjH,EAAMiH,OACdE,QAASnH,EAAMmH,QACfK,UAA4C,QAAjC1G,SAASC,gBAAgBC,IAAgB,OAAS,QAC7DyG,cAAe+a,EACfC,oBAAoB,EALtB,SAOE,eAAC,IAAD,WACE,eAAC,IAAD,CAAc7b,GAAG,OAAOtG,GAAG,OAA3B,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAMkG,SAAS,KAAKrB,WAAW,OAAO4B,GAAG,OAAzC,2BAGA,cAAC,IAAD,CAAMP,SAAS,KAAK9F,GAAG,OAAvB,yCAGA,cAAC8C,EAAD,OAEF,cAAC,IAAD,CAAYG,EAAE,QAAQ0B,GAAG,OAAOsD,GAAG,OAAnC,SACE,eAAC,IAAD,CAAM1I,cAAc,SAApB,UAEE,eAAC,IAAD,CACEI,eAAe,gBACfD,WAAW,SACXM,GAAG,OAHL,UAKE,cAAC,IAAD,CAAM8F,SAAS,KAAKrB,WAAW,MAAMzE,GAAG,MAAxC,wBAGA,eAAC,IAAD,CAAQ6G,QAASgb,EAAjB,UACkB,UAAd/B,EAAwB,OAAS,QADrC,cAKF,cAAChd,EAAD,IACA,eAAC,IAAD,CAAKuD,GAAG,OAAR,UACE,cAAC,IAAD,CAAMP,SAAS,KAAKrB,WAAW,MAA/B,6BAGA,cAAC,IAAD,CAAMqB,SAAS,KAAK9F,GAAG,SAEvB,cAAC,IAAD,UACA,uBAAMZ,GAAG,OAAO8L,SA/FT,WACiB,SAAhCvD,eAAeC,QAAQ,QACrBqC,GAAUoU,GAA0B,GAAbE,GACzBrO,IAAM7D,KAAK,yDAA0D,CACnEnD,MAAOvB,eAAeC,QAAQ,SAC9B6W,OAAOJ,EACPK,YAAaH,IAEZ7U,MAAK,SAAC2G,GACP1I,eAAe8I,QAAQ,WAAW8N,GAClC3U,OAAOxG,SAASyG,QAAO,MAEzBkD,QAAQC,IAAI,QAEZD,QAAQC,IAAI,MAEmC,IAA1CrF,eAAeC,QAAQ,kBAE1BqC,GAAUoU,GAA0B,GAAbE,GAC3BrO,IAAM7D,KAAK,wDAAyD,CAClEnD,MAAOvB,eAAeC,QAAQ,SAC9B6W,OAAOJ,EACPK,YAAaH,IACZ7U,MAAK,SAAC2G,GACP1I,eAAe8I,QAAQ,WAAW8N,GAClC3U,OAAOxG,SAASyG,QAAO,MAEzBkD,QAAQC,IAAI,QAEZD,QAAQC,IAAI,MAC4B,YAAhCrF,eAAeC,QAAQ,UAC3BqC,GAAUoU,GAA0B,GAAbE,GACzBrO,IAAM7D,KAAK,sDAAuD,CAChEnD,MAAOvB,eAAeC,QAAQ,SAC9B6W,OAAOJ,EACPK,YAAaH,IAEZ7U,MAAK,SAAC2G,GACP1I,eAAe8I,QAAQ,WAAW8N,GAClC3U,OAAOxG,SAASyG,QAAO,MAEzBkD,QAAQC,IAAI,QAEZD,QAAQC,IAAI,QAoDJ,UACA,eAAC,IAAD,CAAWnN,GAAI,EAAf,UACA,cAAC,KAAD,4BACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEwL,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAe7C,MAAM,eAEjC,cAAC,IAAD,CACE6L,KAAK,WACLJ,SAAU,SAAC1M,GAAD,OAAOyf,EAAezf,EAAE2B,OAAO+J,QACzCkB,YAAY,eACZjG,YAAY,WACZmI,iBAAiB,eAGrB,cAAC,KAAD,4BACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEtC,cAAc,OACd1I,SAAU,cAAC,IAAD,CAAe7C,MAAM,eAEjC,cAAC,IAAD,CACE6L,KAAK,YACLJ,SAAU,SAAC1M,GAAD,OAAO2f,EAAe3f,EAAE2B,OAAO+J,QACzCkB,YAAY,gBACZjG,YAAY,WACZmI,iBAAiB,kBAGrB,cAAC,IAAD,CAAQhC,KAAK,SAASzI,GAAG,UAEzBpD,MAAM,QAAQ8L,GAAI,EAClBtG,OAAQ,CACNpC,GAAI,WAENqC,QAAS,CACPrC,GAAI,WAPN,0BAcF,cAAC,IAAD,CACEvD,eAAe,SACfD,WAAW,SACXuD,EAAE,OACFjD,GAAG,wB,cCtNN,I,2DCgCA,SAASgiB,GAAY1iB,GAG+BA,EAAzDyD,QAAyDzD,EAAhDqD,SAAgDrD,EAAtCoiB,MAA3B,IAAkC1b,EAA+B1G,EAA/B0G,UAAsBpD,GAAStD,EAApBkH,OAA7C,YAAiElH,EAAjE,KAGM4O,EAAUC,cAIZ8T,GAHWje,YAAkB,WAAY,YAC/BA,YAAkB,QAAS,YAC1BA,YAAkB,WAAY,YAC5BA,YAAkB,WAAY,aAC9BA,YAAkB,WAAY,YAE3CgC,IACFic,EAAa,SAGf,IAAMH,EAAcxe,IAAMI,SAS1B,OACE,eAAC,IAAD,CACEuE,GAAI,CAAErD,GAAI,MAAOjE,GAAI,QACrBsC,EAAG,CAAE2B,GAAI,OAAQjE,GAAI,QACrBjB,WAAW,SACXH,cAAc,MAJhB,UAQE,cAAC,IAAD,CAAS0F,GAAG,eAAZ,SACE,cAAC,IAAD,CACEgC,GAAG,MACHrH,GAAG,MACHc,GAAI,CAAEkE,GAAI,MAAOjE,GAAI,QACrBb,MAAOmiB,EACPpb,QAvBO,WAGZc,eAAeua,QACfhU,EAAQd,KAAK,iBAoBRrK,QAAQ,wBACRof,UACE/hB,SAASC,gBAAgBC,IACvB,GAEA,cAACgC,EAAD,CAAaxC,MAAOmiB,EAAYhf,EAAE,OAAOD,EAAE,OAAOtC,GAAG,QAGzD0hB,SACEhiB,SAASC,gBAAgBC,IACvB,cAACgC,EAAD,CAAaxC,MAAOmiB,EAAYhf,EAAE,OAAOD,EAAE,OAAOtC,GAAG,QAErD,GAlBN,SAsBE,cAAC,IAAD,CAAMD,QAAS,CAAEmE,GAAI,OAAQjE,GAAI,QAAjC,wBAGJ,cAACwC,EAAD,aACEQ,SAAUrE,EAAMqE,SAChBqC,UAAW1G,EAAM0G,UACjBpC,OAAQA,IAEJhB,IAEN,cAACJ,EAAD,CACEuI,OAAO,UACP9D,GAAI,CAAEzH,KAAM,OAAQC,GAAI,OACxBiB,GAAG,OACHiG,IAAKmb,EACLjb,QAASvH,EAAMkH,OACf1G,MAAOmiB,EACPhf,EAAE,OACFD,EAAE,Y,uEC9FK,SAASqf,GAAY/iB,GAClC,MAAgCiE,oBAAS,GAAzC,mBAAO+e,EAAP,KAAiBC,EAAjB,KAMEC,GAGEljB,EAPFyD,QAOEzD,EANFqD,SAMErD,EALFoiB,MAKEpiB,EAJF0G,UAIE1G,EAHFkjB,WAMEC,GAHAnjB,EAFFkH,OANF,YAQIlH,EARJ,IAWe0E,YAAkB,WAAY,aACzC0e,EAAgB1e,YAAkB,WAAY,YAC9C2e,EAAiB,WACjBC,EAAe,OACfC,EAAiB,aACjBC,EAAe,OACfC,EAAW,OACXC,EAAe,cACfC,EAAkB,MAClBC,EAAW,QACK,IAAhB5jB,EAAMoiB,QACS,IAAbY,IACFK,EAAiB,QACjBG,EAAe9e,YACb,mCACA,QAEF+e,EAAW/e,YACT,6FACA,4FAEFgf,EAAehf,YAAkB,UAAW,6BAC5C4e,EAAe5e,YACb,OACA,kDAGF1E,EAAM0G,YACR6c,EAAiB,OACjBF,EAAiB,WACjBF,EAAW,QACXC,EAAgB,QAChBO,EAAkB,OAClBC,EAAW,QAUb,OADAtZ,OAAOuZ,iBAAiB,UAPH,WACfvZ,OAAOwZ,QAAU,EACnBb,GAAY,GAEZA,GAAY,MAKd,cAAC,IAAD,CACEva,SAAU2a,EACVjd,UAAWod,EACX5f,GAAI6f,EACJvd,YAAawd,EACb3N,OAAQuN,EACRjT,eAAgBkT,EAChBQ,YAAY,QACZC,YAAY,QACZC,gBAAgB,iBAChBjD,mBAAmB,2BACnB,sBAAoB,+CACpBE,yBAAyB,iCACzB9gB,WAAY,CAAED,GAAI,UAClBoD,aAAa,OACbpC,QAAQ,OACR4Z,KAAK,OACL1a,eAAgB,CAAEF,GAAI,UACtB2G,WAAW,SACX1B,GAAG,OACH2B,GAAI4c,EACJpjB,GAAG,MACHud,KAAuC,QAAjChd,SAASC,gBAAgBC,IAAgB,OAAS,GACxDgb,MAAwC,QAAjClb,SAASC,gBAAgBC,IAAgB,GAAK,OACrDV,GAAI,CACFgF,GAAIse,EACJviB,GAAI,QAENgE,GAAI,CACFlF,GAAI,QAENyG,GAAG,MACHqV,IAAI,OACJtY,EAAG,CAAE2B,GAAI,qBAAsBnF,GAAI,8BAjCrC,SAmCE,eAAC,IAAD,CACEwD,EAAE,OACF1D,cAAe,CACbqF,GAAI,SACJjE,GAAI,OAENjB,WAAY,CAAED,GAAI,UANpB,UAQE,eAAC,IAAD,CAAKO,GAAI,CAAE4E,GAAI,MAAOjE,GAAI,OAA1B,UACE,cAAC,KAAD,UACE,cAAC,KAAD,CAAgBb,MAAO2iB,EAAvB,SACE,cAAC,KAAD,CAAgBliB,KAAK,IAAIT,MAAO4iB,EAAhC,wBAOJ,cAAC,IAAD,CACE5iB,MAAO2iB,EACPliB,KAAK,IACL2C,GAAG,UACHL,aAAa,UACb4B,WAAW,OACXa,OAAQ,CAAExF,MAAO,CAAE2iB,aACnBld,QAAS,CACPrC,GAAI,UACJ1B,UAAW,OACXgE,YAAa,eAEfC,OAAQ,CACNC,UAAW,QAbf,SAgBG8c,OAGL,cAAC,IAAD,CAAKvb,GAAG,OAAOhE,EAAG,CAAE2B,GAAI,OAAQjE,GAAI,SAApC,SACE,cAAC,GAAD,CACE6F,OAAQlH,EAAMkH,OACd7C,SAAUrE,EAAMqE,SAChBqC,UAAW1G,EAAM0G,UACjB0b,MAAOpiB,EAAMoiB,e,mDC7IV,SAAS8B,GAAYlkB,GACwBA,EAAlD0G,UAAkD1G,EAAvCiM,SAAuCjM,EAA7BmkB,SAA6BnkB,EAAnBoiB,MAAvC,YAA0DpiB,EAA1D,QAEI2iB,EAAaje,YAAkB,WAAY,YAC3C0f,EAAW1f,YAAkB,QAAS,YAEtC1E,EAAM0G,UAIV,IAAM8b,EAAcxe,IAAMI,SAC1B,OACE,mCACE,cAAC,IAAD,CACEV,EAAE,OACFC,EAAE,OACF4D,QAASvH,EAAMkH,OACftD,GAAIwgB,EACJ1b,SAAS,QACTjF,QAAQ,WACRqa,KAAuC,QAAjChd,SAASC,gBAAgBC,IAAgB,OAAS,GACxDgb,MAAwC,QAAjClb,SAASC,gBAAgBC,IAAgB,GAAK,OACrDqjB,OAAO,OACP9gB,aAAa,OACb6C,UAAU,gCAXZ,SAaE,cAAClD,EAAD,CACEuI,OAAO,UACPpE,IAAKmb,EACLhiB,MAAOmiB,EACPhf,EAAE,OACFD,EAAE,a,8BC1BGmd,OAXf,SAAmB7gB,GACjB,IAAQyD,EAA+BzD,EAA/ByD,QAASJ,EAAsBrD,EAAtBqD,SAAaC,EAA9B,YAAuCtD,EAAvC,IACM8I,EAASC,aAAe,YAAa,CAAEtF,YAE7C,OACE,cAAC,IAAD,yBAAKuF,MAAOF,GAAYxF,GAAxB,aACGD,M,0BCKQme,OAXf,SAAwBxhB,GACtB,IAAQyD,EAA+BzD,EAA/ByD,QAASJ,EAAsBrD,EAAtBqD,SAAaC,EAA9B,YAAuCtD,EAAvC,IACM8I,EAASC,aAAe,iBAAkB,CAAEtF,YAElD,OACE,cAAC,IAAD,yBAAKuF,MAAOF,GAAYxF,GAAxB,aACGD,M,0BCKQie,OAXf,SAAsBthB,GACpB,IAAQyD,EAA+BzD,EAA/ByD,QAASJ,EAAsBrD,EAAtBqD,SAAaC,EAA9B,YAAuCtD,EAAvC,IACM8I,EAASC,aAAe,eAAgB,CAAEtF,YAEhD,OACE,cAAC,IAAD,yBAAKuF,MAAOF,GAAYxF,GAAxB,aACGD,M,uBCHDmW,GAAU,CACd4H,IAAK,CAAEpc,IAAK,SAAUsf,cAAe,C,OAAClD,IACtCmD,IAAK,CAAEvf,IAAK,WAEP,SAASwf,GAAT,GAAoC,IAAbnhB,EAAY,EAAZA,SACtBrC,EAAsC,MAAhCF,SAASC,gBAAgBC,IAAc,MAAQ,MACrDyjB,EAAQC,aAAYlL,GAAQxY,IAClC,OAAO,cAAC,KAAD,CAAeiK,MAAOwZ,EAAOphB,SAAUA,ICHhDshB,IAASC,OACP,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOljB,KAAI,QAAWuZ,UCDb,SAAejb,GAC5B,iBAAoBA,GAApB,IAEM6kB,EAAU7gB,IAAM8gB,YACtB9gB,IAAMuO,WAAU,WAGd,OAFAzR,SAAS4e,KAAK3I,MAAM8G,SAAW,QAExB,gBAET,IAgEMkH,EAAS/gB,IAAMI,SAErB,OADAtD,SAASC,gBAAgBC,IAAM,MAE7B,cAAC,IAAD,CAAgBwX,MAAOA,GAAOwM,UAAU,EAAOrhB,EAAE,OAAjD,SACE,eAAC,IAAD,CAAK0D,IAAK0d,EAAQphB,EAAE,OAApB,UAEE,cAAC,IAAD,CAAKA,EAAE,OAAP,SACE,cAAC,IAAD,CAAK0D,IAAKwd,EAASlhB,EAAE,OAArB,SACE,eAAC,IAAD,WA7BQ,SAAZshB,EAAa3gB,GACjB,OAAOA,EAAOQ,KAAI,SAACC,EAAMC,GACvB,OAAID,EAAKmgB,UAGa,YAAlBngB,EAAKG,SAFA+f,EAAUlgB,EAAKW,OAKJ,UAAhBX,EAAKa,OAEL,cAAC,IAAD,CACElE,KAAMqD,EAAKa,OAASb,EAAKrD,KACzBuZ,UAAWlW,EAAKkW,WACXjW,GAIF,QAaAigB,CAAU3gB,IACX,cAAC,IAAD,CAAU0J,KAAK,QAAQrI,GAAG,wBAIhC,cAAC,IAAD,CAAKrF,GAAG,OAAO8E,GAAG,OAAOtD,MAAM,SAAS4F,KAAK,OAA7C,SACE,cAAC3H,EAAD,cDtFJ,cAAC,IAAD,CAAO2B,KAAI,SAAYuZ,UEMd,SAAmBjb,GAChC,IAAWsD,EAAX,iBAAoBtD,GAEpB,EAA4CiE,mBAAS,eAArD,mBAAO8D,EAAP,KAAuBod,EAAvB,KACA,EAA0BlhB,oBAAS,GAAnC,mBAAOme,EAAP,KAAcgD,EAAd,KAEMjhB,EAAYH,IAAM8gB,YA0DlBO,EAAkB,SAAlBA,EAAmB/gB,GAEvB,IADA,IACSghB,EAAI,EAAGA,EAAIhhB,EAAO6R,OAAQmP,IACjC,GAAIhhB,EAAOghB,GAAGpgB,SAAU,CACtB,IAAIqgB,EAAuBF,EAAgB/gB,EAAOghB,GAAG5f,OACrD,GAJe,QAIX6f,EACF,OAAOA,OAGT,IACuE,IAArEjb,OAAOxG,SAAS7C,KAAKukB,QAAQlhB,EAAOghB,GAAG1f,OAAStB,EAAOghB,GAAG5jB,OAEtD4C,EAAOghB,GAAGhG,gBACZ,OAAOhb,EAAOghB,GAAGhG,gBAKzB,OAjBmB,OAwCrB,EAAoCtY,cAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAGxB,OAFArG,SAASC,gBAAgBC,IAAM,MAG7B,eAAC,IAAD,CAAgBwX,MAAOA,GAAOwM,UAAU,EAAxC,UACE,cAAC,EAAD,aACE1gB,OAAQA,GACRD,SAAU,SACVlD,QAAQ,OACR4G,eAAgBA,GACZzE,IAEN,eAAC,GAAD,CACE+D,IAAKlD,EACLR,EAAG,CACDzD,KAAM,OACNC,GAAI,sBAJR,UAOE,cAAC,KAAD,UACE,cAAC4iB,GAAD,aACE7b,OAAQA,EACR7C,SAAU,YACV6e,UAnHe,SAAjBuC,IAGJ,IADA,IAAIC,EAAc,qBACTJ,EAAI,EAAGA,EAAIhhB,GAAO6R,OAAQmP,IACjC,GAAIhhB,GAAOghB,GAAGJ,SAAU,CACtB,IAAIS,EAAsBF,EAAenhB,GAAOghB,GAAG5f,OACnD,GAAIigB,IAAwBD,EAC1B,OAAOC,OAEJ,GAAIrhB,GAAOghB,GAAGpgB,SAAU,CAC7B,IAAI0gB,EAAsBH,EAAenhB,GAAOghB,GAAG5f,OACnD,GAAIkgB,IAAwBF,EAC1B,OAAOE,OAGT,IACuE,IAArEtb,OAAOxG,SAAS7C,KAAKukB,QAAQlhB,GAAOghB,GAAG1f,OAAStB,GAAOghB,GAAG5jB,MAE1D,OAAO4C,GAAOghB,GAAG7f,KAIzB,OAAOigB,EA6FYD,GACX/e,UAAW2e,EAAgB/gB,IAC3B8d,MAAOA,GACH9e,MA1HwB,4BAA7BgH,OAAOxG,SAASgC,SA8HjB,cAAC,GAAD,UACE,cAAC,GAAD,UACE,eAAC,IAAD,WArDM,SAAZmf,EAAa3gB,GACjB,OAAOA,EAAOQ,KAAI,SAACC,EAAMC,GACvB,OAAID,EAAKmgB,UAGa,YAAlBngB,EAAKG,SAFA+f,EAAUlgB,EAAKW,OAKJ,WAAhBX,EAAKa,OAEL,cAAC,IAAD,CACElE,KAAMqD,EAAKa,OAASb,EAAKrD,KACzBuZ,UAAWlW,EAAKkW,WACXjW,GAIF,QAqCEigB,CAAU3gB,IACX,cAAC,IAAD,CAAU0J,KAAK,SAASrI,GAAG,4BAI/B,KACJ,cAAC5F,EAAD,IACA,cAAC,KAAD,UACE,cAACmkB,GAAD,CACExd,UAAW2e,EAAgB/gB,IAC3B8d,MAAOA,EACPlb,OAAQA,MAGZ,cAACib,GAAD,CACEzb,UAAW2e,EAAgB/gB,IAC3B2C,OAAQA,EACRE,QAASA,EACTkb,UAAWD,EACX+B,SAAU,SAAClZ,GACTma,EAASna,IAEX4a,SAAU,kBAAMV,EAAkB,WAClCW,cAAe,kBAAMX,EAAkB,2BFtK3C,cAAC,IAAD,CAAOzjB,KAAI,OAAUuZ,UGKZ,SAAmBjb,GAChC,IAAWsD,EAAX,iBAAoBtD,GAEpB,EAA4CiE,mBAAS,eAArD,mBAAO8D,EAAP,KAAuBod,EAAvB,KACA,EAA0BlhB,oBAAS,GAAnC,mBAAOme,EAAP,KAAcgD,EAAd,KAEMjhB,EAAYH,IAAM8gB,YA4BlBO,EAAkB,SAAlBA,EAAmB/gB,GAEvB,IADA,IACSghB,EAAI,EAAGA,EAAIhhB,EAAO6R,OAAQmP,IACjC,GAAIhhB,EAAOghB,GAAGpgB,SAAU,CACtB,IAAIqgB,EAAuBF,EAAgB/gB,EAAOghB,GAAG5f,OACrD,GAJe,QAIX6f,EACF,OAAOA,OAGT,IACuE,IAArEjb,OAAOxG,SAAS7C,KAAKukB,QAAQlhB,EAAOghB,GAAG1f,OAAStB,EAAOghB,GAAG5jB,OAEtD4C,EAAOghB,GAAGhG,gBACZ,OAAOhb,EAAOghB,GAAGhG,gBAKzB,OAjBmB,OAwCrB,EAAoCtY,cAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAGxB,OAFArG,SAASC,gBAAgBC,IAAM,MAG7B,cAAC,IAAD,CAAgBwX,MAAOA,GAAOwM,UAAU,EAAxC,SACE,eAACR,GAAD,WACE,cAAC,EAAD,aACElgB,OAAQA,GACRD,SAAU,SACVlD,QAAQ,OACR4G,eAAgBA,GACZzE,IAEN,eAAC,GAAD,CACEG,QAAQ,MACR4D,IAAKlD,EACLR,EAAG,CACDzD,KAAM,OACNC,GAAI,sBALR,UAQE,cAAC,KAAD,UACE,cAAC4iB,GAAD,aACE7b,OAAQA,EACR7C,SAAU,SACV6e,UA1FW,SAAjBuC,EAAkBnhB,GAEtB,IADA,IAAIohB,EAAc,qBACTJ,EAAI,EAAGA,EAAIhhB,EAAO6R,OAAQmP,IACjC,GAAIhhB,EAAOghB,GAAGJ,SAAU,CACtB,IAAIS,EAAsBF,EAAenhB,EAAOghB,GAAG5f,OACnD,GAAIigB,IAAwBD,EAC1B,OAAOC,OAEJ,GAAIrhB,EAAOghB,GAAGpgB,SAAU,CAC7B,IAAI0gB,EAAsBH,EAAenhB,EAAOghB,GAAG5f,OACnD,GAAIkgB,IAAwBF,EAC1B,OAAOE,OAGT,IACuE,IAArEtb,OAAOxG,SAAS7C,KAAKukB,QAAQlhB,EAAOghB,GAAG1f,OAAStB,EAAOghB,GAAG5jB,MAE1D,OAAO4C,EAAOghB,GAAG7f,KAIvB,OAAOigB,EAqEcD,CAAenhB,IAC1BoC,UAAW2e,EAAgB/gB,IAC3B8d,MAAOA,GACH9e,MA/FsB,4BAA7BgH,OAAOxG,SAASgC,SAmGf,cAAC,GAAD,UACE,cAAC,GAAD,UACE,eAAC,IAAD,WAvDI,SAAZmf,EAAa3gB,GACjB,OAAOA,EAAOQ,KAAI,SAACC,EAAMC,GACvB,OAAID,EAAKmgB,UAGa,YAAlBngB,EAAKG,SAFA+f,EAAUlgB,EAAKW,OAKJ,SAAhBX,EAAKa,QAAqC,WAAhBb,EAAKa,OAE/B,cAAC,IAAD,CACElE,KAAMqD,EAAKa,OAASb,EAAKrD,KACzBuZ,UAAWlW,EAAKkW,WACXjW,GAIF,QAuCIigB,CAAU3gB,IACX,cAAC,IAAD,CAAU0J,KAAK,OAAOrI,GAAG,iCAI7B,KACJ,cAAC5F,EAAD,IACA,cAAC,KAAD,UACE,cAACmkB,GAAD,CACExd,UAAW2e,EAAgB/gB,IAC3B8d,MAAOA,EACPlb,OAAQA,MAGZ,cAACib,GAAD,CACEzb,UAAW2e,EAAgB/gB,IAC3B2C,OAAQA,EACRE,QAASA,EACTkb,UAAWD,EACX+B,SAAU,SAAClZ,GACTma,EAASna,IAEX4a,SAAU,kBAAMV,EAAkB,WAClCW,cAAe,kBAAMX,EAAkB,6BHzI7C,cAAC,IAAD,CAAUnX,KAAI,IAAOrI,GAAG,sBAG5B7E,SAASilB,eAAe,W","file":"static/js/main.f5887b37.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 189;","/*eslint-disable*/\nimport React from \"react\";\nimport { Flex, Link, List, ListItem, Text } from \"@chakra-ui/react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Footer(props) {\n  // const linkTeal = useColorModeValue(\"teal.400\", \"red.200\");=\n  return (\n    <Flex\n      flexDirection={{\n        base: \"column\",\n        xl: \"row\",\n      }}\n      alignItems={{\n        base: \"center\",\n        xl: \"start\",\n      }}\n      justifyContent=\"space-between\"\n      px=\"30px\"\n      pb=\"20px\"\n    >\n      <Text\n        color=\"gray.400\"\n        textAlign={{\n          base: \"center\",\n          xl: \"start\",\n        }}\n        mb={{ base: \"20px\", xl: \"0px\" }}\n      >\n        &copy; {1900 + new Date().getYear()},{\" \"}\n        <Text as=\"span\">\n          {document.documentElement.dir === \"rtl\"\n            ? \" مصنوع من ❤️ بواسطة\"\n            : \"Made with ❤️ by \"}\n        </Text>\n        <Link\n          // color={linkTeal}\n          color=\"#1daa3f\"\n          href=\"https://www.creative-tim.com\"\n          target=\"_blank\"\n        >\n          {document.documentElement.dir === \"rtl\"\n            ? \" InterX\"\n            : \"InterX \"}\n        </Link>\n        {document.documentElement.dir === \"rtl\"\n          ? \"للحصول على ويب أفضل\"\n          : \" for a better web\"}\n      </Text>\n      <List display=\"flex\">\n        <ListItem\n          me={{\n            base: \"20px\",\n            md: \"44px\",\n          }}\n        >\n          <Link color=\"gray.400\" href=\"https://www.creative-tim.com\">\n            {document.documentElement.dir === \"rtl\"\n              ? \"InterX\"\n              : \"InterX\"}\n          </Link>\n        </ListItem>\n      </List>\n    </Flex>\n  );\n}\n","import { createIcon } from \"@chakra-ui/icons\";\n\nexport const AdobexdLogo = createIcon({\n  displayName: \"AdobexdLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g clip-path=\"url(#clip0)\">\n      <path\n        d=\"M4.042 0h12.916A3.539 3.539 0 0120.5 3.542v12.416a3.539 3.539 0 01-3.542 3.542H4.042A3.539 3.539 0 01.5 15.958V3.542A3.539 3.539 0 014.042 0z\"\n        fill=\"#470137\"\n      />\n      <path\n        d=\"M11.017 5.124l-2.5 4.125 2.666 4.375a.143.143 0 01.017.1c-.008.034-.042.009-.092.017H9.2c-.133 0-.225-.008-.283-.092-.175-.35-.359-.691-.534-1.041a33.608 33.608 0 00-.566-1.05c-.2-.359-.4-.717-.6-1.084H7.2c-.175.359-.367.717-.558 1.075-.192.359-.384.717-.567 1.067-.192.35-.383.708-.575 1.05-.033.083-.1.092-.192.092H3.475c-.033 0-.058.016-.058-.025a.116.116 0 01.016-.092l2.592-4.25L3.5 5.116c-.025-.033-.033-.067-.017-.083.017-.025.05-.034.084-.034h1.891c.042 0 .084.009.117.017a.236.236 0 01.083.075c.159.358.342.717.534 1.075.2.358.391.708.6 1.058.2.35.383.7.558 1.059h.017c.175-.367.358-.725.541-1.075.184-.35.375-.7.567-1.05.192-.35.375-.709.558-1.05.009-.034.025-.067.05-.084a.159.159 0 01.109-.016h1.758a.077.077 0 01.091.058c.009.008-.008.042-.024.058zM14.866 13.917a4.144 4.144 0 01-1.791-.375 2.906 2.906 0 01-1.259-1.134c-.308-.508-.458-1.141-.458-1.9a3.423 3.423 0 011.783-3.05c.584-.325 1.284-.483 2.109-.483.041 0 .1 0 .175.008.075.009.158.009.258.017V4.367c0-.059.025-.092.083-.092h1.692c.042-.008.075.025.083.058v7.95c0 .15.009.317.017.5.017.175.025.342.033.484 0 .058-.025.108-.083.133a6.365 6.365 0 01-1.358.4 7.35 7.35 0 01-1.284.117zm.817-1.667V8.583c-.075-.016-.15-.033-.225-.041-.092-.009-.183-.017-.275-.017-.325 0-.65.067-.942.217-.283.141-.525.35-.708.616-.183.267-.275.625-.275 1.059-.008.291.042.583.142.858.083.225.208.425.375.592.158.15.35.266.566.333.225.075.459.108.692.108.125 0 .242-.008.35-.016a.73.73 0 00.3-.042z\"\n        fill=\"#FF61F6\"\n      />\n    </g>\n  ),\n});\n\nexport const AtlassianLogo = createIcon({\n  displayName: \"AtlassianLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        d=\"M6.427 9.239a.57.57 0 00-.798-.108.591.591 0 00-.167.209l-4.9 9.803a.586.586 0 00.524.847h6.827a.562.562 0 00.523-.324c1.474-3.043.58-7.67-2.01-10.427z\"\n        fill=\"#2684FF\"\n      />\n      <path\n        d=\"M10.028.318a12.932 12.932 0 00-.755 12.765l3.292 6.583a.586.586 0 00.523.324h6.826a.583.583 0 00.586-.585c0-.091-.02-.18-.06-.262L11.024.315a.552.552 0 00-.997 0v.003z\"\n        fill=\"#2684FF\"\n      />\n    </g>\n  ),\n});\n\nexport const CartIcon = createIcon({\n  displayName: \"CartIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M7.984 19.937a1.406 1.406 0 100-2.812 1.406 1.406 0 000 2.812zM17.828 19.937a1.406 1.406 0 100-2.812 1.406 1.406 0 000 2.812zM20.324 5.558a1.051 1.051 0 00-.815-.386H6.134l-.27-1.528a.703.703 0 00-.692-.581H2.359a.703.703 0 000 1.406h2.223L6.59 15.841a.703.703 0 00.692.581h11.25a.703.703 0 100-1.406H7.871l-.248-1.406h10.62a1.057 1.057 0 001.035-.848l1.266-6.328a1.055 1.055 0 00-.22-.876z\"\n    />\n  ),\n});\n\nexport const ClockIcon = createIcon({\n  displayName: \"ClockIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <g>\n        <rect fill=\"none\" height=\"24\" width=\"24\" />\n      </g>\n      <g>\n        <g>\n          <g>\n            <path\n              fill=\"currentColor\"\n              d=\"M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10s10-4.5,10-10S17.5,2,12,2z M16.2,16.2L11,13V7h1.5v5.2l4.5,2.7L16.2,16.2z\"\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  ),\n});\nexport const CreativeTimLogo = createIcon({\n  displayName: \"CreativeTimLogo\",\n  viewBox: \"0 0 100 100\",\n  path: (\n    <g\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"50px\"\n      height=\"50px\"\n      version=\"1.1\"\n    >\n      <g\n        id=\"logo-creative-tim-black\"\n        stroke=\"none\"\n        stroke-width=\"1\"\n        fill=\"none\"\n        fill-rule=\"evenodd\"\n      >\n        <g\n          id=\"icon\"\n          transform=\"translate(15.000000, 19.000000)\"\n          fill=\"currentColor\"\n          fill-rule=\"nonzero\"\n        >\n          <path\n            d=\"M66.4346744,1.49018376e-13 L3.56968951,1.49018376e-13 C1.59820443,1.49018376e-13 -2.98036753e-13,1.59820443 -2.98036753e-13,3.56968951 L-2.98036753e-13,33.5035241 C-2.98036753e-13,35.4750091 1.59820443,37.0732136 3.56968951,37.0732136 L16.4677598,37.0732136 L16.4677598,66.4346744 C16.4666001,67.3810129 16.8417189,68.288989 17.5104719,68.9585615 C18.1792249,69.628134 19.0867408,70.0043639 20.03308,70.0043639 L49.9669146,70.0043639 C51.9383997,70.0043639 53.5366041,68.4061595 53.5366041,66.4346744 L53.5366041,37.0863214 L66.4346744,37.0863214 C67.3810136,37.0863221 68.2885296,36.7100915 68.9572826,36.0405189 C69.6260355,35.3709464 70.0011544,34.4629704 70,33.5166319 L70,3.56968951 C70.0011544,2.62335099 69.6260355,1.71537495 68.9572826,1.04580242 C68.2885296,0.37622988 67.3810136,1.49018376e-13 66.4346744,1.49018376e-13 Z M4.13769396,4.14206323 L32.9311503,4.14206323 L32.9311503,32.9355196 L4.13769396,32.9355196 L4.13769396,4.14206323 Z M49.3989102,65.86667 L20.6054538,65.86667 L20.6054538,37.0863214 L49.3989102,37.0863214 L49.3989102,65.86667 Z M65.8623007,32.9355196 L37.0688443,32.9355196 L37.0688443,4.14206323 L65.8623007,4.14206323 L65.8623007,32.9355196 Z\"\n            id=\"Shape\"\n          />\n          <path\n            d=\"M23.6988934,23.3056595 C24.5142794,24.0708897 25.7898859,24.0506562 26.5805917,23.2599503 C27.3712976,22.4692445 27.3915311,21.193638 26.6263009,20.378252 L20.015603,13.767554 C19.2050095,12.9645312 17.8987889,12.9645312 17.0881954,13.767554 L10.4600204,20.378252 C9.90907005,20.8953125 9.68342943,21.6713831 9.87125954,22.4032422 C10.0590897,23.1351013 10.6305787,23.7065903 11.3624377,23.8944204 C12.0942968,24.0822505 12.8703675,23.8566099 13.387428,23.3056595 L18.5344222,18.1586654 L23.6988934,23.3056595 Z\"\n            id=\"Path\"\n          />\n          <path\n            d=\"M46.3185783,23.3056595 L51.4655725,18.1586654 L56.6125667,23.3056595 C57.4279526,24.0708897 58.7035592,24.0506562 59.494265,23.2599503 C60.2849709,22.4692445 60.3052044,21.193638 59.5399742,20.378252 L52.9292763,13.767554 C52.1186828,12.9645312 50.8124622,12.9645312 50.0018687,13.767554 L43.3911708,20.378252 C42.6259406,21.193638 42.6461741,22.4692445 43.43688,23.2599503 C44.2275858,24.0506562 45.5031924,24.0708897 46.3185783,23.3056595 L46.3185783,23.3056595 Z\"\n            id=\"Path\"\n          />\n          <path\n            d=\"M29.8508185,46.6987044 C29.0342976,45.9346441 27.7586832,45.9567597 26.9691385,46.7486649 C26.1795937,47.54057 26.1612859,48.8162446 26.9277802,49.6304812 L33.5384782,56.2368099 C33.9262423,56.6258256 34.452915,56.8444779 35.002182,56.8444779 C35.5514489,56.8444779 36.0781217,56.6258256 36.4658857,56.2368099 L43.0765837,49.6304812 C43.6002952,49.1075502 43.8052442,48.3449453 43.6142284,47.6299323 C43.4232126,46.9149194 42.8652519,46.3561259 42.1505246,46.1640439 C41.4357974,45.971962 40.6728876,46.1757734 40.1491761,46.6987044 L35.002182,51.8500678 L29.8508185,46.6987044 Z\"\n            id=\"Path\"\n          />\n        </g>\n      </g>\n    </g>\n  ),\n\n  //   <chakra.svg\n  //   height=\"50px\"\n  //   width=\"50px\"\n  //   viewBox=\"0 0 100 100\"\n  //   fill=\"none\"\n  //   xmlns=\"http://www.w3.org/2000/svg\"\n  //   color={fill}\n  //   {...props}\n  // >\n  // </chakra.svg>\n});\n\nexport const CreditIcon = createIcon({\n  displayName: \"CreditIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M1.406 17.023a2.461 2.461 0 002.461 2.46h14.766a2.461 2.461 0 002.46-2.46v-6.768H1.407v6.768zm2.9-3.34a1.318 1.318 0 011.319-1.318h2.11a1.318 1.318 0 011.318 1.318v.879a1.318 1.318 0 01-1.319 1.318H5.625a1.318 1.318 0 01-1.318-1.318v-.879zM18.633 4.014H3.867a2.46 2.46 0 00-2.46 2.461v1.143h19.687V6.475a2.46 2.46 0 00-2.461-2.46z\"\n    />\n  ),\n});\n\nexport const DashboardLogo = createIcon({\n  displayName: \"DashboardLogo\",\n  viewBox: \"0 0 1000 257\",\n  path: (\n    <g width=\"998\" height=\"257\" viewBox=\"0 0 998 257\" fill=\"none\">\n      <g clip-path=\"url(#clip0)\">\n        <path\n          d=\"M388.5 115.302C406.112 115.302 413.966 126.726 416.584 136.96L441.336 127.916C436.576 109.352 419.44 89.836 388.262 89.836C354.942 89.836 329 115.54 329 151.24C329 186.464 354.942 212.882 388.976 212.882C419.44 212.882 436.814 193.128 442.288 175.04L418.012 166.234C415.394 175.04 407.064 187.654 388.976 187.654C371.602 187.654 356.608 174.564 356.608 151.24C356.608 127.916 371.602 115.302 388.5 115.302Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M484.894 141.244C485.37 126.488 493.7 115.064 508.932 115.064C526.306 115.064 532.732 126.488 532.732 140.768V209.312H560.34V136.008C560.34 110.542 546.536 90.074 517.976 90.074C505.838 90.074 492.748 94.358 484.894 104.592V37H457.286V209.312H484.894V141.244Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M577.29 177.896C577.29 196.222 592.284 212.882 616.56 212.882C635.362 212.882 646.786 203.362 652.26 194.556C652.26 203.838 653.212 208.598 653.45 209.312H679.154C678.916 208.122 677.726 201.22 677.726 190.748V133.152C677.726 110.066 664.16 89.836 628.46 89.836C599.9 89.836 581.812 107.686 579.67 127.678L604.898 133.39C606.088 121.728 614.18 112.446 628.698 112.446C643.93 112.446 650.594 120.3 650.594 130.058C650.594 134.104 648.69 137.436 642.026 138.388L612.276 142.91C592.522 145.766 577.29 157.19 577.29 177.896ZM621.796 191.224C610.848 191.224 604.898 184.084 604.898 176.23C604.898 166.71 611.8 161.95 620.368 160.522L650.594 156V161.236C650.594 183.846 637.266 191.224 621.796 191.224Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M810.108 93.406H773.456L728.95 140.292V37H701.58V209.312H728.95V176.944L743.23 161.95L777.264 209.312H811.06L762.508 142.434L810.108 93.406Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M889.349 92.692C888.159 92.454 885.303 91.978 881.971 91.978C866.739 91.978 853.887 99.356 848.413 111.97V93.406H821.519V209.312H849.127V154.096C849.127 132.438 858.885 120.062 880.305 120.062C883.161 120.062 886.255 120.3 889.349 120.776V92.692Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M895.968 177.896C895.968 196.222 910.962 212.882 935.238 212.882C954.04 212.882 965.464 203.362 970.938 194.556C970.938 203.838 971.89 208.598 972.128 209.312H997.832C997.594 208.122 996.404 201.22 996.404 190.748V133.152C996.404 110.066 982.838 89.836 947.138 89.836C918.578 89.836 900.49 107.686 898.348 127.678L923.576 133.39C924.766 121.728 932.858 112.446 947.376 112.446C962.608 112.446 969.272 120.3 969.272 130.058C969.272 134.104 967.368 137.436 960.704 138.388L930.954 142.91C911.2 145.766 895.968 157.19 895.968 177.896ZM940.474 191.224C929.526 191.224 923.576 184.084 923.576 176.23C923.576 166.71 930.478 161.95 939.046 160.522L969.272 156V161.236C969.272 183.846 955.944 191.224 940.474 191.224Z\"\n          fill=\"currentColor\"\n        />\n        <rect width=\"257\" height=\"257\" rx=\"128.5\" fill=\"#4FD1C5\" />\n        <path\n          d=\"M69.5584 133.985L157.15 46.9959C158.787 45.3708 161.42 47.3484 160.315 49.3729L127.714 109.125C126.987 110.457 127.951 112.083 129.47 112.083H185.809C187.624 112.083 188.501 114.306 187.174 115.545L88.4456 207.687C86.6753 209.339 84.0405 207.011 85.4617 205.051L132.197 140.578C133.156 139.256 132.211 137.404 130.578 137.404H70.9677C69.1826 137.404 68.2917 135.243 69.5584 133.985Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <linearGradient\n          id=\"paint0_linear\"\n          x1=\"128.5\"\n          y1=\"0\"\n          x2=\"128.5\"\n          y2=\"257\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stop-color=\"#7BCBD4\" />\n          <stop offset=\"1\" stop-color=\"#29C6B7\" />\n        </linearGradient>\n        <clipPath id=\"clip0\">\n          <rect width=\"997.832\" height=\"257\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </g>\n  ),\n});\n\nexport const DashboardLogoWhite = createIcon({\n  displayName: \"DashboardLogo\",\n  viewBox: \"0 0 163.5 42\",\n  path: (\n    <g fill=\"none\">\n      <path\n        d=\"M63.452 19.292c2.877 0 4.16 1.911 4.587 3.623l4.043-1.513c-.777-3.106-3.576-6.371-8.668-6.371-5.443 0-9.68 4.3-9.68 10.274 0 5.893 4.237 10.313 9.796 10.313 4.976 0 7.813-3.305 8.707-6.331l-3.965-1.473c-.427 1.473-1.788 3.583-4.742 3.583-2.837 0-5.286-2.19-5.286-6.092 0-3.903 2.449-6.013 5.208-6.013zM79.196 23.632c.078-2.469 1.438-4.38 3.926-4.38 2.838 0 3.887 1.911 3.887 4.3v11.47h4.51V22.755c0-4.26-2.255-7.685-6.92-7.685-1.982 0-4.12.716-5.403 2.429V6.19h-4.509v28.831h4.51V23.632zM94.287 29.765c0 3.066 2.449 5.853 6.414 5.853 3.071 0 4.936-1.592 5.83-3.066 0 1.553.156 2.35.195 2.47h4.198c-.039-.2-.233-1.355-.233-3.107v-9.637c0-3.862-2.216-7.247-8.047-7.247-4.664 0-7.619 2.986-7.968 6.332l4.12.955c.194-1.951 1.516-3.504 3.887-3.504 2.488 0 3.576 1.314 3.576 2.947 0 .677-.311 1.234-1.399 1.393l-4.859.757c-3.226.478-5.714 2.39-5.714 5.854zm7.269 2.23c-1.788 0-2.76-1.195-2.76-2.509 0-1.593 1.127-2.39 2.527-2.628l4.936-.757v.876c0 3.783-2.176 5.018-4.703 5.018zM132.312 15.628h-5.986l-7.269 7.845V6.191h-4.47v28.83h4.47v-5.416l2.332-2.508 5.559 7.924h5.52l-7.93-11.19 7.774-8.203zM145.254 15.509a6.3 6.3 0 00-1.205-.12c-2.487 0-4.587 1.235-5.481 3.345v-3.106h-4.392v19.393h4.509v-9.238c0-3.624 1.594-5.695 5.092-5.695.467 0 .972.04 1.477.12v-4.7zM146.335 29.765c0 3.066 2.449 5.853 6.414 5.853 3.071 0 4.937-1.592 5.831-3.066 0 1.553.156 2.35.194 2.47h4.199c-.039-.2-.234-1.355-.234-3.107v-9.637c0-3.862-2.215-7.247-8.046-7.247-4.665 0-7.619 2.986-7.969 6.332l4.121.955c.194-1.951 1.516-3.504 3.887-3.504 2.488 0 3.576 1.314 3.576 2.947 0 .677-.311 1.234-1.399 1.393l-4.859.757c-3.227.478-5.715 2.39-5.715 5.854zm7.269 2.23c-1.788 0-2.759-1.195-2.759-2.509 0-1.593 1.127-2.39 2.526-2.628l4.937-.757v.876c0 3.783-2.177 5.018-4.704 5.018zM41.975 21.5C41.975 9.626 32.578 0 20.987 0 9.398 0 0 9.626 0 21.5S9.396 43 20.988 43c11.59 0 20.987-9.626 20.987-21.5z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M11.36 22.418L25.668 7.863c.267-.272.697.06.517.398l-5.325 9.997c-.119.223.039.495.287.495h9.202c.296 0 .44.372.223.58L14.446 34.748c-.29.277-.72-.113-.488-.44l7.633-10.788c.157-.221.003-.531-.264-.531H11.59c-.292 0-.437-.362-.23-.572z\"\n        fill=\"#3BCBBE\"\n      />\n    </g>\n  ),\n});\n\nexport const DocumentIcon = createIcon({\n  displayName: \"DocumentIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        fill=\"currentColor\"\n        d=\"M18.809 10.344h-6.153a2.11 2.11 0 01-2.11-2.11V2.083a.176.176 0 00-.175-.176H6.328A2.812 2.812 0 003.516 4.72v14.063a2.812 2.812 0 002.812 2.812h9.844a2.812 2.812 0 002.812-2.813V10.52a.176.176 0 00-.175-.176z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M18.423 8.789l-6.32-6.32a.088.088 0 00-.15.062v5.705a.703.703 0 00.703.703h5.705a.088.088 0 00.062-.15z\"\n      />\n    </g>\n  ),\n});\n\nexport const GlobeIcon = createIcon({\n  displayName: \"GlobeIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        stroke=\"currentColor\"\n        fill=\"transparent\"\n        d=\"M11.25 2.109a9.14 9.14 0 100 18.281 9.14 9.14 0 000-18.281z\"\n        stroke-width=\".75\"\n        stroke-miterlimit=\"10\"\n      />\n      <path\n        stroke=\"currentColor\"\n        fill=\"transparent\"\n        d=\"M11.25 2.109C8.698 2.109 6.3 6.2 6.3 11.249c0 5.048 2.4 9.14 4.951 9.14 2.552 0 4.951-4.092 4.951-9.14 0-5.048-2.399-9.14-4.95-9.14z\"\n        stroke-width=\".75\"\n        stroke-miterlimit=\"10\"\n      />\n      <path\n        stroke=\"currentColor\"\n        fill=\"transparent\"\n        d=\"M5.156 5.156C6.836 6.349 8.952 7.06 11.25 7.06c2.298 0 4.414-.711 6.094-1.904\"\n      />\n      <path\n        stroke=\"currentColor\"\n        fill=\"transparent\"\n        d=\"M5.156 5.156C6.836 6.349 8.952 7.06 11.25 7.06c2.298 0 4.414-.711 6.094-1.904M17.344 17.344c-1.68-1.193-3.796-1.904-6.094-1.904-2.298 0-4.413.711-6.094 1.904\"\n        stroke-width=\".75\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        stroke=\"currentColor\"\n        fill=\"transparent\"\n        d=\"M11.25 2.109v18.28M20.39 11.249H2.11\"\n        stroke-width=\".75\"\n        stroke-miterlimit=\"10\"\n      />\n    </g>\n  ),\n});\n\nexport const HelpIcon = createIcon({\n  displayName: \"HelpIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M11.25 0C5.04 0 0 5.04 0 11.25S5.04 22.5 11.25 22.5 22.5 17.46 22.5 11.25 17.46 0 11.25 0zm-.352 17.813a1.172 1.172 0 110-2.344 1.172 1.172 0 010 2.344zm1.96-5.977c-.95.637-1.08 1.222-1.08 1.758a.82.82 0 11-1.641 0c0-1.284.59-2.305 1.806-3.121 1.13-.758 1.768-1.239 1.768-2.295 0-.718-.41-1.264-1.26-1.668-.199-.095-.644-.187-1.191-.18-.687.008-1.22.172-1.63.503-.775.623-.84 1.302-.84 1.312a.821.821 0 11-1.642-.08c.007-.142.106-1.425 1.452-2.507.698-.562 1.585-.854 2.636-.866.745-.01 1.444.117 1.918.34 1.418.672 2.198 1.79 2.198 3.146 0 1.982-1.325 2.872-2.494 3.658z\"\n    />\n  ),\n});\n\nexport const HomeIcon = createIcon({\n  displayName: \"HomeIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        fill=\"currentColor\"\n        d=\"M11.494 4.951a.351.351 0 00-.486 0l-8.09 7.729a.352.352 0 00-.109.254v7.254a1.406 1.406 0 001.405 1.406h4.223a.703.703 0 00.704-.703v-5.976a.351.351 0 01.351-.352h3.516a.351.351 0 01.351.352v5.976a.703.703 0 00.704.703h4.22a1.407 1.407 0 001.407-1.406v-7.254a.35.35 0 00-.108-.254L11.494 4.95z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M21.574 11.23l-3.287-3.144V3.314a.703.703 0 00-.703-.703h-2.11a.703.703 0 00-.703.703V4.72l-2.545-2.434c-.239-.24-.593-.378-.976-.378-.38 0-.734.138-.972.379L.93 11.23a.717.717 0 00-.058.983.703.703 0 001.018.046l9.119-8.713a.352.352 0 01.486 0l9.12 8.713a.703.703 0 00.992-.019c.27-.28.248-.74-.033-1.01z\"\n      />\n    </g>\n  ),\n});\n\nexport const InvisionLogo = createIcon({\n  displayName: \"InvisionLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g clip-path=\"url(#clip0)\">\n      <path\n        d=\"M18.687 0H2.313A1.813 1.813 0 00.5 1.811v16.374C.5 19.188 1.312 20 2.313 20h16.374a1.813 1.813 0 001.813-1.813V1.812A1.813 1.813 0 0018.687 0z\"\n        fill=\"#DC395F\"\n      />\n      <path\n        d=\"M7.184 6.293c.665 0 1.222-.522 1.222-1.204 0-.683-.557-1.204-1.222-1.204-.665 0-1.222.521-1.222 1.204 0 .682.557 1.204 1.222 1.204zM4.65 12.739a4.134 4.134 0 00-.108.905c0 1.06.575 1.764 1.797 1.764 1.013 0 1.834-.602 2.426-1.573l-.361 1.449h2.012l1.15-4.612c.287-1.168.844-1.774 1.689-1.774.665 0 1.078.413 1.078 1.096 0 .197-.018.413-.09.646l-.593 2.12c-.09.306-.126.611-.126.899 0 1.006.593 1.742 1.833 1.742 1.06 0 1.904-.682 2.371-2.317l-.79-.305c-.395 1.095-.737 1.293-1.006 1.293-.27 0-.414-.18-.414-.538 0-.162.037-.342.09-.558l.575-2.065c.144-.485.198-.915.198-1.31 0-1.546-.934-2.352-2.066-2.352-1.06 0-2.138.956-2.677 1.962l.395-1.806H8.962L8.53 8.996h1.438l-.885 3.544c-.695 1.545-1.972 1.57-2.132 1.534-.264-.06-.432-.159-.432-.5 0-.198.036-.482.126-.823l1.348-5.346H4.579l-.431 1.591h1.419L4.65 12.74\"\n        fill=\"#fff\"\n      />\n    </g>\n  ),\n});\n\nexport const JiraLogo = createIcon({\n  displayName: \"JiraLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g clip-path=\"url(#clip0)\">\n      <path\n        d=\"M20.26 10.42l-8.863-8.93-.86-.865-6.67 6.722L.814 10.42a.827.827 0 000 1.162l6.096 6.14 3.627 3.654 6.67-6.722.105-.104 2.947-2.964a.824.824 0 000-1.166zm-9.722 3.649L7.493 11l3.045-3.068L13.582 11l-3.044 3.068z\"\n        fill=\"#2684FF\"\n      />\n      <path\n        d=\"M10.537 7.932a5.184 5.184 0 01-1.502-3.637A5.185 5.185 0 0110.515.65L3.852 7.36l3.626 3.654 3.06-3.082z\"\n        fill=\"url(#paint0_linear)\"\n      />\n      <path\n        d=\"M13.59 10.992l-3.053 3.076a5.186 5.186 0 011.502 3.653c0 1.37-.54 2.683-1.502 3.652l6.682-6.728-3.63-3.653z\"\n        fill=\"url(#paint1_linear)\"\n      />\n    </g>\n  ),\n});\n\nexport const MastercardIcon = createIcon({\n  displayName: \"MastercardIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <svg\n      width=\"24\"\n      height=\"20\"\n      viewBox=\"0 0 21 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle cx=\"6.63158\" cy=\"7.49999\" r=\"6.63158\" fill=\"#EB001B\" />\n      <circle cx=\"14.3686\" cy=\"7.49999\" r=\"6.63158\" fill=\"#F79E1B\" />\n    </svg>\n  ),\n});\n\nexport const PayPalIcon = createIcon({\n  displayName: \"PayPalIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        fill=\"currentColor\"\n        d=\"M16.179 2.532C15.142 1.357 13.265.854 10.863.854H3.895a.997.997 0 00-.986.834L.007 19.945a.595.595 0 00.591.686H4.9l1.08-6.8-.033.215a.993.993 0 01.983-.834h2.044c4.017 0 7.16-1.619 8.08-6.3.027-.14.07-.406.07-.406.262-1.732-.001-2.907-.945-3.974z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M18.213 7.393c-.998 4.61-4.184 7.048-9.24 7.048H7.142L5.773 23.1h2.973a.87.87 0 00.862-.731l.035-.184.684-4.297.044-.237a.87.87 0 01.86-.731h.544c3.514 0 6.264-1.416 7.068-5.51.322-1.644.166-3.021-.63-4.017z\"\n      />\n    </g>\n  ),\n});\n\nexport const PersonIcon = createIcon({\n  displayName: \"PersonIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M14.618 3.338c-.855-.924-2.05-1.432-3.368-1.432-1.325 0-2.524.505-3.375 1.423-.86.928-1.28 2.188-1.181 3.55.195 2.686 2.239 4.87 4.556 4.87s4.358-2.184 4.556-4.87c.1-1.349-.322-2.607-1.188-3.541zM18.984 21.592H3.515a1.363 1.363 0 01-1.063-.489 1.552 1.552 0 01-.316-1.279c.371-2.058 1.529-3.786 3.348-5 1.616-1.076 3.664-1.67 5.766-1.67s4.15.594 5.765 1.67c1.82 1.214 2.977 2.942 3.348 5 .085.471-.03.937-.315 1.279a1.362 1.362 0 01-1.064.49z\"\n    />\n  ),\n});\n\nexport const ProfileIcon = createIcon({\n  displayName: \"ProfileIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path d=\"M0 0h24v24H0V0z\" fill=\"transparent\" />\n      <path\n        fill=\"currentColor\"\n        d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-1c0-2.66-5.33-4-8-4z\"\n      />\n    </g>\n  ),\n});\n\nexport const RocketIcon = createIcon({\n  displayName: \"RocketIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        fill=\"currentColor\"\n        d=\"M20.99 2.182a.209.209 0 00-.156-.16c-2.574-.63-8.521 1.613-11.743 4.833a13.93 13.93 0 00-1.566 1.85c-.994-.087-1.987-.014-2.834.355-2.39 1.052-3.085 3.796-3.279 4.976a.424.424 0 00.464.492l3.837-.423c.002.29.02.578.052.866.02.2.108.386.25.527l1.486 1.482a.86.86 0 00.528.25c.286.033.573.05.86.053l-.42 3.832a.424.424 0 00.492.464c1.178-.19 3.927-.885 4.972-3.274.37-.847.445-1.836.36-2.824a13.96 13.96 0 001.855-1.567c3.232-3.216 5.462-9.03 4.842-11.732zm-8.067 7.896a2.11 2.11 0 112.983-2.984 2.11 2.11 0 01-2.983 2.984z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M7.4 18.054c-.24.241-.627.335-1.092.416-1.044.178-1.967-.725-1.779-1.78.072-.401.283-.962.415-1.094a.192.192 0 00-.16-.328 2.636 2.636 0 00-1.544.753c-1.033 1.034-1.13 4.87-1.13 4.87s3.838-.097 4.872-1.13c.417-.417.682-.961.752-1.546.017-.184-.207-.293-.334-.16z\"\n      />\n    </g>\n  ),\n});\n\nexport const SettingsIcon = createIcon({\n  displayName: \"SettingsIcon\",\n  viewBox: \"0 0 24 24\",\n  // path can also be an array of elements, if you have multiple paths, lines, shapes, etc.\n  path: (\n    <g>\n      <path d=\"M0,0h24v24H0V0z\" fill=\"none\" />\n      <path\n        fill=\"currentColor\"\n        d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"\n      />\n    </g>\n  ),\n});\n\nexport const SlackLogo = createIcon({\n  displayName: \"SlackLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g clip-path=\"url(#clip0)\" fill-rule=\"evenodd\" clip-rule=\"evenodd\">\n      <path\n        d=\"M7.832.5c-1.105 0-2 .919-1.999 2.05 0 1.13.895 2.048 2 2.05h2V2.55c.001-1.13-.894-2.048-2-2.05zm0 5.467H2.5c-1.106 0-2.001.918-2 2.05-.002 1.13.894 2.048 2 2.05h5.332c1.106-.001 2.002-.919 2-2.05.002-1.132-.894-2.05-2-2.05z\"\n        fill=\"#36C5F0\"\n      />\n      <path\n        d=\"M20.5 8.016c0-1.13-.895-2.048-2-2.05-1.106.002-2.002.92-2 2.05v2.05h2c1.105 0 2-.918 2-2.05zm-5.334 0V2.55c.001-1.13-.893-2.048-2-2.05-1.105 0-2 .919-2 2.05v5.466c-.001 1.131.894 2.049 2 2.05 1.106 0 2.001-.918 2-2.05z\"\n        fill=\"#2EB67D\"\n      />\n      <path\n        d=\"M13.166 21c1.106 0 2.001-.919 2-2.05.001-1.13-.894-2.048-2-2.05h-2v2.05c-.001 1.13.894 2.048 2 2.05zm0-5.467h5.333c1.106-.001 2.002-.92 2-2.05.002-1.131-.893-2.049-1.999-2.05h-5.333c-1.106 0-2.001.918-2 2.05-.001 1.13.893 2.049 1.999 2.05z\"\n        fill=\"#ECB22E\"\n      />\n      <path\n        d=\"M.5 13.483c-.001 1.13.895 2.049 2 2.05 1.106-.001 2.001-.92 2-2.05v-2.05h-2c-1.105.001-2.001.919-2 2.05zm5.333 0v5.467c-.001 1.13.894 2.048 2 2.05 1.105 0 2-.919 2-2.05v-5.465c.002-1.131-.894-2.05-2-2.05-1.106 0-2 .917-2 2.048z\"\n        fill=\"#E01E5A\"\n      />\n    </g>\n  ),\n});\n\nexport const SpotifyLogo = createIcon({\n  displayName: \"SpotifyLogo\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g clip-path=\"url(#clip0)\">\n      <path\n        d=\"M10.5 0C4.977 0 .5 4.477.5 10s4.477 10 10 10 10-4.477 10-10c0-5.522-4.477-10-10-10zm4.586 14.422a.623.623 0 01-.857.208c-2.348-1.435-5.304-1.76-8.785-.964a.623.623 0 11-.277-1.216c3.808-.87 7.076-.495 9.712 1.115.294.181.387.564.207.857zm1.223-2.722a.78.78 0 01-1.072.257c-2.687-1.652-6.786-2.13-9.965-1.166a.78.78 0 01-.973-.519.781.781 0 01.52-.972c3.632-1.102 8.147-.569 11.233 1.329a.78.78 0 01.258 1.072zm.106-2.835C13.19 6.95 7.875 6.775 4.797 7.708a.935.935 0 11-.543-1.79c3.533-1.072 9.404-.865 13.115 1.338a.935.935 0 01-.954 1.609z\"\n        fill=\"#2EBD59\"\n      />\n    </g>\n  ),\n});\n\nexport const SupportIcon = createIcon({\n  // Doesn't display the full icon without w and h being specified\n  displayName: \"BuildIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M20.885 5.547a.703.703 0 00-1.122-.176l-2.7 2.702a.708.708 0 01-.995 0l-1.167-1.169a.702.702 0 010-.994l2.689-2.69a.704.704 0 00-.21-1.138c-2.031-.908-4.566-.435-6.164 1.152-1.358 1.348-1.763 3.455-1.11 5.78a.698.698 0 01-.197.703L2.593 16.4a2.82 2.82 0 103.981 3.983l6.754-7.332a.699.699 0 01.693-.2 7.885 7.885 0 002.03.279c1.469 0 2.757-.475 3.686-1.39 1.72-1.695 1.983-4.57 1.148-6.192zM4.623 19.901a1.407 1.407 0 11-.305-2.797 1.407 1.407 0 01.305 2.797z\"\n    />\n  ),\n});\n\nexport const StatsIcon = createIcon({\n  displayName: \"StatsIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M4.57 22.297H3.164a1.055 1.055 0 01-1.055-1.054v-6.328a1.055 1.055 0 011.055-1.055H4.57a1.055 1.055 0 011.055 1.055v6.328a1.055 1.055 0 01-1.055 1.054zM14.414 22.296h-1.406a1.055 1.055 0 01-1.055-1.055V10.695a1.055 1.055 0 011.055-1.055h1.406a1.055 1.055 0 011.055 1.055V21.24a1.055 1.055 0 01-1.055 1.055zM19.336 22.297H17.93a1.055 1.055 0 01-1.055-1.055V5.773A1.055 1.055 0 0117.93 4.72h1.406a1.055 1.055 0 011.055 1.054v15.47a1.055 1.055 0 01-1.055 1.054zM9.492 22.297H8.086a1.055 1.055 0 01-1.055-1.055V2.257a1.055 1.055 0 011.055-1.054h1.406a1.055 1.055 0 011.055 1.054v18.985a1.055 1.055 0 01-1.055 1.055z\"\n    />\n  ),\n});\n\nexport const WalletIcon = createIcon({\n  displayName: \"WalletIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <g>\n      <path\n        fill=\"currentColor\"\n        d=\"M4.447 4.818h14.062c.164 0 .328.01.491.031a2.9 2.9 0 00-3.406-2.441L4.03 4.382h-.013a2.9 2.9 0 00-1.805 1.149 3.848 3.848 0 012.236-.713zM18.51 5.875H4.446a2.816 2.816 0 00-2.813 2.812v8.438a2.816 2.816 0 002.813 2.812h14.062a2.815 2.815 0 002.813-2.812V8.687a2.815 2.815 0 00-2.813-2.812zm-2.088 8.437a1.406 1.406 0 110-2.811 1.406 1.406 0 010 2.811z\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"M1.656 11.651V7.28c0-.952.528-2.549 2.358-2.895 1.553-.291 3.091-.291 3.091-.291s1.011.703.176.703-.813 1.077 0 1.077 0 1.032 0 1.032L4.007 10.62l-2.35 1.032z\"\n      />\n    </g>\n  ),\n});\n\nexport const VisaIcon = createIcon({\n  displayName: \"VisaIcon\",\n  viewBox: \"0 0 24 24\",\n  path: (\n    <svg\n      width=\"26\"\n      height=\"20\"\n      viewBox=\"0 0 30 9\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M12.6708 2.96349C12.6568 4.15055 13.653 4.81298 14.4034 5.20684C15.1744 5.61099 15.4333 5.87013 15.4304 6.23147C15.4245 6.78459 14.8153 7.02862 14.2452 7.03812C13.2505 7.05475 12.6723 6.74889 12.2125 6.51753L11.8542 8.32341C12.3155 8.55247 13.1696 8.75217 14.0554 8.76087C16.1345 8.76087 17.4947 7.65543 17.5021 5.94145C17.5102 3.76625 14.7087 3.64579 14.7278 2.67348C14.7344 2.37871 14.9956 2.06408 15.568 1.98406C15.8512 1.94368 16.6332 1.91274 17.5198 2.35252L17.8677 0.605286C17.391 0.418253 16.7782 0.239136 16.0153 0.239136C14.0583 0.239136 12.6819 1.35962 12.6708 2.96349ZM21.2115 0.389687C20.8319 0.389687 20.5118 0.628245 20.3691 0.99433L17.3991 8.63249H19.4767L19.8901 7.40183H22.429L22.6689 8.63249H24.5L22.9021 0.389687H21.2115ZM21.5021 2.61641L22.1016 5.7116H20.4596L21.5021 2.61641ZM10.1518 0.389687L8.51418 8.63249H10.4939L12.1308 0.389687H10.1518ZM7.22303 0.389687L5.16233 6.00003L4.32878 1.22966C4.23097 0.697187 3.84472 0.389687 3.41579 0.389687H0.0471011L0 0.629037C0.691574 0.790671 1.47729 1.0514 1.95326 1.33033C2.24457 1.50067 2.32775 1.64964 2.42336 2.05458L4.00214 8.63249H6.0945L9.3021 0.389687H7.22303Z\"\n        fill=\"#4318FF\"\n      />\n    </svg>\n  ),\n});\n","export default __webpack_public_path__ + \"static/media/logo.1a78e478.png\";","import React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\n\nexport default function IconBox(props) {\n  const { children, ...rest } = props;\n\n  return (\n    <Flex\n      alignItems={\"center\"}\n      justifyContent={\"center\"}\n      borderRadius={\"12px\"}\n      {...rest}\n    >\n      {children}\n    </Flex>\n  );\n}\n","import React from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\n\nexport function Separator(props) {\n  const { variant, children, ...rest } = props;\n  return (\n    <Flex\n      h=\"1px\"\n      w=\"100%\"\n      bg=\"linear-gradient(90deg, rgba(224, 225, 226, 0) 0%, #E0E1E2 49.52%, rgba(224, 225, 226, 0) 100%)\"\n      {...rest}\n    >\n      {children}\n    </Flex>\n  );\n}\n","/*eslint-disable*/\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\n// chakra imports\nimport {\n  Box,\n  Button,\n  Center,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerOverlay,\n  Flex,\n  Link,\n  Stack,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport logo from \"assets/img/logo.png\";\nimport IconBox from \"components/Icons/IconBox\";\nimport { CreativeTimLogo } from \"components/Icons/Icons\";\nimport { Separator } from \"components/Separator/Separator\";\nimport { SidebarHelp } from \"components/Sidebar/SidebarHelp\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\n\n// FUNCTIONS\n\nfunction Sidebar(props) {\n  // to check for active links and opened collapses\n  let location = useLocation();\n  // this is for the rest of the collapses\n  const [state, setState] = React.useState({});\n  const mainPanel = React.useRef();\n  let variantChange = \"0.2s linear\";\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  const createLinks = (routes) => {\n    const { sidebarVariant } = props;\n    // Chakra Color Mode\n    let activeBg = useColorModeValue(\"white\", \"gray.700\");\n    let inactiveBg = useColorModeValue(\"white\", \"gray.700\");\n    let activeColor = useColorModeValue(\"gray.700\", \"white\");\n    let inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n    let sidebarActiveShadow = \"0px 7px 11px rgba(0, 0, 0, 0.04)\";\n    // Here are all the props that may change depending on sidebar's state.(Opaque or transparent)\n    if (sidebarVariant === \"opaque\") {\n      activeBg = \"transparent\";\n      inactiveBg = useColorModeValue(\"gray.100\", \"gray.600\");\n      activeColor = useColorModeValue(\"gray.700\", \"white\");\n      inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n      sidebarActiveShadow = \"none\";\n    }\n   \n\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.category) {\n        var st = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return (\n          <>\n            <Text\n              color={activeColor}\n              fontWeight=\"bold\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx=\"auto\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n            >\n              {document.documentElement.dir === \"rtl\"\n                ? prop.rtlName\n                : prop.name}\n            </Text>\n            {createLinks(prop.views)}\n          </>\n        );\n      }\n      return (\n        <NavLink to={prop.layout + prop.path}>\n          {activeRoute(prop.layout + prop.path) === \"active\" ? (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              boxShadow={sidebarActiveShadow}\n              bg={activeBg}\n              transition={variantChange}\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"0px 7px 11px rgba(0, 0, 0, 0.04)\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg=\"#bec0c4\"\n                    color=\"white\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                    transition={variantChange}\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n                <Text color={activeColor} my=\"auto\" fontSize=\"sm\">\n                  {document.documentElement.dir === \"rtl\"\n                    ? prop.rtlName\n                    : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          ) : (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              bg=\"transparent\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              py=\"12px\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"none\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg={inactiveBg}\n                    color=\"teal.300\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                    transition={variantChange}\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\n                  {document.documentElement.dir === \"rtl\"\n                    ? prop.rtlName\n                    : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          )}\n        </NavLink>\n      );\n    });\n  };\n  const { logoText, routes, sidebarVariant } = props;\n\n  var links = <>{createLinks(routes)}</>;\n  //  BRAND\n  //  Chakra Color Mode\n  const mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  let sidebarBg = \"none\";\n  let sidebarRadius = \"0px\";\n  let sidebarMargins = \"0px\";\n  let name=\"\";\n  if (sidebarVariant === \"opaque\") {\n    sidebarBg = useColorModeValue(\"white\", \"gray.700\");\n    sidebarRadius = \"16px\";\n    sidebarMargins = \"16px 0px 16px 16px\";\n  }\n  if (sessionStorage.getItem(\"role\")==\"Admin\")\n  {\nname = sessionStorage.getItem(\"nomHospital\")\n  }else if(sessionStorage.getItem(\"role\")==\"user\")\n  {\n    name = sessionStorage.getItem(\"firstname\") + ' ' + sessionStorage.getItem(\"lastname\")\n  }else if(sessionStorage.getItem(\"role\")==\"SupAdmin\"){\n    name = \"Admin\"\n  }\n  else{\n    name = sessionStorage.getItem(\"firstname\") + ' ' + sessionStorage.getItem(\"lastname\")\n  }\n  var brand = (\n    <Box pt={\"25px\"} mb=\"12px\">\n      <Link\n        href={`/#/admin/reservations`}\n        target=\"_blank\"\n        display=\"flex\"\n        lineHeight=\"100%\"\n        mb=\"30px\"\n        fontWeight=\"bold\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        fontSize=\"11px\"\n      >\n        < IconBox  h=\"150px\"\n                    w=\"200px\"\n                  >   <img src={logo} height=\"10px\"  /></IconBox>\n      \n      </Link>\n      <Separator></Separator>\n      <Center>\n      <Stack spacing={3}>\n      <Text fontSize='xs'>Bienvenu , {name}  </Text>\n     </Stack>\n     </Center>\n     <Separator></Separator>\n    </Box>\n  );\n\n  // SIDEBAR\n  return (\n    <Box ref={mainPanel}>\n      <Box display={{ sm: \"none\", xl: \"block\" }} position=\"fixed\">\n        <Box\n          bg={sidebarBg}\n          transition={variantChange}\n          w=\"260px\"\n          maxW=\"260px\"\n          ms={{\n            sm: \"16px\",\n          }}\n          my={{\n            sm: \"16px\",\n          }}\n          h=\"calc(100vh - 32px)\"\n          ps=\"20px\"\n          pe=\"20px\"\n          m={sidebarMargins}\n          borderRadius={sidebarRadius}\n        >\n          <Box>{brand}</Box>\n          <Stack direction=\"column\" mb=\"40px\">\n            <Box>{links}</Box>\n          </Stack>\n        \n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\n// FUNCTIONS\n\nexport function SidebarResponsive(props) {\n  // to check for active links and opened collapses\n  let location = useLocation();\n  // this is for the rest of the collapses\n  const [state, setState] = React.useState({});\n  const mainPanel = React.useRef();\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  const createLinks = (routes) => {\n    // Chakra Color Mode\n    const activeBg = useColorModeValue(\"white\", \"gray.700\");\n    const inactiveBg = useColorModeValue(\"white\", \"gray.700\");\n    const activeColor = useColorModeValue(\"gray.700\", \"white\");\n    const inactiveColor = useColorModeValue(\"gray.400\", \"gray.400\");\n\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.category) {\n        var st = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return (\n          <>\n            <Text\n              color={activeColor}\n              fontWeight=\"bold\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx=\"auto\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n            >\n              {document.documentElement.dir === \"rtl\"\n                ? prop.rtlName\n                : prop.name}\n            </Text>\n            {createLinks(prop.views)}\n          </>\n        );\n      }\n      return (\n        <NavLink to={prop.layout + prop.path}>\n          {activeRoute(prop.layout + prop.path) === \"active\" ? (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              bg={activeBg}\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              py=\"12px\"\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"none\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg=\"teal.300\"\n                    color=\"white\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n                <Text color={activeColor} my=\"auto\" fontSize=\"sm\">\n                  {document.documentElement.dir === \"rtl\"\n                    ? prop.rtlName\n                    : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          ) : (\n            <Button\n              boxSize=\"initial\"\n              justifyContent=\"flex-start\"\n              alignItems=\"center\"\n              bg=\"transparent\"\n              mb={{\n                xl: \"12px\",\n              }}\n              mx={{\n                xl: \"auto\",\n              }}\n              py=\"12px\"\n              ps={{\n                sm: \"10px\",\n                xl: \"16px\",\n              }}\n              borderRadius=\"15px\"\n              _hover=\"none\"\n              w=\"100%\"\n              _active={{\n                bg: \"inherit\",\n                transform: \"none\",\n                borderColor: \"transparent\",\n              }}\n              _focus={{\n                boxShadow: \"none\",\n              }}\n            >\n              <Flex>\n                {typeof prop.icon === \"string\" ? (\n                  <Icon>{prop.icon}</Icon>\n                ) : (\n                  <IconBox\n                    bg={inactiveBg}\n                    color=\"teal.300\"\n                    h=\"30px\"\n                    w=\"30px\"\n                    me=\"12px\"\n                  >\n                    {prop.icon}\n                  </IconBox>\n                )}\n                <Text color={inactiveColor} my=\"auto\" fontSize=\"sm\">\n                  {document.documentElement.dir === \"rtl\"\n                    ? prop.rtlName\n                    : prop.name}\n                </Text>\n              </Flex>\n            </Button>\n          )}\n        </NavLink>\n      );\n    });\n  };\n  const { logoText, routes, ...rest } = props;\n\n  var links = <>{createLinks(routes)}</>;\n  //  BRAND\n  //  Chakra Color Mode\n  const mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  let hamburgerColor = useColorModeValue(\"gray.500\", \"gray.200\");\n  if (props.secondary === true) {\n    hamburgerColor = \"white\";\n  }\n  var brand = (\n    <Box pt={\"35px\"} mb=\"8px\">\n      <Link\n        href={`${process.env.PUBLIC_URL}/#/`}\n        target=\"_blank\"\n        display=\"flex\"\n        lineHeight=\"100%\"\n        mb=\"30px\"\n        fontWeight=\"bold\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        fontSize=\"11px\"\n      >\n        <CreativeTimLogo w=\"32px\" h=\"32px\" me=\"10px\" />\n        <Text fontSize=\"sm\" mt=\"3px\">\n          {logoText}\n        </Text>\n      </Link>\n      <Separator></Separator>\n    </Box>\n  );\n\n  // SIDEBAR\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n  // Color variables\n  return (\n    <Flex\n      display={{ sm: \"flex\", xl: \"none\" }}\n      ref={mainPanel}\n      alignItems=\"center\"\n    >\n      <HamburgerIcon\n        color={hamburgerColor}\n        w=\"18px\"\n        h=\"18px\"\n        ref={btnRef}\n        colorScheme=\"teal\"\n        onClick={onOpen}\n      />\n      <Drawer\n        isOpen={isOpen}\n        onClose={onClose}\n        placement={document.documentElement.dir === \"rtl\" ? \"right\" : \"left\"}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay />\n        <DrawerContent\n          w=\"250px\"\n          maxW=\"250px\"\n          ms={{\n            sm: \"16px\",\n          }}\n          my={{\n            sm: \"16px\",\n          }}\n          borderRadius=\"16px\"\n        >\n          <DrawerCloseButton\n            _focus={{ boxShadow: \"none\" }}\n            _hover={{ boxShadow: \"none\" }}\n          />\n          <DrawerBody maxW=\"250px\" px=\"1rem\">\n            <Box maxW=\"100%\" h=\"100vh\">\n              <Box>{brand}</Box>\n              <Stack direction=\"column\" mb=\"40px\">\n                <Box>{links}</Box>\n              </Stack>\n            </Box>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </Flex>\n  );\n}\n// PROPS\n\nSidebar.propTypes = {\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  variant: PropTypes.string,\n};\nSidebarResponsive.propTypes = {\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Sidebar;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction Card(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"Card\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default Card;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction CardHeader(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"CardHeader\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default CardHeader;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction CardBody(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"CardBody\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default CardBody;\n","import {\n  Avatar,\n  Badge,\n  Button,\n  Icon,\n  Flex,\n  Td,\n  Text,\n  InputGroup,\n  InputLeftElement,\n  Select,\n  Tr,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { FaPencilAlt, FaTrashAlt } from \"react-icons/fa\";\nimport {\n  AiOutlineFontColors,\n  AiFillPhone,\n  AiOutlineEnvironment,\n  AiOutlineMail,\n  AiTwotoneCalendar\n} from \"react-icons/ai\";\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n  ButtonGroup,\n} from '@chakra-ui/react'\n\nimport axios from 'axios';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input\n} from \"@chakra-ui/react\"\nclass TablesTableRow extends React.Component {\n  componentDidMount() {\n\n\n    const { firstname, lastname, email, birthday, phone, adresse, GroupeSanguine, situationF, id } = this.props;\n    this.setState({ firstname });\n    this.setState({ lastname });\n    this.setState({ email });\n    this.setState({ birthday });\n    this.setState({ phone });\n    this.setState({ adresse });\n    this.setState({ GroupeSanguine });\n    this.setState({ situationF });\n    this.setState({ id });\n  }\n\n  constructor(props) {\n\n\n    super(props);\n    this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      birthday: '',\n      phone: '',\n      adresse: '',\n      GroupeSanguine: '',\n      situationF: '',\n      password: '',\n      modalIsOpen: false,\n    }\n  }\n\n\n\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n\n  }\n\n\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const patient = {\n      _id: this.props.id,\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      email: this.state.email,\n      birthday: this.state.birthday,\n      phone: this.state.phone,\n      adresse: this.state.adresse,\n      GroupeSanguine: this.state.GroupeSanguine,\n      situationF: this.state.situationF,\n    }\n\n    axios.put(`https://interxpim.herokuapp.com/api/patient/update`, patient)\n      .then(res => {\n\n\n        window.location.reload(false);\n\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  openModal(id1) {\n    this.setState({\n      modalIsOpen: true,\n      id: id1\n    });\n\n  }\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n  render() {\n    const { firstname, lastname, email, birthday, phone, adresse, GroupeSanguine, situationF, id } = this.props;\n    return (\n      <>\n        <Tr>\n          <Td minWidth={{ sm: \"250px\" }} pl=\"0px\">\n            <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n\n              <Flex direction=\"column\">\n                <Text\n                  fontSize=\"md\"\n                  color={\"gray.700\"}\n                  fontWeight=\"bold\"\n                  minWidth=\"100%\"\n                >\n                  {firstname} {lastname}\n                </Text>\n                <Text fontSize=\"sm\" color=\"gray.400\" fontWeight=\"normal\">\n                  {email}\n                </Text>\n              </Flex>\n            </Flex>\n          </Td>\n\n          <Td>\n            <Flex direction=\"column\">\n              <Text fontSize=\"md\" color={\"gray.700\"} fontWeight=\"bold\">\n                {phone}\n              </Text>\n\n            </Flex>\n          </Td>\n          <Td>\n            <Text fontSize=\"md\" color={\"gray.700\"} fontWeight=\"bold\" pb=\".5rem\">\n              {birthday}\n            </Text>\n            <Text fontSize=\"sm\" color=\"gray.400\" fontWeight=\"normal\">\n              {adresse}\n            </Text>\n          </Td>\n\n          <Td>\n            <Text fontSize=\"md\" color={\"gray.700\"} fontWeight=\"bold\" pb=\".5rem\">\n              {GroupeSanguine}\n            </Text>\n          </Td>\n          <Td>\n            <Text fontSize=\"md\" color={\"gray.700\"} fontWeight=\"bold\" pb=\".5rem\">\n              {situationF}\n            </Text>\n          </Td>\n\n\n\n          <Td>\n            <Flex\n              direction={{ sm: \"column\", md: \"row\" }}\n              align=\"flex-start\"\n              p={{ md: \"24px\" }}\n            >\n\n\n\n              <Button onClick={() => { this.openModal(id) }} p=\"0px\" bg=\"transparent\">\n                <Flex color=\"gray.700\" cursor=\"pointer\" align=\"center\" p=\"12px\">\n                  <Icon as={FaPencilAlt} me=\"4px\" />\n                </Flex>\n              </Button>\n            </Flex>\n          </Td>\n        </Tr >\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onClose={() => { this.closeModal() }}>\n          <ModalOverlay />\n          <ModalContent>\n\n            <form onSubmit={this.handleSubmit}>\n              <ModalHeader>Modifier la réservation</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={8}>\n                <FormControl>\n                  <FormLabel>Prénom & Nom</FormLabel>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n\n\n\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiOutlineFontColors color='gray.300' />}\n                      />\n                      <Input defaultValue={firstname} onChange={(event) => this.handleChange(event, \"firstname\")} placeholder=\"Prénom\" />\n                    </InputGroup>\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiOutlineFontColors color='gray.300' />}\n                      />\n                      <Input defaultValue={lastname} onChange={(event) => this.handleChange(event, \"lastname\")} placeholder=\"Nom\" />\n                    </InputGroup>\n                  </Flex>\n                  <FormLabel>Phone</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiFillPhone color='gray.300' />}\n                    />\n                    <Input defaultValue={phone} onChange={(event) => this.handleChange(event, \"phone\")} placeholder=\"phone\" />\n                  </InputGroup>\n                  <FormLabel>adresse</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiOutlineEnvironment color='gray.300' />}\n                    />\n                    <Input defaultValue={adresse} onChange={(event) => this.handleChange(event, \"adresse\")} placeholder=\"adresse\" />\n                  </InputGroup>\n                  <FormLabel>email</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiOutlineMail color='gray.300' />}\n                    />\n                    <Input defaultValue={email} onChange={(event) => this.handleChange(event, \"email\")} placeholder=\"email\" />\n                  </InputGroup>\n                  <FormLabel>birthday</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiTwotoneCalendar color='gray.300' />}\n                    />\n                    <Input defaultValue={birthday} onChange={(event) => this.handleChange(event, \"birthday\")} placeholder=\"birthday\" />\n                  </InputGroup>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <FormLabel></FormLabel>\n\n                  </Flex>\n                  \n                   <FormLabel>Situation Familialle</FormLabel>\n\n\n                    <Select fontSize=\"sm\"\n                      ms=\"4px\"\n                      borderRadius=\"15px\"\n                      mb=\"4px\"\n                      size=\"lg\"\n                      onChange={(event) => this.handleChange(event, \"situationF\")}>\n                      <option value=\"célibataire\">Célibataire</option>\n                      <option value=\"veuve\">Veuve</option>\n                      <option value=\"mariée\">Mariée</option>\n                      <option value=\"dévorcée\">Dévorcée</option>\n                    </Select>\n                </FormControl>\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" bg=\"teal.300\"\n                color=\"white\" mr={4}>\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModal() }} >Annuler</Button>\n\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n\n      </>\n    );\n  }\n}\n\nexport default TablesTableRow;\n","import React, { useState } from \"react\";\nimport { BellIcon, SearchIcon, PhoneIcon, AtSignIcon, CalendarIcon } from \"@chakra-ui/icons\";\nimport axios from 'axios';\nimport { Checkbox, CheckboxGroup } from '@chakra-ui/react'\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Icon,\n  Button,\n\n  InputGroup,\n  Select,\n  IconButton,\n  InputLeftElement,\n} from \"@chakra-ui/react\";\nimport {\n  FaCube,\n  FaFacebook,\n  FaInstagram,\n  FaPenFancy,\n  FaPlus,\n\n\n  FaTwitter,\n} from \"react-icons/fa\";\nimport {\n  AiOutlineFontColors,\n  AiFillPhone,\n  AiOutlineEnvironment,\n  AiOutlineMail,\n  AiTwotoneCalendar\n} from \"react-icons/ai\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input\n} from \"@chakra-ui/react\"\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TablesTableRow from \"components/Tables/TablePatient\";\n\n\nclass Patients extends React.Component {\n\n\n  componentDidMount() {\n    axios.get(`https://interxpim.herokuapp.com/api/reservations/allReser`)\n      .then(res => {\n        const resdataR = res.data;\n        this.setState({ resdataR });\n      })\n     \n    axios.get(`https://interxpim.herokuapp.com/api/patient/all`)\n      .then(res => {\n\n        const resdataP = res.data;\n        this.setState({ resdataP });\n      })\n\n  }\n  constructor() {\n    super()\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      phone: '',\n      email: '',\n      birthday: '',\n      adresse: '',\n      situationF: '',\n      GroupeSanguine: '',\n      password: '',\n      search: '',\n      hospital: '',\n      sendsms: false,\n      sendemail: false,\n      modalIsOpen: false,\n      resdataR: [],\n      resdataP: [],\n      liste: [],\n      l: [],\n      la: [],\n    }\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n    if (field == \"sendemail\") {\n      this.state.sendemail = evt.target.checked\n      this.setState({sendemail:evt.target.checked})\n      console.log(this.state.email)\n     // let isChecked = e.target.checked;\n    }\n    if (field == \"sendsms\")\n    {\n      this.state.sendsms = evt.target.checked\n      this.setState({sendsms:evt.target.checked})\n      console.log(this.state.sendsms)\n    }\n\n  }\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const patient = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phone: this.state.phone,\n      email: this.state.email,\n      birthday: this.state.birthday,\n      adresse: this.state.adresse,\n      password: this.state.password,\n      situationF: this.state.situationF,\n      GroupeSanguine: this.state.GroupeSanguine,\n      sendemail :this.state.sendemail,\n      sendsms : this.state.sendsms,\n      //hospital: sessionStorage.getItem(\"id\")\n    }\n    const reservation = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phone: this.state.phone,\n      date: this.state.date,\n      heure: this.state.heure,\n      hospital: this.state.hospital,\n      user: this.state.user,\n    }\n    axios.post(\"https://interxpim.herokuapp.com/api/patient/registerWeb\", patient)\n      .then(res => {\n        //alert(user.firstname)\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  openModal() {\n    this.setState({\n      modalIsOpen: true,\n    });\n    //alert(this.state.search)\n\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n  render() {\n\n  \n\n    this.state.resdataR.forEach(elementr => {\n      this.state.resdataP.forEach(element => {\n        if (elementr.hospital == sessionStorage.getItem(\"id\") && element._id == elementr.user) {\n          this.state.l.push(element)\n          this.state.la = Array.from(new Set(this.state.l))\n          // console.log(Array.from(new Set(this.state.l)))\n\n\n        }else if (sessionStorage.getItem(\"hospital\")==elementr.hospital && element._id == elementr.user)\n        {\n          this.state.l.push(element)\n          this.state.la = Array.from(new Set(this.state.l))\n        }\n      })\n\n    })\n\n    if (sessionStorage.getItem(\"role\")==\"SupAdmin\")\n    {\n      this.state.resdataP.forEach(element => {\n          this.state.l.push(element)\n          this.state.la = Array.from(new Set(this.state.l))\n        })\n    }\n    return (\n      <>\n        <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Flex justify=\"space-between\" align=\"center\" mb=\"1rem\" w=\"100%\">\n                <Text fontSize=\"xl\" color={\"gray.700\"} fontWeight=\"bold\">\n                  Liste des patients\n                </Text>\n                <Button\n                  colorScheme=\"#1daa3f\"\n                  borderColor=\"#1daa3f\"\n                  color=\"#1daa3f\"\n                  variant=\"outline\"\n                  fontSize=\"xs\"\n                  p=\"8px 32px\"\n                  onClick={() => { this.openModal() }}\n                >\n                  <Icon as={FaPlus} me=\"6px\" />\n                  Ajouter un patient\n                </Button>\n              </Flex>\n            </CardHeader>\n\n            <CardBody>\n              <Table variant=\"simple\" color={\"gray.700\"}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th pl=\"0px\" color=\"gray.400\">\n                      Patient\n                    </Th>\n                    <Th color=\"gray.400\">Phone</Th>\n                    <Th color=\"gray.400\">Addresse</Th>\n\n                    <Th color=\"gray.400\">Groupe Sanguine</Th>\n                    <Th color=\"gray.400\">Situation Familialle</Th>\n                    <Th color=\"gray.400f\">Action</Th>\n\n                  </Tr>\n                </Thead>\n\n                <Tbody>\n\n                  {\n                    this.state.la.map((roww) => {\n\n\n\n                      return (\n                        <TablesTableRow\n                          id={roww._id}\n                          firstname={roww.firstname}\n                          lastname={roww.lastname}\n                          email={roww.email}\n                          birthday={roww.birthday}\n                          phone={roww.phone}\n                          adresse={roww.adresse}\n                          GroupeSanguine={roww.GroupeSanguine}\n                          situationF={roww.situationF}\n\n                        />\n                      )\n\n\n                    }\n                    )\n\n\n                  }\n\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n          <Card\n            my=\"22px\"\n            overflowX={{ sm: \"scroll\", xl: \"hidden\" }}\n          >\n\n\n          </Card>\n        </Flex>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onClose={() => { this.closeModal() }}\n\n        >\n          <ModalOverlay />\n          <ModalContent>\n\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <ModalHeader>Ajouter un patient</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={8}>\n                <FormControl>\n                  <FormLabel>Prénom & Nom</FormLabel>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n\n                  >\n\n\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiOutlineFontColors color='gray.300' />}\n                      />\n\n                      <Input\n                        onChange={(event) => this.handleChange(event, \"firstname\")}\n                        placeholder=\"Prénom\"\n                        borderColor=\"gray.400\"\n                        focusBorderColor=\"#1daa3f\"\n                      />\n                    </InputGroup>\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiOutlineFontColors color='gray.300' />}\n                      />\n                      <Input\n                        onChange={(event) => this.handleChange(event, \"lastname\")}\n                        placeholder=\"Nom\"\n                        borderColor=\"gray.400\"\n                        focusBorderColor=\"#1daa3f\"\n                      />\n                    </InputGroup>\n                  </Flex>\n\n\n                  <FormLabel>Téléphone</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiFillPhone color='gray.300' />}\n                    />\n                    <Input\n                      onChange={(event) => this.handleChange(event, \"phone\")}\n                      placeholder=\"Téléphone\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\"\n                    />\n                  </InputGroup>\n                  <FormLabel>Email</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiOutlineMail color='gray.300' />}\n                    />\n                    <Input\n                      type=\"email\"\n                      onChange={(event) => this.handleChange(event, \"email\")}\n                      placeholder=\"email\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\"\n                    />\n                  </InputGroup>\n\n\n                  <FormLabel>birthday</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiTwotoneCalendar color='gray.300' />}\n                    />\n                    <Input\n                    type=\"date\"\n                      onChange={(event) => this.handleChange(event, \"birthday\")}\n                      placeholder=\"birthday\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\" />\n                  </InputGroup>\n                  <FormLabel>Adresse</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiOutlineEnvironment color='gray.300' />}\n                    />\n                    <Input\n                      onChange={(event) => this.handleChange(event, \"adresse\")}\n                      placeholder=\"adresse\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\"\n                    />\n                  </InputGroup>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <FormLabel></FormLabel>\n\n                  </Flex>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <Select fontSize=\"sm\"\n                      ms=\"4px\"\n                      borderRadius=\"15px\"\n                      mb=\"4px\"\n                      size=\"lg\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\"\n                      onChange={(event) => this.handleChange(event, \"situationF\")}>\n                      <option value=\"célibataire\">Célibataire</option>\n                      <option value=\"veuve\">Veuve</option>\n                      <option value=\"mariée\">Mariée</option>\n                      <option value=\"dévorcée\">Dévorcée</option>\n                    </Select>\n\n                    <Select fontSize=\"sm\"\n                      ms=\"4px\"\n                      borderRadius=\"15px\"\n                      mb=\"4px\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\"\n                      size=\"lg\"\n                      onChange={(event) => this.handleChange(event, \"GroupeSanguine\")}>\n                      <option value=\"O-\">O-</option>\n                      <option value=\"O+\">O+</option>\n                      <option selected value=\"A-\">A-</option>\n                      <option value=\"A+\">A+</option>\n                      <option value=\"B-\">B-</option>\n                      <option value=\"B+\">B+</option>\n                      <option value=\"AB-\">AB-</option>\n                      <option value=\"AB+\">AB+</option>\n                    </Select>\n                  </Flex>\n\n                  <Checkbox \n                    onChange={(event) => {\n                      this.handleChange(event, \"sendemail\")\n                    }}\n                    \n                  />\n                  send email\n                  <Checkbox \n                    onChange={(event) => {\n                      this.handleChange(event, \"sendsms\")\n                    }}\n                    \n                  />\n                  send sms\n\n                </FormControl>\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" bg=\"#1daa3f\"\n                  color=\"white\" mr={3}\n                  _hover={{\n                    bg: \"#147a2c\",\n                  }}\n                  _active={{\n                    bg: \"#1daa3f\",\n                  }}\n                >\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModal() }} bg=\"gray.400\">Annuler</Button>\n\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default Patients;\n","import React  , { useState}  from \"react\";\n// Chakra imports\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Button,\n  Flex,\n  Grid,\n  FormControl,\n  FormLabel,\n  Input,\n  Icon,\n  Image,\n  Link,\n  Switch,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { useHistory } from \"react-router-dom\";\n// Custom components\nimport Card from \"components/Card/Card\";\nimport CardBody from \"components/Card/CardBody\";\nimport CardHeader from \"components/Card/CardHeader\";\n// Assets\n\nimport {\n\n  FaPenFancy,\n  FaPlus,\n  FaTwitter,\n} from \"react-icons/fa\";\n\nimport Axios from \"axios\";\nfunction Profile() {\n  // Chakra color mode\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgProfile = useColorModeValue(\n    \"hsla(0,0%,100%,.8)\",\n    \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\n  );\n  const borderProfileColor = useColorModeValue(\n    \"white\",\n    \"rgba(255, 255, 255, 0.31)\"\n  );\n  const emailColor = useColorModeValue(\"gray.400\", \"gray.300\");\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [nomHospital, setNomHospital] = useState(\"\");\n  const [addresseHospital, setAddresseHospital] = useState(\"\");\n  const [phoneHospital, setPhoneHospital] = useState(\"\");\n  const [faxHospital, setFaxHospital] = useState(\"\");\n  const [debutHoraire, setDebutHoraire] = useState(\"\");\n  const [finHoraire, setFinHoraire] = useState(\"\");\n\n\n  const Name = sessionStorage.getItem(\"nomHospital\")\n  const emailH = sessionStorage.getItem(\"email\")\n  const Addresse = sessionStorage.getItem(\"addresseHospital\")\n  const Phone = sessionStorage.getItem(\"phoneHospital\")\n  const Fix = sessionStorage.getItem(\"faxHospital\")\n  const id = sessionStorage.getItem(\"id\")\n  const dHoraire = sessionStorage.getItem(\"debutHoraire\")\n  const fHoraire = sessionStorage.getItem(\"finHoraire\")\n  const update = () => {\n    Axios.post(\"https://interxpim.herokuapp.com/api/hospital/update\", {\n      _id:id,\n      email: email,\n      nomHospital:nomHospital,\n      addresseHospital:addresseHospital,\n      phoneHospital:phoneHospital,\n      faxHospital:faxHospital,\n      heureDebut:debutHoraire,\n      heureFin:finHoraire\n    }).then((response) => {\n      \n       if (!response.data.message) {\n        \n         // setLoginStatus( response.data.message);\n          if (response.data.role==\"Admin\")\n          {\n            sessionStorage.setItem(\"email\",response.data.email)\n            sessionStorage.setItem(\"password\",response.data.password)\n            sessionStorage.setItem(\"nomHospital\",response.data.nomHospital)\n            sessionStorage.setItem(\"addresseHospital\",response.data.addresseHospital)\n            sessionStorage.setItem(\"phoneHospital\",response.data.phoneHospital)\n            sessionStorage.setItem(\"faxHospital\",response.data.faxHospital)\n            sessionStorage.setItem(\"id\",response.data._id)\n            sessionStorage.setItem(\"role\",response.data.role)\n            sessionStorage.setItem(\"debutHoraire\",response.data.heureDebut)\n            sessionStorage.setItem(\"finHoraire\",response.data.heureDebut)\n\n            console.log(response);\n        history.push(\"/admin/profile\");\n        window.location.reload(false);\n          }\n         \n         // sessionStorage.setItem(\"email\",response.data.email)\n         // sessionStorage.setItem(\"firstname\",response.data.firstname)\n\n          \n     \n        \n       } else {\n          setLoginStatus (response.data[0].message);\n          \n       }\n    });\n    };\n    function handleSubmit(event) {\n      event.preventDefault();\n     // event.login(email , password)\n    }\n  return (\n    <Flex direction=\"column\">\n      <Box\n        mb={{ sm: \"205px\", md: \"75px\", xl: \"70px\" }}\n        borderRadius=\"15px\"\n        px=\"0px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        align=\"center\"\n      >\n        <Box\n          \n          w=\"100%\"\n          h=\"300px\"\n          borderRadius=\"25px\"\n          bgPosition=\"50%\"\n          bgRepeat=\"no-repeat\"\n          position=\"relative\"\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Flex\n            direction={{ sm: \"column\", md: \"row\" }}\n            mx=\"1.5rem\"\n            maxH=\"330px\"\n            w={{ sm: \"90%\", xl: \"95%\" }}\n            justifyContent={{ sm: \"center\", md: \"space-between\" }}\n            align=\"center\"\n            backdropFilter=\"saturate(200%) blur(50px)\"\n            position=\"absolute\"\n            boxShadow=\"0px 2px 5.5px rgba(0, 0, 0, 0.02)\"\n            border=\"2px solid\"\n            borderColor={borderProfileColor}\n            bg={bgProfile}\n            p=\"24px\"\n            borderRadius=\"20px\"\n            transform={{\n              sm: \"translateY(45%)\",\n              md: \"translateY(110%)\",\n              lg: \"translateY(160%)\",\n            }}\n          >\n            <Flex\n              align=\"center\"\n              mb={{ sm: \"10px\", md: \"0px\" }}\n              direction={{ sm: \"column\", md: \"row\" }}\n              w={{ sm: \"100%\" }}\n              textAlign={{ sm: \"center\", md: \"start\" }}\n            >\n              <Avatar\n                me={{ md: \"22px\" }}\n               \n                w=\"80px\"\n                h=\"80px\"\n                borderRadius=\"15px\"\n              />\n              <Flex direction=\"column\" maxWidth=\"100%\" my={{ sm: \"14px\" }}>\n                <Text\n                  fontSize={{ sm: \"lg\", lg: \"xl\" }}\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  ms={{ sm: \"8px\", md: \"0px\" }}\n                >\n                  {Name}\n                </Text>\n                <Text\n                  fontSize={{ sm: \"sm\", md: \"md\" }}\n                  color={emailColor}\n                  fontWeight=\"semibold\"\n                >\n                 {emailH}\n                </Text>\n              </Flex>\n            </Flex>\n            <Flex\n              direction={{ sm: \"column\", lg: \"row\" }}\n              w={{ sm: \"100%\", md: \"50%\", lg: \"auto\" }}\n            >\n              \n            </Flex>\n          </Flex>\n        </Box>\n      </Box>\n      <Grid templateColumns={{ sm: \"1fr\", xl: \"repeat(2, 1fr)\" }} gap=\"30px\">\n        \n        <Card p=\"20px\" ml={{ sm: \"50px\", xl: \"0px\" }}>\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Profile Information\n            </Text>\n          </CardHeader>\n          <CardBody px=\"5px\">\n            <Flex direction=\"column\">\n              \n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Full Name:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {Name}\n                </Text>\n              </Flex>\n              \n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Email:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {emailH}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Location:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {Addresse}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Mobile:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {Phone}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Fix:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {Fix}\n                </Text>\n              </Flex>\n              \n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Créneau horaire:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {dHoraire} {fHoraire}\n                </Text>\n              </Flex>\n            </Flex>\n          </CardBody>\n        </Card>\n        <Card p=\"16px\">\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Modify\n            </Text>\n          </CardHeader>\n          <CardBody px=\"5px\">\n            <Flex direction=\"column\" w=\"100%\">\n            <FormControl>\n            <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"text\"\n              placeholder=\"hospital name \"\n              value={nomHospital}\n                onChange={(e) => setNomHospital(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n              <Input\n                borderRadius=\"15px\"\n                mb=\"24px\"\n                fontSize=\"sm\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Your email adress\"\n                size=\"lg\"\n               \n              />\n              <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"text\"\n              placeholder=\"hospital adresse \"\n              value={addresseHospital}\n                onChange={(e) => setAddresseHospital(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n             <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"text\"\n              placeholder=\"hospital phone \"\n              value={phoneHospital}\n                onChange={(e) => setPhoneHospital(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n          \n             <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"text\"\n              placeholder=\"hospital fax \"\n              value={faxHospital}\n                onChange={(e) => setFaxHospital(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n              <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"time\"\n              placeholder=\"debut Horaire \"\n              value={debutHoraire}\n                onChange={(e) => setDebutHoraire(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n              \n  <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"time\"\n              placeholder=\"fin Horaire \"\n              value={finHoraire}\n                onChange={(e) => setFinHoraire(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />              </FormControl>\n\n              <Button p=\"0px\" bg=\"transparent\" onClick={update} >\n                <Flex\n\n                  align=\"center\"\n                  w={{ lg: \"135px\" }}\n                  borderRadius=\"15px\"\n                  justifyContent=\"center\"\n                  py=\"10px\"\n                  cursor=\"pointer\"\n                >\n                  <Icon as={FaPenFancy} me=\"6px\" />\n                  <Text fontSize=\"xs\" color={textColor} fontWeight=\"bold\">\n                    Modify\n                  </Text>\n                </Flex>\n              </Button>             \n            </Flex>\n          </CardBody>\n        </Card>\n      </Grid>\n    </Flex>\n  );\n}\n\nexport default Profile;\n","export default __webpack_public_path__ + \"static/media/avatar2.5692c39d.png\";","export default __webpack_public_path__ + \"static/media/avatar3.9f646ac5.png\";","export default __webpack_public_path__ + \"static/media/avatar4.54d5c1de.png\";","export default __webpack_public_path__ + \"static/media/avatar5.d2c5420e.png\";","export default __webpack_public_path__ + \"static/media/avatar6.97310bf2.png\";","export default __webpack_public_path__ + \"static/media/ImageArchitect1.032614a5.png\";","export default __webpack_public_path__ + \"static/media/ImageArchitect2.960c2b9c.png\";","export default __webpack_public_path__ + \"static/media/ImageArchitect3.db5ecbbd.png\";","export default __webpack_public_path__ + \"static/media/ProfileBackground.4dc796b0.png\";","import React, {useEffect, useState } from \"react\";\n// Chakra imports\n\nimport { Checkbox, CheckboxGroup } from '@chakra-ui/react'\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Button,\n  Flex,\n  Grid,\n  FormControl,\n  FormLabel,\n  Input,\n  Icon,\n  Image,\n  Link,\n  Switch,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { useHistory } from \"react-router-dom\";\n// Custom components\nimport Card from \"components/Card/Card\";\nimport CardBody from \"components/Card/CardBody\";\nimport CardHeader from \"components/Card/CardHeader\";\n\n// Assets\nimport avatar2 from \"assets/img/avatars/avatar2.png\";\nimport avatar3 from \"assets/img/avatars/avatar3.png\";\nimport avatar4 from \"assets/img/avatars/avatar4.png\";\nimport avatar5 from \"assets/img/avatars/avatar5.png\";\nimport avatar6 from \"assets/img/avatars/avatar6.png\";\nimport ImageArchitect1 from \"assets/img/ImageArchitect1.png\";\nimport ImageArchitect2 from \"assets/img/ImageArchitect2.png\";\nimport ImageArchitect3 from \"assets/img/ImageArchitect3.png\";\nimport ProfileBgImage from \"assets/img/ProfileBackground.png\";\nimport {\n  FaCube,\n  FaFacebook,\n  FaInstagram,\n  FaPenFancy,\n  FaPlus,\n  FaTwitter,\n} from \"react-icons/fa\";\nimport { IoDocumentsSharp } from \"react-icons/io5\";\nimport { servicesVersion } from \"typescript\";\nimport { add } from \"lodash\";\nimport Axios from \"axios\";\nfunction Profile() {\n  \n  // Chakra color mode\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgProfile = useColorModeValue(\n    \"hsla(0,0%,100%,.8)\",\n    \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\n  );\n  const borderProfileColor = useColorModeValue(\n    \"white\",\n    \"rgba(255, 255, 255, 0.31)\"\n  );\n  const emailColor = useColorModeValue(\"gray.400\", \"gray.300\");\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [firstname, setFirstName] = useState(\"\");\n  const [lastname, setLastName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [situationF, setsituationF] = useState(\"\");\n  const [sendsms, setsendsms] = useState(sessionStorage.getItem(\"sendsms\"));\n  const [sendemail, setsendemail] = useState(JSON.parse(sessionStorage.getItem(\"sendemail\"))==true);\n\n  const NameE = sessionStorage.getItem(\"firstname\")\n  const PrenomE = sessionStorage.getItem(\"lastname\")\n  const emailE = sessionStorage.getItem(\"email\")\n  const AgeE = sessionStorage.getItem(\"age\")\n  const PhoneE = sessionStorage.getItem(\"phone\")\n  const genderE = sessionStorage.getItem(\"gender\")\n  const situationFE = sessionStorage.getItem(\"situation\")\n  const idE = sessionStorage.getItem(\"id\")\n\n  const update = () => {\n    Axios.put(\"https://interxpim.herokuapp.com/api/users/update\", {\n      _id: idE,\n      email: email,\n      lastname: lastname,\n      firstname: firstname,\n      age: age,\n      phone: phone,\n      gender: gender,\n      situationF: situationF,\n      sendemail: sendemail,\n      sendsms: sendsms\n    }).then((response) => {\n\n      if (!response.data.message) {\n\n        // setLoginStatus( response.data.message);\n        console.log(\"yes\")\n        sessionStorage.setItem(\"email\", email)\n        sessionStorage.setItem(\"firstname\", firstname)\n        sessionStorage.setItem(\"lastname\", lastname)\n        sessionStorage.setItem(\"age\", age)\n        sessionStorage.setItem(\"phone\", phone)\n        sessionStorage.setItem(\"gender\", gender)\n        sessionStorage.setItem(\"situation\", situationF)\n        sessionStorage.setItem(\"sendsms\", sendsms)\n        sessionStorage.setItem(\"sendemail\", sendemail)\n        console.log(response);\n        history.push(\"/admin/profile\");\n        window.location.reload(false);\n\n\n        // sessionStorage.setItem(\"email\",response.data.email)\n        // sessionStorage.setItem(\"firstname\",response.data.firstname)\n\n\n\n\n      } else {\n        setLoginStatus(response.data[0].message);\n\n      }\n    });\n  };\n  function handleSubmit(event) {\n    event.preventDefault();\n    // event.login(email , password)\n  }\n  useEffect(() => {\n   // console.log(semail)\n   \n }, []);\n  return (\n    <Flex direction=\"column\">\n      <Box\n        mb={{ sm: \"205px\", md: \"75px\", xl: \"70px\" }}\n        borderRadius=\"15px\"\n        px=\"0px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        align=\"center\"\n      >\n        <Box\n\n          w=\"100%\"\n          h=\"300px\"\n          borderRadius=\"25px\"\n          bgPosition=\"50%\"\n          bgRepeat=\"no-repeat\"\n          position=\"relative\"\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Flex\n            direction={{ sm: \"column\", md: \"row\" }}\n            mx=\"1.5rem\"\n            maxH=\"330px\"\n            w={{ sm: \"90%\", xl: \"95%\" }}\n            justifyContent={{ sm: \"center\", md: \"space-between\" }}\n            align=\"center\"\n            backdropFilter=\"saturate(200%) blur(50px)\"\n            position=\"absolute\"\n            boxShadow=\"0px 2px 5.5px rgba(0, 0, 0, 0.02)\"\n            border=\"2px solid\"\n            borderColor={borderProfileColor}\n            bg={bgProfile}\n            p=\"24px\"\n            borderRadius=\"20px\"\n            transform={{\n              sm: \"translateY(45%)\",\n              md: \"translateY(110%)\",\n              lg: \"translateY(160%)\",\n            }}\n          >\n            <Flex\n              align=\"center\"\n              mb={{ sm: \"10px\", md: \"0px\" }}\n              direction={{ sm: \"column\", md: \"row\" }}\n              w={{ sm: \"100%\" }}\n              textAlign={{ sm: \"center\", md: \"start\" }}\n            >\n              <Avatar\n                me={{ md: \"22px\" }}\n\n                w=\"80px\"\n                h=\"80px\"\n                borderRadius=\"15px\"\n              />\n              <Flex direction=\"column\" maxWidth=\"100%\" my={{ sm: \"14px\" }}>\n                <Text\n                  fontSize={{ sm: \"lg\", lg: \"xl\" }}\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  ms={{ sm: \"8px\", md: \"0px\" }}\n                >\n                  {NameE}\n                </Text>\n                <Text\n                  fontSize={{ sm: \"sm\", md: \"md\" }}\n                  color={emailColor}\n                  fontWeight=\"semibold\"\n                >\n                  {emailE}\n                </Text>\n              </Flex>\n            </Flex>\n            <Flex\n              direction={{ sm: \"column\", lg: \"row\" }}\n              w={{ sm: \"100%\", md: \"50%\", lg: \"auto\" }}\n            >\n\n            </Flex>\n          </Flex>\n        </Box>\n      </Box>\n      <Grid templateColumns={{ sm: \"1fr\", xl: \"repeat(2, 1fr)\" }} gap=\"30px\">\n\n        <Card p=\"20px\" ml={{ sm: \"50px\", xl: \"0px\" }}>\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Profile Information Emplye\n            </Text>\n          </CardHeader>\n          <CardBody px=\"5px\">\n            <Flex direction=\"column\">\n\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Full Name:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {NameE} {PrenomE}\n                </Text>\n              </Flex>\n\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Email:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {emailE}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Age:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {AgeE}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Mobile:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {PhoneE}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Gender:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {genderE}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  situation Familiale:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {situationFE}\n                </Text>\n              </Flex>\n              <Flex>\n\n           {/*   {sendemail\n                 <input type= \"checkbox\" \n\n                  checked={sendemail\n                  />\n   \n                 */} \n            \n                \n              </Flex>\n             \n            </Flex>\n          </CardBody>\n        </Card>\n        <Card p=\"16px\">\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Modify\n            </Text>\n          </CardHeader>\n          <CardBody px=\"5px\">\n            <Flex direction=\"column\" w=\"100%\">\n              <FormControl>\n                <Input\n                  fontSize=\"sm\"\n                  ms=\"4px\"\n                  borderRadius=\"15px\"\n                  type=\"text\"\n                  placeholder=\"first name \"\n                  value={firstname}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  mb=\"24px\"\n                  size=\"lg\"\n                />\n                <Input\n                  fontSize=\"sm\"\n                  ms=\"4px\"\n                  borderRadius=\"15px\"\n                  type=\"text\"\n                  placeholder=\"last name \"\n                  value={lastname}\n                  onChange={(e) => setLastName(e.target.value)}\n                  mb=\"24px\"\n                  size=\"lg\"\n                />\n                <Input\n                  borderRadius=\"15px\"\n                  mb=\"24px\"\n                  fontSize=\"sm\"\n                  type=\"text\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Your email adress\"\n                  size=\"lg\"\n\n                />\n                <Input\n                  fontSize=\"sm\"\n                  ms=\"4px\"\n                  borderRadius=\"15px\"\n                  type=\"text\"\n                  placeholder=\"employe age  \"\n                  value={age}\n                  onChange={(e) => setAge(e.target.value)}\n                  mb=\"24px\"\n                  size=\"lg\"\n                />\n                <Input\n                  fontSize=\"sm\"\n                  ms=\"4px\"\n                  borderRadius=\"15px\"\n                  type=\"text\"\n                  placeholder=\"Empolye phone \"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                  mb=\"24px\"\n                  size=\"lg\"\n                />\n                <Input\n                  fontSize=\"sm\"\n                  ms=\"4px\"\n                  borderRadius=\"15px\"\n                  type=\"text\"\n                  placeholder=\"gender\"\n                  value={gender}\n                  onChange={(e) => setGender(e.target.value)}\n                  mb=\"24px\"\n                  size=\"lg\"\n                />\n                <Input\n                  fontSize=\"sm\"\n                  ms=\"4px\"\n                  borderRadius=\"15px\"\n                  type=\"text\"\n                  placeholder=\"situation familiale\"\n                  value={situationF}\n                  onChange={(e) => setsituationF(e.target.value)}\n                  mb=\"24px\"\n                  size=\"lg\"\n                />\n              </FormControl>\n\n              <Button p=\"0px\" bg=\"transparent\" onClick={update} >\n                <Flex\n\n                  align=\"center\"\n                  w={{ lg: \"135px\" }}\n                  borderRadius=\"15px\"\n                  justifyContent=\"center\"\n                  py=\"10px\"\n                  cursor=\"pointer\"\n                >\n                  <Icon as={FaPenFancy} me=\"6px\" />\n                  <Text fontSize=\"xs\" color={textColor} fontWeight=\"bold\">\n                    Modify\n                  </Text>\n                </Flex>\n              </Button>\n            </Flex>\n          </CardBody>\n        </Card>\n      </Grid>\n    </Flex>\n  );\n}\n\nexport default Profile;\n","import React  , { useState}  from \"react\";\n\nimport { Checkbox, CheckboxGroup } from '@chakra-ui/react'\n// Chakra imports\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Button,\n  Flex,\n  Grid,\n  FormControl,\n  FormLabel,\n  Input,\n  Icon,\n  Image,\n  Link,\n  Switch,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { useHistory } from \"react-router-dom\";\n// Custom components\nimport Card from \"components/Card/Card\";\nimport CardBody from \"components/Card/CardBody\";\nimport CardHeader from \"components/Card/CardHeader\";\n\n// Assets\nimport avatar2 from \"assets/img/avatars/avatar2.png\";\nimport avatar3 from \"assets/img/avatars/avatar3.png\";\nimport avatar4 from \"assets/img/avatars/avatar4.png\";\nimport avatar5 from \"assets/img/avatars/avatar5.png\";\nimport avatar6 from \"assets/img/avatars/avatar6.png\";\nimport ImageArchitect1 from \"assets/img/ImageArchitect1.png\";\nimport ImageArchitect2 from \"assets/img/ImageArchitect2.png\";\nimport ImageArchitect3 from \"assets/img/ImageArchitect3.png\";\nimport ProfileBgImage from \"assets/img/ProfileBackground.png\";\nimport {\n  FaCube,\n  FaFacebook,\n  FaInstagram,\n  FaPenFancy,\n  FaPlus,\n  FaTwitter,\n} from \"react-icons/fa\";\nimport { IoDocumentsSharp } from \"react-icons/io5\";\nimport { servicesVersion } from \"typescript\";\nimport { add } from \"lodash\";\nimport Axios from \"axios\";\nfunction Profile() {\n  // Chakra color mode\n  const textColor = useColorModeValue(\"gray.700\", \"white\");\n  const bgProfile = useColorModeValue(\n    \"hsla(0,0%,100%,.8)\",\n    \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\n  );\n  const borderProfileColor = useColorModeValue(\n    \"white\",\n    \"rgba(255, 255, 255, 0.31)\"\n  );\n  const emailColor = useColorModeValue(\"gray.400\", \"gray.300\");\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [firstname, setFirstName] = useState(\"\");\n  const [lastname, setLastName] = useState(\"\");\n  const [birthday, setBirthday] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [situationF, setsituationF] = useState(\"\");\n  const [GroupeSanguine, setGroupeSanguine] = useState(\"\");\n  const [adresse, setAdresse] = useState(\"\");\n  const [sendsms, setsendsms] = useState(false);\n  const [sendemail, setsendemail] = useState(false);\n  const [sendsms1, setsendsms1] = useState(JSON.parse(sessionStorage.getItem(\"sendsms\"))==true);\n  const [sendemail1, setsendemail1] = useState(JSON.parse(sessionStorage.getItem(\"sendemail\"))==true);\n\n\n\n\nconsole.log(sendemail)\n  const NameP = sessionStorage.getItem(\"firstname\")\n  const PrenomP = sessionStorage.getItem(\"lastname\")\n  const emailP = sessionStorage.getItem(\"email\")\n  const BirthdayP  = sessionStorage.getItem(\"birthday\")\n  const PhoneP = sessionStorage.getItem(\"phone\")\n  const adresseP = sessionStorage.getItem(\"adresse\")\n  const situationFP = sessionStorage.getItem(\"situation\")\n  const GroupeSanguineP = sessionStorage.getItem(\"GroupeSanguine\")\n  const idE = sessionStorage.getItem(\"id\")\n  const update = () => {\n    Axios.put(\"https://interxpim.herokuapp.com/api/patient/update\", {\n      _id:idE,\n      email: email,\n      lastname:lastname,\n      firstname:firstname,\n      birthday:birthday,\n      phone:phone,\n      adresse:adresse,\n      situationF:situationF,\n      GroupeSanguine:GroupeSanguine,\n      sendemail:sendemail,\n      sendsms:sendsms\n    }).then((response) => {\n      \n       if (!response.data.message) {\n        \n         // setLoginStatus( response.data.message);\n          console.log(\"yes\")\n            sessionStorage.setItem(\"email\",email)\n            sessionStorage.setItem(\"firstname\",firstname)\n            sessionStorage.setItem(\"lastname\",lastname)\n            sessionStorage.setItem(\"birthday\",birthday)\n            sessionStorage.setItem(\"phone\",phone)\n            sessionStorage.setItem(\"adresse\",adresse)\n            sessionStorage.setItem(\"situation\",situationF)\n            sessionStorage.setItem(\"GroupeSanguine\",GroupeSanguine)\n            sessionStorage.setItem(\"sendemail\",sendemail)\n            sessionStorage.setItem(\"sensms\",sendsms)\n\n            console.log(response);\n        history.push(\"/admin/profile\");\n        window.location.reload(false);\n          \n      \n       } else {\n          setLoginStatus (response.data[0].message);\n          \n       }\n    });\n    };\n    function handleSubmit(event) {\n      event.preventDefault();\n     // event.login(email , password)\n    }\n  return (\n    <Flex direction=\"column\">\n      <Box\n        mb={{ sm: \"205px\", md: \"75px\", xl: \"70px\" }}\n        borderRadius=\"15px\"\n        px=\"0px\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        align=\"center\"\n      >\n        <Box\n          \n          w=\"100%\"\n          h=\"300px\"\n          borderRadius=\"25px\"\n          bgPosition=\"50%\"\n          bgRepeat=\"no-repeat\"\n          position=\"relative\"\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Flex\n            direction={{ sm: \"column\", md: \"row\" }}\n            mx=\"1.5rem\"\n            maxH=\"330px\"\n            w={{ sm: \"90%\", xl: \"95%\" }}\n            justifyContent={{ sm: \"center\", md: \"space-between\" }}\n            align=\"center\"\n            backdropFilter=\"saturate(200%) blur(50px)\"\n            position=\"absolute\"\n            boxShadow=\"0px 2px 5.5px rgba(0, 0, 0, 0.02)\"\n            border=\"2px solid\"\n            borderColor={borderProfileColor}\n            bg={bgProfile}\n            p=\"24px\"\n            borderRadius=\"20px\"\n            transform={{\n              sm: \"translateY(45%)\",\n              md: \"translateY(110%)\",\n              lg: \"translateY(160%)\",\n            }}\n          >\n            <Flex\n              align=\"center\"\n              mb={{ sm: \"10px\", md: \"0px\" }}\n              direction={{ sm: \"column\", md: \"row\" }}\n              w={{ sm: \"100%\" }}\n              textAlign={{ sm: \"center\", md: \"start\" }}\n            >\n              <Avatar\n                me={{ md: \"22px\" }}\n               \n                w=\"80px\"\n                h=\"80px\"\n                borderRadius=\"15px\"\n              />\n              <Flex direction=\"column\" maxWidth=\"100%\" my={{ sm: \"14px\" }}>\n                <Text\n                  fontSize={{ sm: \"lg\", lg: \"xl\" }}\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  ms={{ sm: \"8px\", md: \"0px\" }}\n                >\n                  {NameP}\n                </Text>\n                <Text\n                  fontSize={{ sm: \"sm\", md: \"md\" }}\n                  color={emailColor}\n                  fontWeight=\"semibold\"\n                >\n                 {emailP}\n                </Text>\n              </Flex>\n            </Flex>\n            <Flex\n              direction={{ sm: \"column\", lg: \"row\" }}\n              w={{ sm: \"100%\", md: \"50%\", lg: \"auto\" }}\n            >\n              \n            </Flex>\n          </Flex>\n        </Box>\n      </Box>\n      <Grid templateColumns={{ sm: \"1fr\", xl: \"repeat(2, 1fr)\" }} gap=\"30px\">\n        \n        <Card p=\"20px\" ml={{ sm: \"50px\", xl: \"0px\" }}>\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Profile Information Patient \n            </Text>\n          </CardHeader>\n          <CardBody px=\"5px\">\n            <Flex direction=\"column\">\n              \n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Full Name:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {NameP} {PrenomP}\n                </Text>\n              </Flex>\n              \n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Email:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {emailP}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Birthday:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {BirthdayP}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Mobile:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {PhoneP}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Adresse:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {adresseP}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  situation Familiale:{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {situationFP}\n                </Text>\n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <Text\n                  fontSize=\"md\"\n                  color={textColor}\n                  fontWeight=\"bold\"\n                  me=\"10px\"\n                >\n                  Groupe Sanguine :{\" \"}\n                </Text>\n                <Text fontSize=\"md\" color=\"gray.500\" fontWeight=\"400\">\n                  {GroupeSanguineP}\n                </Text>\n                \n              </Flex>\n              <Flex align=\"center\" mb=\"18px\">\n                <input type=\"checkbox\"\n                    checked={sendemail1}\n                    disabled={true}\n                  />\n                  send email\n                  </Flex>\n                  <Flex align=\"center\" mb=\"18px\">\n                  <input type=\"checkbox\"\n                    checked={sendsms1}\n                    disabled={true}\n                  />\n                  send sms\n                  </Flex>\n                  \n            </Flex>\n          </CardBody>\n        </Card>\n        <Card p=\"16px\">\n          <CardHeader p=\"12px 5px\" mb=\"12px\">\n            <Text fontSize=\"lg\" color={textColor} fontWeight=\"bold\">\n              Modify\n            </Text>\n          </CardHeader>\n          <CardBody px=\"5px\">\n            <Flex direction=\"column\" w=\"100%\">\n            <FormControl>\n            <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"text\"\n              placeholder=\"first name \"\n              value={firstname}\n                onChange={(e) => setFirstName(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n            <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"text\"\n              placeholder=\"last name \"\n              value={lastname}\n                onChange={(e) => setLastName(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n              <Input\n                borderRadius=\"15px\"\n                mb=\"24px\"\n                fontSize=\"sm\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Your email adress\"\n                size=\"lg\"\n               \n              />\n              <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"text\"\n              placeholder=\"employe birthday  \"\n              value={birthday}\n                onChange={(e) => setBirthday(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n             <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"text\"\n              placeholder=\"Empolye phone \"\n              value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n             <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"text\"\n              placeholder=\"Adresse \"\n              value={adresse}\n                onChange={(e) => setAdresse(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n              <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"text\"\n              placeholder=\"situation familiale\"\n              value={situationF}\n                onChange={(e) => setsituationF(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n             <Input\n              fontSize=\"sm\"\n              ms=\"4px\"\n              borderRadius=\"15px\"\n              type=\"text\"\n              placeholder=\"Groupe Sanguine\"\n              value={GroupeSanguine}\n                onChange={(e) => setGroupeSanguine(e.target.value)}\n              mb=\"24px\"\n              size=\"lg\"\n            />\n            <input type=\"checkbox\" \n            \n            onChange={(e) => setsendemail(e.target.checked)}/>\n                  send email\n                  <input type=\"checkbox\" \n            \n            onChange={(e) => setsendsms(e.target.checked)}/>\n                  send sms\n              </FormControl>\n\n              <Button p=\"0px\" bg=\"transparent\" onClick={update} >\n                <Flex\n\n                  align=\"center\"\n                  w={{ lg: \"135px\" }}\n                  borderRadius=\"15px\"\n                  justifyContent=\"center\"\n                  py=\"10px\"\n                  cursor=\"pointer\"\n                >\n                  <Icon as={FaPenFancy} me=\"6px\" />\n                  <Text fontSize=\"xs\" color={textColor} fontWeight=\"bold\">\n                    Modify\n                  </Text>\n                </Flex>\n              </Button>             \n            </Flex>\n          </CardBody>\n        </Card>\n      </Grid>\n    </Flex>\n  );\n}\n\nexport default Profile;\n","import {\n  Icon,\n  Badge,\n  Button,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n  InputRightElement,\n  InputGroup,\n  Image\n} from \"@chakra-ui/react\";\n\nimport ReactToPrint from \"react-to-print\";\nimport {Grid,TextField} from '@material-ui/core';\nimport QRCode from 'qrcode';\nimport QrReader from 'react-qr-reader';\nimport axios from 'axios';\nimport moment from \"moment\";\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n  ButtonGroup,\n} from '@chakra-ui/react'\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input\n} from \"@chakra-ui/react\"\nimport React from \"react\";\nimport { GiLoveInjection } from \"react-icons/gi\";\nimport { FaLeaf, FaPencilAlt, FaTrashAlt } from \"react-icons/fa\";\nimport { date } from \"yup\";\nclass TablesTableRow extends React.Component {\n\n  componentDidMount() {\n\n    const { firstname, lastname, date, heure, phone, result, id, idp, etat } = this.props;\n    this.setState({ firstname });\n    this.setState({ lastname });\n    this.setState({ date });\n    this.setState({ heure });\n    this.setState({ phone });\n    this.setState({ result });\n    this.setState({ idp });\n    this.setState({ etat });\n    axios.get(`https://interxpim.herokuapp.com/api/prelevements/all`)\n      .then(res => {\n        const resdataP = res.data;\n        this.setState({ resdataP });\n        //console.log(resdataP)\n        this.state.etat = res.data.etat\n\n      })\n    axios.post(\"https://interxpim.herokuapp.com/api/prelevements/show\", {\n      _id: this.props.idp,\n    }).then((response) => {\n\n      if (!response.data.message) {\n        // console.log(response.data.note)\n        this.state.note = response.data.note\n        this.state.generate = response.data.numeroD\n      }\n    })\n  \n    // console.log(\"prelevement nest pas efectue\")\n  }\n  \n  componentDidUpdate() {\n    console.log(this.state)\n  }\n\n  constructor(props) {\n\n\n    super(props);\n    this.state = {\n      generate: '',\n      result: '',\n      firstname: '',\n      lastname: '',\n      phone: '',\n      date: '',\n      heure: '',\n      hospital: '',\n      etat: '',\n      note: '',\n      date: Date.now(),\n      numeroD: '',\n      imageUrl:'',\n      modalIsOpen: false,\n      modalIsOpenQ:false,\n      modalIsOpenP: false,\n      resdataP: [],\n      pref: [],\n      list: []\n    }\n  }\n\n\n  generateQrCode = async ()  =>{\n    try {\n          const response = await QRCode.toDataURL(this.state.generate);\n          console.log(response)\n          this.state.imageUrl=response;\n          console.log( this.state.imageUrl)\n    }catch (error) {\n      console.log(error);\n    }\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n\n  }\n  delete = async () => {\n    const reservation = {\n      _id: this.props.id\n    }\n    axios.put(`https://interxpim.herokuapp.com/api/reservations/deleteReser`, reservation)\n      .then(res => {\n\n        alert(\"Réservation supprimé!\")\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Erreur!\");\n\n      })\n  }\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const reservation = {\n      _id: this.props.id,\n      result: this.state.result,\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phone: this.state.phone,\n      date: this.state.date,\n      heure: this.state.heure,\n      hospital: this.state.hospital,\n      etat: this.state.etat\n    }\n    axios.put(`https://interxpim.herokuapp.com/api/reservations/updateReser`, reservation)\n      .then(res => {\n\n        alert(\"Réservation modifié!\")\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  handleSubmit1 = async (event) => {\n\n    event.preventDefault();\n    const prelevement = {\n      _id: this.props.idp,\n      etat: this.state.etat,\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      date: this.state.date,\n      numeroD: this.state.generate,\n      note: this.state.note,\n      reservation: this.state.id1\n\n    }\n    const reservation = {\n      _id: this.props.id,\n      etat: this.state.etat\n\n    }\n    // console.log(this.pref._id)\n    axios.put(`https://interxpim.herokuapp.com/api/prelevements/updatePrev`, prelevement)\n      .then(res => {\n\n        // alert(\"prelevement modifié!\")\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n\n      })\n    reservation.etat = true\n    axios.put(`https://interxpim.herokuapp.com/api/reservations/updateEtat`, reservation).then(\n      res => {\n        //  alert(\"prelevement modifié!\")\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n      }\n      )\n  }\n \n  openModal(id1) {\n    this.setState({\n      modalIsOpen: true,\n      id: id1\n    });\n\n    /*axios.post(\"https://interxpim.herokuapp.com/api/prelevement/show\", {\n\n      id: id1,\n\n      password: password,\n    }).then((response) => {\n\n      if (!response.data.message) {\n        // setLoginStatus( response.data.message);\n        if (response.data.role == \"Admin\" && isMail) {\n        }}})*/\n  }\n  openModal2(id2) {\n    this.setState({\n      modalIsOpenP: true,\n      id: id2\n    });\n    this.generateQrCode()\n    axios.post(\"https://interxpim.herokuapp.com/api/prelevements/show\", {\n\n      _id: this.props.idp,\n    }).then((response) => {\n\n      if (!response.data.message) {\n       // console.log(response.data.note)\n        this.state.note = response.data.note\n        this.state.numeroD = response.data.numeroD\n\n      }\n    })\n    //console.log(id2)\n  }\n  openModal3(id1) {\n    this.setState({\n      ...this.state,\n      modalIsOpenQ: true,\n      id: id1\n    });\n  }\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n  closeModalQ() {\n    this.setState({\n      ...this.state,\n      modalIsOpenQ:false,\n\n    });\n\n  }\n  closeModalP() {\n    this.setState({\n      modalIsOpenP: false,\n\n    });\n  }\n  codeGen = async (event) => {\n    event.preventDefault();\n    let response = await axios.post(\"https://interxpim.herokuapp.com/api/prelevements/geree\", {})\n    this.setState({\n      ...this.state,\n      generate: response.data\n    })\n\n    this.generateQrCode()\n  }\n  print(){\n    console.log(\"print\")\n    print(this.generateQrCode())\n}\n\n\n\n  render() {\n\n    // console.log(this.state.list.etat)\n    /* console.log(elementr.etat)\n    // this.state.etat=elementr.etat\n     //console.log(this.state.etat)\n   })*/\n\n\n    const { firstname, lastname, date, heure, phone, result, id, idp, etat } = this.props;\n    //console.log(this.props.etatyes)\n    return (\n      <>\n\n        <Tr>\n          <Td >\n            <Flex align=\"center\" >\n              <Flex direction=\"column\">\n                <Text\n                  fontSize=\"md\"\n                  color=\"gray.700\"\n                  fontWeight=\"bold\"\n                >\n                  {lastname} {firstname}\n                </Text>\n              </Flex>\n            </Flex>\n          </Td>\n\n          <Td>\n            <Flex direction=\"column\">\n              <Text fontSize=\"md\" color=\"gray.700\" fontWeight=\"bold\">\n                {moment(date).utc().format('DD/MM/YYYY').toString()}\n              </Text>\n            </Flex>\n          </Td>\n\n          <Td>\n            <Text fontSize=\"md\" color=\"gray.700\" fontWeight=\"bold\" pb=\".5rem\">\n              {heure}\n            </Text>\n          </Td>\n          <Td>\n            <Badge\n              bg={result === \"Traité\" ? \"green.400\" : \"gray.400\"}\n              color={result === \"Non traité\" ? \"white\" : \"gray.700\"}\n              fontSize=\"16px\"\n              p=\"3px 10px\"\n              borderRadius=\"8px\"\n            >\n              {result.toString()}\n            </Badge>\n          </Td>\n          <Td>\n            <Flex\n              direction={{ sm: \"column\", md: \"row\" }}\n              align=\"flex-start\"\n              p={{ md: \"24px\" }}\n            >\n              <Popover\n                initialFocusRef={this.state.modalIsOpen}\n                onClose={() => { this.closeModal() }}\n                placement='right'\n                closeOnBlur={true}\n              >\n                <PopoverTrigger>\n                  <Button\n                    p=\"0px\"\n                    bg=\"transparent\"\n                    mb={{ sm: \"10px\", md: \"0px\" }}\n                    me={{ md: \"12px\" }}\n                  >\n                    <Flex color=\"red.500\" cursor=\"pointer\" align=\"center\" p=\"12px\">\n                      <Icon as={FaTrashAlt} me=\"4px\" />\n                    </Flex>\n                  </Button>\n                </PopoverTrigger>\n\n                <PopoverContent>\n                  <PopoverHeader fontWeight='semibold'>Confirmation</PopoverHeader>\n                  <PopoverArrow />\n                  <PopoverCloseButton />\n                  <PopoverBody>\n                    Êtes-vous sûr de vouloir continuer votre action ?\n                  </PopoverBody>\n                  <PopoverFooter d='flex' justifyContent='flex-end'>\n                    <ButtonGroup size='sm'>\n                      <Button onClick={() => { this.delete() }} colorScheme='red'>Valider</Button>\n                    </ButtonGroup>\n                  </PopoverFooter>\n                </PopoverContent>\n              </Popover>\n\n\n              <Button onClick={() => { this.openModal(id) }} p=\"0px\" bg=\"transparent\">\n\n                <Flex color=\"gray.700\" cursor=\"pointer\" align=\"center\" p=\"12px\">\n                  <Icon as={FaPencilAlt} me=\"4px\" />\n                </Flex>\n              </Button>\n            </Flex>\n          </Td>\n          <Td>\n\n\n            <Button onClick={() => { this.openModal2(idp) }} p=\"0px\" bg=\"transparent\">\n\n              <Flex cursor=\"pointer\" align=\"center\" p=\"12px\"\n                borderRadius={\"10px\"}\n                bg={etat === true ? \"green.400\" : \"gray.400\"}\n                color={etat === false ? \"white\" : \"gray.700\"}\n              >\n                <Icon as={GiLoveInjection} me=\"4px\" />\n\n              </Flex>\n\n            </Button>\n          </Td>\n        </Tr>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onClose={() => { this.closeModal() }}\n        >\n          <ModalOverlay />\n          <ModalContent>\n\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <ModalHeader>Modifier la réservation</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={6}>\n                <FormControl >\n                  <FormLabel>Prénom</FormLabel>\n                  <Input defaultValue={firstname} onChange={(event) => this.handleChange(event, \"firstname\")} placeholder=\"Prénom\" />\n                  <FormLabel>Nom</FormLabel>\n                  <Input defaultValue={lastname} onChange={(event) => this.handleChange(event, \"lastname\")} placeholder=\"Nom\" />\n                  <FormLabel>Téléphone</FormLabel>\n                  <Input defaultValue={phone} onChange={(event) => this.handleChange(event, \"phone\")} placeholder=\"Téléphone\" />\n                  <FormLabel>Date</FormLabel>\n                  <Input type=\"date\" defaultValue={date} onChange={(event) => this.handleChange(event, \"date\")} placeholder=\"Date\" />\n                  <FormLabel>Heure</FormLabel>\n                  <Input defaultValue={heure} onChange={(event) => this.handleChange(event, \"heure\")} placeholder=\"Heure\" />\n                  <FormLabel>Statue</FormLabel>\n                  <Input defaultValue={result} onChange={(event) => this.handleChange(event, \"result\")} placeholder=\"Statue\" />\n                </FormControl>\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" colorScheme=\"blue\" mr={3}>\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModal() }} >Annuler</Button>\n\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n        <Modal\n          isOpen={this.state.modalIsOpenP}\n          onClose={() => { this.closeModalP() }}\n        >\n          <ModalOverlay />\n          <ModalContent>\n\n            <form id=\"form\" onSubmit={this.handleSubmit1} >\n              <ModalHeader>prélévement </ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={5}>\n                <FormControl>\n                  <FormLabel>Prénom</FormLabel>\n                  <Input defaultValue={firstname} onChange={(event) => this.handleChange(event, \"firstname\")} placeholder=\"Prénom\" />\n                  <FormLabel>Nom</FormLabel>\n                  <Input defaultValue={lastname} onChange={(event) => this.handleChange(event, \"lastname\")} placeholder=\"Nom\" />\n                  <FormLabel>Note</FormLabel>\n                  <Input defaultValue={this.state.note} onChange={(event) => this.handleChange(event, \"note\")} placeholder=\"note\" />\n                  <FormLabel>numéro Dignostique</FormLabel>\n                  <InputGroup size='md'>\n                    <Input value={this.state.generate} readOnly onChange={(event) => this.handleChange(event, \"numeroD\")} placeholder=\"numeroD\" >\n                    </Input>\n                    <InputRightElement width='4.5rem'>\n                      <Popover\n                        initialFocusRef={this.state.modalIsOpenQ}\n                        onOpen={() => { this.closeModalQ() }}\n                        placement='right'\n                        \n                        closeOnBlur={true}\n                      >\n                        <PopoverTrigger>\n                          <Button \n                           onClick={() => { this.generateQrCode() }}\n                            h='1.75rem' size='sm'\n                            mb={{ sm: \"10px\", md: \"0px\" }}\n                            me={{ md: \"12px\" }}\n                          >\n                           test\n                          </Button>\n                        </PopoverTrigger>\n\n                        <PopoverContent>\n                          <PopoverHeader fontWeight='semibold'>QR Code</PopoverHeader>\n                          <PopoverArrow />\n                          <PopoverCloseButton />\n                          <PopoverBody>\n                            Scaner le QR Code \n                            \n                            <Image src={this.state.imageUrl} ref={el => (this.componentRef = el)} />\n                            <br/>\n                           \n                    \n                          </PopoverBody>\n                          <PopoverFooter d='flex' justifyContent='flex-end'>\n                            <ButtonGroup size='sm'>\n                            <ReactToPrint\n          trigger={() => <a>Print this QRCode!</a>}\n          content={() => this.componentRef}\n        />\n       \n                            </ButtonGroup>\n                          </PopoverFooter>\n                        </PopoverContent>\n                      </Popover>\n\n\n                    </InputRightElement>\n                  </InputGroup>\n                </FormControl>\n              </ModalBody>\n              <ModalFooter>\n\n\n\n                <Button type=\"submit\" bg=\"#1daa3f\"\n                  _hover={{\n                    bg: \"#147a2c\",\n                  }}\n                  _active={{\n                    bg: \"#1daa3f\",\n                  }}\n                  mr={3}>\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModalP() }} >Annuler</Button>\n                {!this.state.generate && <Button onClick={this.codeGen}\n                  bg=\"#1daa3f\"\n                  _hover={{\n                    bg: \"#147a2c\",\n                  }}\n                  _active={{\n                    bg: \"#1daa3f\",\n                  }}\n                >\n                  Geree\n                </Button>}\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default TablesTableRow;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Calendar, dateFnsLocalizer ,momentLocalizer} from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport {\n  IconButton,\n  InputGroup,\n  InputLeftElement,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { SearchIcon } from \"@chakra-ui/icons\";\n\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Button,\n} from \"@chakra-ui/react\";\nimport axios from 'axios';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input,\n  Icon\n} from \"@chakra-ui/react\"\nimport {\n  FaPlus,\n} from \"react-icons/fa\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TablesTableRow from \"components/Tables/Table\";\n//const textColor = useColorModeValue(\"gray.700\", \"white\");\nclass Tables extends React.Component {\n\n  componentDidMount() {\n    axios.get(`https://interxpim.herokuapp.com/api/reservations/allReser`)\n      .then(res => {\n        const resdata = res.data;\n        this.setState({ resdata });\n        const date=[]\n        {\n          this.state.la.map((row) => {\n            date.push({title:row.firstname+\" \"+row.lastname,start:moment(new Date(row.date)).format(\"YYYY-MM-DD\"),end:moment(new Date(row.date) ).format(\"YYYY-MM-DD\")});\n  })\n  this.setState({ date });      \n  }\n      })\n    //window.location.reload(false);\n    axios.get(`https://interxpim.herokuapp.com/api/users/all`)\n      .then(res => {\n        const resdataU = res.data;\n        this.setState({ resdataU });\n      })\n    axios.get(`https://interxpim.herokuapp.com/api/prelevements/all`)\n      .then(res => {\n        const resdataP = res.data;\n        this.setState({ resdataP });\n      })\n      \n  }\n  constructor() {\n    super()\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      phone: '',\n      date: '',\n      heure: '',\n      hospital: '',\n      etata: '',\n      etat: '',\n      prelevement: '',\n      modalIsOpen: false,\n      resdata: [],\n      date:[],\n      resdataR: [],\n      resdataH: [],\n      l: [],\n      la: [],\n      resdataU: [],\n      resdataP: [],\n      yes: '',\n      no: '',\n      etatt: [],\n      keyWord: \"\",\n      statuuus:\"\"\n\n    }\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n\n  }\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const reservation = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phone: this.state.phone,\n      date: this.state.date,\n      heure: this.state.heure,\n      hospital: this.state.hospital,\n      prelevement: this.state.prelevement,\n    }\n    axios.post(`https://interxpim.herokuapp.com/api/reservations/createReser`, reservation)\n      .then(res => {\n        alert(\"Réservation Ajouté!\")\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  openModal() {\n    this.setState({\n      modalIsOpen: true,\n    });\n\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n\n}\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const keyWord = this.state.keyWord;\n    localStorage.setItem('keyWord', keyWord);\n    console.log(keyWord);\n    console.log(this.state.la);\n     const la= this.state.la.filter((datta)=>{\n    datta.firstname.toLowerCase().includes(this.state.keyWord)\n    ||\n    datta.lastname.toLowerCase().includes(this.state.keyWord)\n     }\n    // datta.firstname.toLowerCase().includes(this.state.keyWord)\n    )\n      console.log(la)\n      if(la.length==0){\n        this.setState({ la });\n         const statuuus = 'full'\n        this.setState({ statuuus });\n      } \n      else{\n        const statuuus = 'empty'\n        this.setState({ statuuus });\n      }\n     \n};\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n  affichage(){\n\n  }\n  render() {\n   \n    this.state.resdata.forEach(elementr => {\n      if (sessionStorage.getItem(\"role\") == \"Admin\") {\n        if (elementr.hospital == sessionStorage.getItem(\"id\")) {\n          this.state.l.push(elementr)\n          this.state.la = Array.from(new Set(this.state.l))\n\n          // console.log(Array.from(new Set(this.state.l)))\n        }\n      }\n      else if (sessionStorage.getItem(\"role\") == \"user\") {\n        if (elementr.hospital == sessionStorage.getItem(\"hospital\")) {\n          this.state.l.push(elementr)\n          this.state.la = Array.from(new Set(this.state.l))\n          // console.log(Array.from(new Set(this.state.l)))\n        }\n      }else if (sessionStorage.getItem(\"role\") == \"SupAdmin\"){\n        this.state.resdata.forEach(elementr => {\n         \n           \n              this.state.l.push(elementr)\n              this.state.la = Array.from(new Set(this.state.l))\n        })\n    \n      }\n      else {\n        if (elementr.user == sessionStorage.getItem(\"id\")) {\n          this.state.l.push(elementr)\n          this.state.la = Array.from(new Set(this.state.l))\n          // console.log(Array.from(new Set(this.state.l)))\n        }\n      }\n    })\n\n    this.state.resdataP.forEach(elemtentp => {\n      console.log(elemtentp)\n      if (elemtentp.etat) {\n        this.state.etat = \"true\"\n      } else {\n        this.state.etat = \"false\"\n      }\n    })\n    const localizer = momentLocalizer(moment)\n \n\n\n    return (\n      <>\n        <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Flex justify=\"space-between\" align=\"center\" mb=\"1rem\" w=\"100%\">\n                <Text fontSize=\"xl\" color=\"gray.700\" fontWeight=\"bold\">\n                  Liste des réservations\n                </Text>\n                <InputGroup\n      bg={\"gray.200\"}\n      borderRadius=\"15px\"\n      w=\"200px\"\n      _focus={{\n        borderColor: \"teal.300\",\n      }}\n      _active={{\n        borderColor: \"teal.300\",\n      }}\n    >\n      <InputLeftElement\n        children={\n          <IconButton\n            bg=\"inherit\"\n            borderRadius=\"inherit\"\n            _hover=\"none\"\n            _active={{\n              bg: \"inherit\",\n              transform: \"none\",\n              borderColor: \"transparent\",\n            }}\n            _focus={{\n              boxShadow: \"none\",\n            }}\n            icon={<SearchIcon color={\"gray.800\"} w=\"15px\" h=\"15px\" />}\n          ></IconButton>\n        }\n      />\n      <form style={{marginLeft: \"15px\"}}  onSubmit={this.handleSubmit}>\n        \n                  <Input\n                  onChange={(event) => this.handleChange(event, \"keyWord\")}\n                  type=\"text\"\n        fontSize=\"xs\"\n        py=\"11px\"\n        placeholder=\"         Rechercher\"\n      />\n    \n         \n               \n\n            </form>\n     \n    </InputGroup>\n               {/*  <Button\n                  colorScheme=\"#1daa3f\"\n                  borderColor=\"#1daa3f\"\n                  color=\"#1daa3f\"\n                  variant=\"outline\"\n                  fontSize=\"xs\"\n                  p=\"8px 32px\"\n                  onClick={() => { this.openModal() }}\n                >\n                  <Icon as={FaPlus} me=\"6px\" />\n                  Ajouter une réservation\n                </Button>\n                */}\n              </Flex>\n            </CardHeader>\n            <Calendar localizer={localizer} events={this.state.date} startAccessor=\"start\"   eventPropGetter={(event, start, end, isSelected) => ({\n          event,\n          start,\n          end,\n          isSelected,\n          style: { backgroundColor: \"green\" }\n        })} style={{ colorRendering :\"green\", height: 500, margin: \"50px\" }} />\n            <CardBody>\n            {this.state.statuuus != 'full'  ? \n              <Table variant=\"simple\" color=\"gray.700\">\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">\n                      Nom et prénom\n                    </Th>\n                    <Th color=\"gray.400\">Date</Th>\n                    <Th color=\"gray.400\">Heure</Th>\n                    <Th color=\"gray.400\">Statue</Th>\n                    <Th color=\"gray.400\">Actions</Th>\n                    <Th color=\"gray.400\">Prelevement</Th>\n\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {this.state.la.map((row) => {\n                   \n\n\n                      return (\n\n                        <TablesTableRow\n                          id={row._id}\n                          firstname={row.firstname}\n                          lastname={row.lastname}\n                          date={row.date}\n                          heure={row.heure}\n                          phone={row.phone}\n                          result={row.result}\n                          etat={row.etat}\n                          idp={row.prelevement}\n\n                        />\n\n                      );\n                    \n\n\n\n                  })}\n\n                </Tbody>\n\n              </Table>\n              :\n              <Text>Aucune réservation trouvé</Text>\n                }\n            </CardBody>\n          </Card>\n\n        </Flex>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onClose={() => { this.closeModal() }}\n        >\n          <ModalOverlay />\n          <ModalContent>\n\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <ModalHeader>Ajouter une réservation</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={6}>\n                <FormControl>\n                  <FormLabel>Prénom</FormLabel>\n                  <Input onChange={(event) => this.handleChange(event, \"firstname\")} placeholder=\"Prénom\" />\n                  <FormLabel>Nom</FormLabel>\n                  <Input onChange={(event) => this.handleChange(event, \"lastname\")} placeholder=\"Nom\" />\n                  <FormLabel>Téléphone</FormLabel>\n                  <Input onChange={(event) => this.handleChange(event, \"phone\")} placeholder=\"Téléphone\" />\n                  <FormLabel>Date</FormLabel>\n                  <Input type=\"date\" onChange={(event) => this.handleChange(event, \"date\")} placeholder=\"Date\" />\n                  <FormLabel>Heure</FormLabel>\n                  <Input onChange={(event) => this.handleChange(event, \"heure\")} placeholder=\"Heure\" />\n                </FormControl>\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" colorScheme=\"blue\" mr={3}>\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModal() }} >Annuler</Button>\n\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n      </>\n    )\n  }\n}\nexport default Tables;\n","import {\n  Icon,\n  Badge,\n  Button,\n  Flex,\n  Td,\n  Text,\n  Tr,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport axios from 'axios';\nimport moment from \"moment\";\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n  ButtonGroup,\n} from '@chakra-ui/react'\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input\n} from \"@chakra-ui/react\"\nimport React from \"react\";\nimport { GiLoveInjection } from \"react-icons/gi\";\nimport { FaPencilAlt, FaTrashAlt } from \"react-icons/fa\";\nimport { date } from \"yup\";\nclass TablesTableRow extends React.Component {\n\n  componentDidMount() {\n\n    const { firstname, lastname, date, heure, phone, result, id, idp, etat } = this.props;\n    this.setState({ firstname });\n    this.setState({ lastname });\n    this.setState({ date });\n    this.setState({ heure });\n    this.setState({ phone });\n    this.setState({ result });\n    this.setState({ idp });\n    this.setState({ etat });\n    axios.get(`https://interxpim.herokuapp.com/api/prelevements/all`)\n      .then(res => {\n        const resdataP = res.data;\n        this.setState({ resdataP });\n        //console.log(resdataP)\n        this.state.etat = res.data.etat\n\n      })\n    axios.post(\"https://interxpim.herokuapp.com/api/prelevements/show\", {\n      _id: this.props.idp,\n    }).then((response) => {\n\n      if (!response.data.message) {\n        // console.log(response.data.note)\n        this.state.note = response.data.note\n        this.state.numeroD = response.data.numeroD\n      }\n    })\n    // console.log(\"prelevement nest pas efectue\")\n  }\n  constructor(props) {\n\n\n    super(props);\n    this.state = {\n      result: '',\n      firstname: '',\n      lastname: '',\n      phone: '',\n      date: '',\n      heure: '',\n      hospital: '',\n      etat: '',\n      note: '',\n      date: Date.now(),\n      numeroD: '',\n      modalIsOpen: false,\n      modalIsOpenP: false,\n      resdataP: [],\n      pref: [],\n      list: []\n    }\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n\n  }\n  delete = async () => {\n    const reservation = {\n      _id: this.props.id\n    }\n    axios.put(`https://interxpim.herokuapp.com/api/reservations/deleteReser`, reservation)\n      .then(res => {\n\n        alert(\"Réservation supprimé!\")\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Erreur!\");\n\n      })\n  }\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const reservation = {\n      _id: this.props.id,\n      result: this.state.result,\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phone: this.state.phone,\n      date: this.state.date,\n      heure: this.state.heure,\n      hospital: this.state.hospital,\n      etat: this.state.etat\n\n    }\n    axios.put(`https://interxpim.herokuapp.com/api/reservations/updateReser`, reservation)\n      .then(res => {\n\n        alert(\"Réservation modifié!\")\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  handleSubmit1 = async (event) => {\n\n    event.preventDefault();\n    const prelevement = {\n      _id: this.props.idp,\n      etat: this.state.etat,\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      date: this.state.date,\n      numeroD: this.state.numeroD,\n      note: this.state.note,\n      reservation: this.state.id1\n\n    }\n    const reservation = {\n      _id: this.props.id,\n      etat: this.state.etat\n\n    }\n    // console.log(this.pref._id)\n    axios.put(`https://interxpim.herokuapp.com/api/prelevements/updatePrev`, prelevement)\n      .then(res => {\n\n       // alert(\"prelevement modifié!\")\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n\n      })\n    reservation.etat = true\n    axios.put(`https://interxpim.herokuapp.com/api/reservations/updateEtat`, reservation).then(\n      res => {\n        //  alert(\"prelevement modifié!\")\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n      }\n      )\n  }\n\n  openModal(id1) {\n    this.setState({\n      modalIsOpen: true,\n      id: id1\n    });\n\n    /*axios.post(\"https://interxpim.herokuapp.com/api/prelevement/show\", {\n\n      id: id1,\n\n      password: password,\n    }).then((response) => {\n\n      if (!response.data.message) {\n        // setLoginStatus( response.data.message);\n        if (response.data.role == \"Admin\" && isMail) {\n        }}})*/\n  }\n  openModal2(id2) {\n    this.setState({\n      modalIsOpenP: true,\n      id: id2\n    });\n    axios.post(\"https://interxpim.herokuapp.com/api/prelevements/show\", {\n\n      _id: this.props.idp,\n    }).then((response) => {\n\n      if (!response.data.message) {\n        console.log(response.data.note)\n        this.state.note = response.data.note\n        this.state.numeroD = response.data.numeroD\n\n      }\n    })\n    //console.log(id2)\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n  closeModalP() {\n    this.setState({\n      modalIsOpenP: false,\n\n    });\n  }\n\n  render() {\n\n    // console.log(this.state.list.etat)\n    /* console.log(elementr.etat)\n    // this.state.etat=elementr.etat\n     //console.log(this.state.etat)\n   })*/\n\n\n    const { firstname, lastname, date, heure, phone, result, id, idp, etat } = this.props;\n    //console.log(this.props.etatyes)\n    return (\n      <>\n\n        <Tr>\n          <Td >\n            <Flex align=\"center\" >\n              <Flex direction=\"column\">\n                <Text\n                  fontSize=\"md\"\n                  color=\"gray.700\"\n                  fontWeight=\"bold\"\n                >\n                  {lastname} {firstname}\n                </Text>\n              </Flex>\n            </Flex>\n          </Td>\n\n          <Td>\n            <Flex direction=\"column\">\n              <Text fontSize=\"md\" color=\"gray.700\" fontWeight=\"bold\">\n                {moment(date).utc().format('DD/MM/YYYY').toString()}\n              </Text>\n            </Flex>\n          </Td>\n\n          <Td>\n            <Text fontSize=\"md\" color=\"gray.700\" fontWeight=\"bold\" pb=\".5rem\">\n              {heure}\n            </Text>\n          </Td>\n          <Td>\n            <Text fontSize=\"md\" color=\"gray.700\" fontWeight=\"bold\" pb=\".5rem\">\n              {phone}\n            </Text>\n          </Td>\n          <Td>\n            <Badge\n              bg={result === \"Traité\" ? \"green.400\" : \"gray.400\"}\n              color={result === \"Non traité\" ? \"white\" : \"gray.700\"}\n              fontSize=\"16px\"\n              p=\"3px 10px\"\n              borderRadius=\"8px\"\n            >\n              {result.toString()}\n            </Badge>\n          </Td>\n          <Td>\n            <Flex\n              direction={{ sm: \"column\", md: \"row\" }}\n              align=\"flex-start\"\n              p={{ md: \"24px\" }}\n            >\n              <Popover\n                initialFocusRef={this.state.modalIsOpen}\n                onClose={() => { this.closeModal() }}\n                placement='right'\n                closeOnBlur={true}\n              >\n                <PopoverTrigger>\n                  <Button\n                    p=\"0px\"\n                    bg=\"transparent\"\n                    mb={{ sm: \"10px\", md: \"0px\" }}\n                    me={{ md: \"12px\" }}\n                  >\n                    <Flex color=\"red.500\" cursor=\"pointer\" align=\"center\" p=\"12px\">\n                      <Icon as={FaTrashAlt} me=\"4px\" />\n                    </Flex>\n                  </Button>\n                </PopoverTrigger>\n\n                <PopoverContent>\n                  <PopoverHeader fontWeight='semibold'>Confirmation</PopoverHeader>\n                  <PopoverArrow />\n                  <PopoverCloseButton />\n                  <PopoverBody>\n                    Êtes-vous sûr de vouloir continuer votre action ?\n                  </PopoverBody>\n                  <PopoverFooter d='flex' justifyContent='flex-end'>\n                    <ButtonGroup size='sm'>\n                      <Button onClick={() => { this.delete() }} colorScheme='red'>Valider</Button>\n                    </ButtonGroup>\n                  </PopoverFooter>\n                </PopoverContent>\n              </Popover>\n\n\n              <Button onClick={() => { this.openModal(id) }} p=\"0px\" bg=\"transparent\">\n\n                <Flex color=\"gray.700\" cursor=\"pointer\" align=\"center\" p=\"12px\">\n                  <Icon as={FaPencilAlt} me=\"4px\" />\n                </Flex>\n              </Button>\n            </Flex>\n          </Td>\n         \n        </Tr>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onClose={() => { this.closeModal() }}\n        >\n          <ModalOverlay />\n          <ModalContent>\n\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <ModalHeader>Modifier la réservation</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={6}>\n                <FormControl>\n                  <FormLabel>Prénom</FormLabel>\n                  <Input defaultValue={firstname} onChange={(event) => this.handleChange(event, \"firstname\")} placeholder=\"Prénom\" />\n                  <FormLabel>Nom</FormLabel>\n                  <Input defaultValue={lastname} onChange={(event) => this.handleChange(event, \"lastname\")} placeholder=\"Nom\" />\n                  <FormLabel>Téléphone</FormLabel>\n                  <Input defaultValue={phone} onChange={(event) => this.handleChange(event, \"phone\")} placeholder=\"Téléphone\" />\n                  <FormLabel>Date</FormLabel>\n                  <Input type=\"date\" defaultValue={date} onChange={(event) => this.handleChange(event, \"date\")} placeholder=\"Date\" />\n                  <FormLabel>Heure</FormLabel>\n                  <Input defaultValue={heure} onChange={(event) => this.handleChange(event, \"heure\")} placeholder=\"Heure\" />\n                  <FormLabel>Statue</FormLabel>\n                  <Input defaultValue={result} onChange={(event) => this.handleChange(event, \"result\")} placeholder=\"Statue\" />\n                </FormControl>\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" colorScheme=\"blue\" mr={3}>\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModal() }} >Annuler</Button>\n\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n        <Modal\n          isOpen={this.state.modalIsOpenP}\n          onClose={() => { this.closeModalP() }}\n        >\n          <ModalOverlay />\n          <ModalContent>\n\n            <form id=\"form\" onSubmit={this.handleSubmit1}>\n              <ModalHeader>prélévement </ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={5}>\n                <FormControl>\n                  <FormLabel>Prénom</FormLabel>\n                  <Input defaultValue={firstname} onChange={(event) => this.handleChange(event, \"firstname\")} placeholder=\"Prénom\" />\n                  <FormLabel>Nom</FormLabel>\n                  <Input defaultValue={lastname} onChange={(event) => this.handleChange(event, \"lastname\")} placeholder=\"Nom\" />\n                  <FormLabel>Note</FormLabel>\n                  <Input defaultValue={this.state.note} onChange={(event) => this.handleChange(event, \"note\")} placeholder=\"note\" />\n                  <FormLabel>numéro Dignostique</FormLabel>\n               \n                  <Input defaultValue={this.state.numeroD} onChange={(event) => this.handleChange(event, \"numeroD\")} placeholder=\"numeroD\" />\n                  \n             \n                </FormControl>\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" colorScheme=\"blue\" mr={3}>\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModalP() }} >Annuler</Button>\n\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default TablesTableRow;\n","import React from \"react\";\nimport moment from \"moment\";\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Button,\n} from \"@chakra-ui/react\";\nimport axios from 'axios';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Select,\n  Input,\n  Icon\n} from \"@chakra-ui/react\"\nimport {\n  FaPlus,\n} from \"react-icons/fa\";\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TablesTableRow from \"components/Tables/TableP\";\n//const textColor = useColorModeValue(\"gray.700\", \"white\");\nclass Tables extends React.Component {\n\n  componentDidMount() {\n    axios.get(`https://interxpim.herokuapp.com/api/hospital/allRes`,{_id:this.state._id})\n      .then(res => {\n        const resdata = res.data;\n        this.setState({ resdata });\n      })\n    //window.location.reload(false);\n    axios.get(`https://interxpim.herokuapp.com/api/users/all`)\n      .then(res => {\n        const resdataU = res.data;\n        this.setState({ resdataU });\n      })\n      axios.get(`https://interxpim.herokuapp.com/api/hospital/all`)\n      .then(res => {\n        const resdataH = res.data;\n        this.setState({ resdataH });\n      })\n  }\n  constructor() {\n    super()\n\n    this.state = {\n      _id:'',\n      firstname: '',\n      lastname: '',\n      phone: '',\n      date: '',\n      heure: '',\n      hospital: '',\n      nomHospital:'',\n      modalIsOpen: false,\n      resdata: [],\n      resdataR: [],\n      resdataH: [],\n      \n      l: [],\n      la: [],\n      resdataU: [],\n    }\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n\n  }\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const reservation = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phone: this.state.phone,\n      date: this.state.date,\n      heure: this.state.heure,\n      hospital: this.state.hospital,\n    }\n    axios.post(`https://interxpim.herokuapp.com/api/reservations/createReser`, reservation)\n      .then(res => {\n        alert(\"Réservation Ajouté!\")\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  openModal() {\n    this.setState({\n      modalIsOpen: true,\n    });\n\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n  render() {\n    this.state.resdataH.forEach(element => {\n      console.log(element);\n    })\n\n    this.state.resdata.forEach(elementr => {\n      if (sessionStorage.getItem(\"role\") == \"Admin\") {\n        if (elementr.hospital == sessionStorage.getItem(\"id\")) {\n          this.state.l.push(elementr)\n          this.state.la = Array.from(new Set(this.state.l))\n          // console.log(Array.from(new Set(this.state.l)))\n        }\n      }\n      else if (sessionStorage.getItem(\"role\") == \"user\") {\n        if (elementr.hospital == sessionStorage.getItem(\"hospital\")) {\n          this.state.l.push(elementr)\n          this.state.la = Array.from(new Set(this.state.l))\n          // console.log(Array.from(new Set(this.state.l)))\n        }\n      }\n      else {\n        if (elementr.user == sessionStorage.getItem(\"id\")) {\n          this.state.l.push(elementr)\n          this.state.la = Array.from(new Set(this.state.l))\n          // console.log(Array.from(new Set(this.state.l)))\n        }\n      }\n    })\n\n\n\n    return (\n      <>\n        <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Flex justify=\"space-between\" align=\"center\" mb=\"1rem\" w=\"100%\">\n                <Text fontSize=\"xl\" color=\"gray.700\" fontWeight=\"bold\">\n                  Liste des réservations\n                </Text>\n                <Button\n                  colorScheme=\"#1daa3f\"\n                  borderColor=\"#1daa3f\"\n                  color=\"#1daa3f\"\n                  variant=\"outline\"\n                  fontSize=\"xs\"\n                  p=\"8px 32px\"\n                  onClick={() => { this.openModal() }}\n                >\n                  <Icon as={FaPlus} me=\"6px\" />\n                  Ajouter une réservation\n                </Button>\n              </Flex>\n            </CardHeader>\n            <CardBody>\n              <Table variant=\"simple\" color=\"gray.700\">\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th color=\"gray.400\">\n                      Nom et prénom\n                    </Th>\n                    <Th color=\"gray.400\">Date</Th>\n                    <Th color=\"gray.400\">Heure</Th>\n                    <Th color=\"gray.400\">Statue</Th>\n                    <Th color=\"gray.400\">Actions</Th>\n                    <Th></Th>\n\n                  </Tr>\n                </Thead>\n                <Tbody>\n\n                  {this.state.resdata.map((row) => {\n\n                    return (\n                      <TablesTableRow\n                        id={row._id}\n                        firstname={row.firstname}\n                        lastname={row.lastname}\n                        date={row.date}\n                        heure={row.heure}\n                        result={row.result}\n                      />\n                    );\n\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n\n        </Flex>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onClose={() => { this.closeModal() }}\n        >\n          <ModalOverlay />\n          <ModalContent>\n\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <ModalHeader>Ajouter une réservation</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={6}>\n                <FormControl>\n                  <FormLabel>Prénom</FormLabel>\n                  <Input onChange={(event) => this.handleChange(event, \"firstname\")} defaultValue={sessionStorage.getItem(\"firstname\")} placeholder=\"Prénom\" />\n                  <FormLabel>Nom</FormLabel>\n                  <Input onChange={(event) => this.handleChange(event, \"lastname\")} defaultValue={sessionStorage.getItem(\"lastname\")} placeholder=\"Nom\" />\n                  <FormLabel>Téléphone</FormLabel>\n                  <Input onChange={(event) => this.handleChange(event, \"phone\")} defaultValue={sessionStorage.getItem(\"phone\")} placeholder=\"Téléphone\" />\n                  <FormLabel>Date</FormLabel>\n                  <Input type=\"date\" onChange={(event) => this.handleChange(event, \"date\")} placeholder=\"Date\" />\n                  <FormLabel>Heure</FormLabel>\n                  <Input onChange={(event) => this.handleChange(event, \"heure\")} placeholder=\"Heure\" />\n                  \n                </FormControl>\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" colorScheme=\"blue\" mr={3}>\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModal() }} >Annuler</Button>\n\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n      </>\n    )\n  }\n}\nexport default Tables;\n","\nimport {\n  Avatar,\n  Badge,\n  Button,\n  Icon,\n  Flex,\n  Td,\n  InputGroup,\n  InputLeftElement,\n  Text,\n  Select,\n  Tr,\n} from \"@chakra-ui/react\";\nimport { Checkbox, CheckboxGroup } from '@chakra-ui/react'\nimport React from \"react\";\nimport {\n  AiOutlineFontColors,\n  AiFillPhone,\n  AiOutlineEnvironment,\n  AiOutlineMail,\n  AiTwotoneCalendar\n} from \"react-icons/ai\";\nimport { FaPencilAlt, FaTrashAlt } from \"react-icons/fa\";\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n  ButtonGroup,\n} from '@chakra-ui/react'\n\nimport axios from 'axios';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input\n} from \"@chakra-ui/react\"\nclass TablesTableRowHospital extends React.Component {\n\n\n\n  componentDidMount() {\n    const { nomHospital, addresseHospital, phoneHospital, faxHospital, email, id } = this.props;\n    this.setState({ nomHospital });\n    this.setState({ addresseHospital });\n    this.setState({ phoneHospital });\n    this.setState({ faxHospital });\n    this.setState({ email });\n    this.setState({ id });\n\n  }\n\n  constructor(props) {\n\n\n    super(props);\n    this.state = {\n      nomHospital: '',\n      addresseHospital: '',\n      phoneHospital: '',\n      faxHospital: '',\n      email: '',\n      id: '',\n      modalIsOpen: false,\n    }\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n\n  }\n\n  delete = async () => {\n    const hospital = {\n      _id: this.props.id\n    }\n    axios.post(`https://interxpim.herokuapp.com/api/hospital/delete`, hospital)\n      .then(res => {\n\n        /*alert(\"user supprimé!\")*/\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Erreur!\");\n\n      })\n  }\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const hospital = {\n      _id: this.props.id,\n      nomHospital: this.state.nomHospital,\n      addresseHospital: this.state.addresseHospital,\n      phoneHospital: this.state.phoneHospital,\n      faxHospital: this.state.faxHospital,\n      email: this.state.email,\n\n\n    }\n    axios.post(`https://interxpim.herokuapp.com/api/hospital/update`, hospital)\n      .then(res => {\n\n\n        window.location.reload(false);\n\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  openModal(id1) {\n    this.setState({\n      modalIsOpen: true,\n      id: id1\n    });\n\n  }\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n  render() {\n    const { nomHospital, addresseHospital, phoneHospital, faxHospital, email, id } = this.props;\n    // console.log(sendemail)\n    //console.log(sendsms)\n\n    return (\n      <>\n        <Tr>\n          <Td minWidth={{ sm: \"250px\" }} pl=\"0px\">\n            <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n\n              <Flex direction=\"column\">\n                <Text\n                  fontSize=\"md\"\n                  color={\"gray.700\"}\n                  fontWeight=\"bold\"\n                  minWidth=\"100%\"\n                >\n                  {nomHospital}\n                </Text>\n                <Text fontSize=\"sm\" color=\"gray.400\" fontWeight=\"normal\">\n                  {email}\n                </Text>\n              </Flex>\n            </Flex>\n          </Td>\n\n\n\n          <Td>\n            <Flex direction=\"column\">\n              <Text fontSize=\"md\" color={\"gray.700\"} fontWeight=\"bold\">\n                {phoneHospital}\n              </Text>\n\n            </Flex>\n          </Td>\n          <Td>\n            <Flex direction=\"column\">\n              <Text fontSize=\"md\" color={\"gray.700\"} fontWeight=\"bold\">\n                {faxHospital}\n              </Text>\n\n            </Flex>\n          </Td>\n          <Td>\n            <Flex direction=\"column\">\n              <Text fontSize=\"md\" color={\"gray.700\"} fontWeight=\"bold\">\n                {addresseHospital}\n              </Text>\n\n            </Flex>\n          </Td>\n\n\n\n\n          <Td>\n            <Flex\n              direction={{ sm: \"column\", md: \"row\" }}\n              align=\"flex-start\"\n              p={{ md: \"24px\" }}\n            >\n              <Popover\n                initialFocusRef={this.state.modalIsOpen}\n                onClose={() => { this.closeModal() }}\n                placement='right'\n                closeOnBlur={true}\n              >\n                <PopoverTrigger>\n                  <Button\n                    p=\"0px\"\n                    bg=\"transparent\"\n                    mb={{ sm: \"10px\", md: \"0px\" }}\n                    me={{ md: \"12px\" }}\n                  >\n                    <Flex color=\"red.500\" cursor=\"pointer\" align=\"center\" p=\"12px\">\n                      <Icon as={FaTrashAlt} me=\"4px\" />\n                    </Flex>\n                  </Button>\n                </PopoverTrigger>\n\n                <PopoverContent>\n                  <PopoverHeader fontWeight='semibold'>Confirmation</PopoverHeader>\n                  <PopoverArrow />\n                  <PopoverCloseButton />\n                  <PopoverBody>\n                    Êtes-vous sûr de vouloir continuer votre action ?\n                  </PopoverBody>\n                  <PopoverFooter d='flex' justifyContent='flex-end'>\n                    <ButtonGroup size='sm'>\n                      <Button onClick={() => { this.delete() }} colorScheme='red'>Valider</Button>\n                    </ButtonGroup>\n                  </PopoverFooter>\n                </PopoverContent>\n              </Popover>\n\n\n              <Button onClick={() => { this.openModal(id) }} p=\"0px\" bg=\"transparent\">\n                <Flex color=\"gray.700\" cursor=\"pointer\" align=\"center\" p=\"12px\">\n                  <Icon as={FaPencilAlt} me=\"4px\" />\n                </Flex>\n              </Button>\n            </Flex>\n          </Td>\n\n\n        </Tr >\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onClose={() => { this.closeModal() }}>\n          <ModalOverlay />\n          <ModalContent>\n            <form onSubmit={this.handleSubmit}>\n\n              <ModalHeader>Modifier Hospital</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={5}>\n                <FormControl>\n                  <FormLabel>Nom Hospital :</FormLabel>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiOutlineFontColors color='gray.300' />}\n                      />\n                      <Input defaultValue={nomHospital} onChange={(event) => this.handleChange(event, \"nomHospital\")} placeholder=\"Nom Hospital\" />\n                    </InputGroup>\n                  </Flex>\n                  <FormLabel>Email Hospital :</FormLabel>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiFillPhone color='gray.300' />}\n                      />\n                      <Input defaultValue={email} onChange={(event) => this.handleChange(event, \"email\")} placeholder=\"Email Hospital\" />\n                    </InputGroup>\n\n\n                  </Flex>\n                  <FormLabel>Phone Hospital :</FormLabel>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiFillPhone color='gray.300' />}\n                      />\n                      <Input defaultValue={phoneHospital} onChange={(event) => this.handleChange(event, \"phoneHospital\")} placeholder=\"Phone Hospital\" />\n                    </InputGroup>\n\n\n                  </Flex>\n                  <FormLabel>Fax Hospital :</FormLabel>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiFillPhone color='gray.300' />}\n                      />\n                      <Input defaultValue={faxHospital} onChange={(event) => this.handleChange(event, \"faxHospital\")} placeholder=\"Fax Hospital\" />\n                    </InputGroup>\n\n\n                  </Flex>\n                  <FormLabel>Adresse Hospital :</FormLabel>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiFillPhone color='gray.300' />}\n                      />\n                      <Input defaultValue={addresseHospital} onChange={(event) => this.handleChange(event, \"addresseHospital\")} placeholder=\"Adresse Hospital\" />\n                    </InputGroup>\n\n\n                  </Flex>\n\n                </FormControl>\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" bg=\"teal.300\"\n                  color=\"white\" mr={4}>\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModal() }} >Annuler</Button>\n\n              </ModalFooter>\n            </form>\n\n          </ModalContent>\n        </Modal>\n\n      </>\n    );\n  }\n}\n\nexport default TablesTableRowHospital;\n","\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Checkbox, CheckboxGroup } from '@chakra-ui/react'\nimport { useToast } from '@chakra-ui/react'\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Input,\n  InputGroup,\n  Select,\n  InputLeftElement,\n  Icon,\n  Button,\n} from \"@chakra-ui/react\";\nimport {\n  FaPlus,\n} from \"react-icons/fa\";\nimport {\n  AiOutlineFontColors,\n  AiFillPhone,\n  AiOutlineEnvironment,\n  AiOutlineMail,\n  AiTwotoneCalendar\n} from \"react-icons/ai\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n} from \"@chakra-ui/react\"\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TablesTableRowHospital from \"components/Tables/TablesTableRowHospital\";\n\nclass Hospitals extends React.Component {\n\n\n  componentDidMount() {\n    axios.get(`https://interxpim.herokuapp.com/api/hospital/all`)\n      .then(res => {\n        const resdata = res.data;\n        this.setState({ resdata });\n      })\n  }\n  constructor() {\n    super()\n\n    this.state = {\n      nomHospital: '',\n      addresseHospital: '',\n      phoneHospital: '',\n      email: '',\n      //password:'',\n      faxHospital: '',\n      sendsms: false,\n      sendemail: false,\n      modalIsOpen: false,\n      resdata: []\n    }\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n  }\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const hospital = {\n      nomHospital: this.state.nomHospital,\n      addresseHospital: this.state.addresseHospital,\n      phoneHospital: this.state.phoneHospital,\n      email: this.state.email,\n      faxHospital: this.state.faxHospital,\n      //password:this.state.password,\n\n\n    }\n    \n    axios.post(\"https://interxpim.herokuapp.com/api/hospital/registerAdmin\", hospital)\n      .then(res => {\n        //alert(user.firstname)\n        window.location.reload(false);\n      }).catch(error => {\n        console.log(user)\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  openModal() {\n    this.setState({\n      modalIsOpen: true,\n    });\n\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n\n  render() {\n\n\n    return (\n      <>\n        <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Flex justify=\"space-between\" align=\"center\" mb=\"1rem\" w=\"100%\">\n                <Text fontSize=\"xl\" color={\"gray.700\"} fontWeight=\"bold\">\n                  Liste des Hospital\n                </Text>\n                <Button\n                  colorScheme=\"#1daa3f\"\n                  borderColor=\"#1daa3f\"\n                  color=\"#1daa3f\"\n                  variant=\"outline\"\n                  fontSize=\"xs\"\n                  p=\"8px 32px\"\n                  onClick={() => { this.openModal() }}\n                >\n                  <Icon as={FaPlus} me=\"6px\" />\n                  Ajouter un hospital\n                </Button>\n              </Flex>\n\n            </CardHeader>\n\n            <CardBody>\n              <Table variant=\"simple\" color={\"gray.700\"}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n\n                    <Th color=\"#1daa3\">Hospital </Th>\n                    <Th color=\"#1daa3\">Phone</Th>\n\n                    <Th color=\"#1daa3\">faxHospital</Th>\n                    <Th color=\"#1daa3\">addresseHospital</Th>\n                    <Th color=\"#1daa3\">Action</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {this.state.resdata.map((row) => {\n\n                    return (\n                      <TablesTableRowHospital\n                        id={row._id}\n                        email={row.email}\n                        nomHospital={row.nomHospital}\n                        addresseHospital={row.addresseHospital}\n                        phoneHospital={row.phoneHospital}\n                        faxHospital={row.faxHospital}\n                      />\n                    );\n\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n          <Card\n            my=\"22px\"\n            overflowX={{ sm: \"scroll\", xl: \"hidden\" }}\n          >\n          </Card>\n        </Flex>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onClose={() => { this.closeModal() }}\n        >\n          <ModalOverlay />\n          <ModalContent>\n\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <ModalHeader>Ajouter un hopitale</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={5}>\n                <FormControl>\n                  <FormLabel>Nom Hospital</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiOutlineFontColors color='gray.300' />}\n                    />\n                    <Input\n                      onChange={(event) => this.handleChange(event, \"nomHospital\")}\n                      placeholder=\"nom Hospital\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\" />\n                  </InputGroup>\n\n\n\n                  <FormLabel>Email</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiOutlineMail color='gray.300' />}\n                    />\n                    <Input\n                      type=\"email\"\n                      onChange={(event) => this.handleChange(event, \"email\")}\n                      placeholder=\"email\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\" />\n                  </InputGroup>\n                  <FormLabel>Adresse</FormLabel>\n                  <Input\n                    onChange={(event) => this.handleChange(event, \"addresseHospital\")}\n                    placeholder=\"addresse\"\n                    borderColor=\"gray.400\"\n                    focusBorderColor=\"#1daa3f\" />\n                    <FormLabel>Phone</FormLabel>\n                    <Input\n                      onChange={(event) => this.handleChange(event, \"phoneHospital\")}\n                      placeholder=\"phone\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\" />\n                    \n                    <FormLabel>Fax</FormLabel>\n                    <Input\n                      onChange={(event) => this.handleChange(event, \"faxHospital\")}\n                      placeholder=\"Fax\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\" />\n                    <Flex\n                      direction={{ sm: \"column\", md: \"row\" }}\n                      align=\"center\"\n                      w=\"100%\"\n                      justify=\"center\"\n                      py=\"1rem\"\n                      padding=\"2px\"\n                    ></Flex>\n\n            \n\n                  \n\n                </FormControl>\n\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" bg=\"#1daa3f\"\n                  color=\"white\" mr={3}\n                  _hover={{\n                    bg: \"#147a2c\",\n                  }}\n                  _active={{\n                    bg: \"#1daa3f\",\n                  }}\n                >\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModal() }} bg=\"gray.400\">Annuler</Button>\n\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default Hospitals;\n","import {\n  Avatar,\n  Badge,\n  Button,\n  Icon,\n  Flex,\n  Td,\n  InputGroup,\n  InputLeftElement,\n  Text,\n  Select,\n  Tr,\n} from \"@chakra-ui/react\";\nimport { Checkbox, CheckboxGroup } from '@chakra-ui/react'\nimport React from \"react\";\nimport {\n  AiOutlineFontColors,\n  AiFillPhone,\n  AiOutlineEnvironment,\n  AiOutlineMail,\n  AiTwotoneCalendar\n} from \"react-icons/ai\";\nimport { FaPencilAlt, FaTrashAlt } from \"react-icons/fa\";\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n  ButtonGroup,\n} from '@chakra-ui/react'\n\nimport axios from 'axios';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input\n} from \"@chakra-ui/react\"\nclass TablesTableRowUser extends React.Component {\n  componentDidMount() {\n    const { sendsms,sendemail,firstname, lastname, phone, age, email, birthday, gender, situationF, id ,hospital } = this.props;\n    this.setState({ firstname });\n    this.setState({ lastname });\n    this.setState({ phone });\n    this.setState({ age });\n    this.setState({ email });\n    this.setState({ birthday });\n    this.setState({ gender });\n    this.setState({ situationF });\n    this.setState({ id });\n    this.setState({sendemail});\n    this.setState({sendsms});\n    this.setState({hospital})\n  }\n\n  constructor(props) {\n\n\n    super(props);\n    this.state = {\n      firstname: '',\n      lastname: '',\n      phone: '',\n      age: '',\n      email: '',\n      birthday: '',\n      gender: '',\n      situationF: '',\n      hospital:'',\n      sendemail:true,\n      sendsms:true,\n      modalIsOpen: false,\n    }\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n   \n  }\n  handleCheck(evt, field) {\n    this.setState({ [field]: evt.target.checked });\n   console.log(evt.target.checked)\n  }\n  delete = async () => {\n    const user = {\n      _id: this.props.id\n    }\n    axios.post(`https://interxpim.herokuapp.com/api/users/delete`, user)\n      .then(res => {\n\n        /*alert(\"user supprimé!\")*/\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Erreur!\");\n\n      })\n  }\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const user = {\n      _id: this.props.id,\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phone: this.state.phone,\n      age: this.state.age,\n      email: this.state.email,\n      birthday: this.state.birthday,\n      gender: this.state.gender,\n      situationF: this.state.situationF,\n      hospital:this.state.hospital,\n    }\n    axios.put(`https://interxpim.herokuapp.com/api/users/update`, user)\n      .then(res => {\n\n\n        window.location.reload(false);\n\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  openModal(id1) {\n    this.setState({\n      modalIsOpen: true,\n      id: id1\n    });\n\n  }\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n  render() {\n    const { sendemail,sendsms,firstname, lastname, phone, age, email, birthday, gender, situationF, id ,hospital} = this.props;\n  //console.log(sendemail)\n   // console.log(sendsms)\n    \n    return (\n      <>\n        <Tr>\n          <Td minWidth={{ sm: \"250px\" }} pl=\"0px\">\n            <Flex align=\"center\" py=\".8rem\" minWidth=\"100%\" flexWrap=\"nowrap\">\n\n              <Flex direction=\"column\">\n                <Text\n                  fontSize=\"md\"\n                  color={\"gray.700\"}\n                  fontWeight=\"bold\"\n                  minWidth=\"100%\"\n                >\n                  {firstname} {lastname}\n                </Text>\n                <Text fontSize=\"sm\" color=\"gray.400\" fontWeight=\"normal\">\n                  {email}\n                </Text>\n              </Flex>\n            </Flex>\n          </Td>\n\n          <Td>\n            <Flex direction=\"column\">\n              <Text fontSize=\"md\" color={\"gray.700\"} fontWeight=\"bold\">\n                {phone}\n              </Text>\n\n            </Flex>\n          </Td>\n          <Td>\n            <Text fontSize=\"md\" color={\"gray.700\"} fontWeight=\"bold\" pb=\".5rem\">\n              {birthday}\n            </Text>\n            <Text fontSize=\"sm\" color=\"gray.400\" fontWeight=\"normal\">\n              {age} ans\n            </Text>\n          </Td>\n\n          <Td>\n            <Text fontSize=\"md\" color={\"gray.700\"} fontWeight=\"bold\" pb=\".5rem\">\n              {gender}\n            </Text>\n          </Td>\n          <Td>\n            <Text fontSize=\"md\" color={\"gray.700\"} fontWeight=\"bold\" pb=\".5rem\">\n              {situationF}\n            </Text>\n          </Td>\n          \n\n          <Td>\n            <Flex\n              direction={{ sm: \"column\", md: \"row\" }}\n              align=\"flex-start\"\n              p={{ md: \"24px\" }}\n            >\n              <Popover\n                initialFocusRef={this.state.modalIsOpen}\n                onClose={() => { this.closeModal() }}\n                placement='right'\n                closeOnBlur={true}\n              >\n                <PopoverTrigger>\n                  <Button\n                    p=\"0px\"\n                    bg=\"transparent\"\n                    mb={{ sm: \"10px\", md: \"0px\" }}\n                    me={{ md: \"12px\" }}\n                  >\n                    <Flex color=\"red.500\" cursor=\"pointer\" align=\"center\" p=\"12px\">\n                      <Icon as={FaTrashAlt} me=\"4px\" />\n                    </Flex>\n                  </Button>\n                </PopoverTrigger>\n\n                <PopoverContent>\n                  <PopoverHeader fontWeight='semibold'>Confirmation</PopoverHeader>\n                  <PopoverArrow />\n                  <PopoverCloseButton />\n                  <PopoverBody>\n                    Êtes-vous sûr de vouloir continuer votre action ?\n                  </PopoverBody>\n                  <PopoverFooter d='flex' justifyContent='flex-end'>\n                    <ButtonGroup size='sm'>\n                      <Button onClick={() => { this.delete() }} colorScheme='red'>Valider</Button>\n                    </ButtonGroup>\n                  </PopoverFooter>\n                </PopoverContent>\n              </Popover>\n\n\n              <Button onClick={() => { this.openModal(id) }} p=\"0px\" bg=\"transparent\">\n                <Flex color=\"gray.700\" cursor=\"pointer\" align=\"center\" p=\"12px\">\n                  <Icon as={FaPencilAlt} me=\"4px\" />\n                </Flex>\n              </Button>\n            </Flex>\n          </Td>\n          \n          \n        </Tr >\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onClose={() => { this.closeModal() }}>\n          <ModalOverlay />\n          <ModalContent>\n\n            <form onSubmit={this.handleSubmit}>\n              \n              <ModalHeader>Modifier User</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={8}>\n                <FormControl>\n                  <FormLabel>Prénom & Nom</FormLabel>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiOutlineFontColors color='gray.300' />}\n                      />\n                      <Input defaultValue={firstname} onChange={(event) => this.handleChange(event, \"firstname\")} placeholder=\"Prénom\" />\n                    </InputGroup>\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiOutlineFontColors color='gray.300' />}\n                      />\n                      <Input defaultValue={lastname} onChange={(event) => this.handleChange(event, \"lastname\")} placeholder=\"Nom\" />\n                    </InputGroup>\n                  </Flex>\n                  <FormLabel>Phone</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiFillPhone color='gray.300' />}\n                    />\n                    <Input defaultValue={phone} onChange={(event) => this.handleChange(event, \"phone\")} placeholder=\"phone\" />\n                  </InputGroup>\n                  <FormLabel>age</FormLabel>\n                  <Input defaultValue={age} onChange={(event) => this.handleChange(event, \"age\")} placeholder=\"age\" />\n                  <FormLabel>email</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiOutlineMail color='gray.300' />}\n                    />\n                    <Input defaultValue={email} onChange={(event) => this.handleChange(event, \"email\")} placeholder=\"email\" />\n                  </InputGroup>\n                 \n                  \n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <FormLabel></FormLabel>\n\n                  </Flex>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <Select fontSize=\"sm\"\n                      ms=\"4px\"\n                      borderRadius=\"15px\"\n                      mb=\"4px\"\n                      size=\"lg\"\n                      onChange={(event) => this.handleChange(event, \"gender\")}>\n                        \n                      <option value=\"homme\">Homme</option>\n                      <option value=\"femme\">Femme</option>\n\n                    </Select>\n\n\n                    <Select fontSize=\"sm\"\n                      ms=\"4px\"\n                      borderRadius=\"15px\"\n                      mb=\"4px\"\n                      size=\"lg\"\n                      onChange={(event) => this.handleChange(event, \"situationF\")}>\n                      <option value=\"célibataire\">Célibataire</option>\n                      <option value=\"veuve\">Veuve</option>\n                      <option value=\"mariée\">Mariée</option>\n                      <option value=\"dévorcée\">Dévorcée</option>\n                    </Select>\n                  </Flex>\n                \n                </FormControl>\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" bg=\"teal.300\"\n                color=\"white\" mr={4}>\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModal() }} >Annuler</Button>\n\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n\n      </>\n    );\n  }\n}\n\nexport default TablesTableRowUser;\n","\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Checkbox, CheckboxGroup } from '@chakra-ui/react'\nimport { useToast } from '@chakra-ui/react'\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Input,\n  InputGroup,\n  Select,\n  InputLeftElement,\n  Icon,\n  Button,\n} from \"@chakra-ui/react\";\nimport {\n  FaPlus,\n} from \"react-icons/fa\";\nimport {\n  AiOutlineFontColors,\n  AiFillPhone,\n  AiOutlineEnvironment,\n  AiOutlineMail,\n  AiTwotoneCalendar\n} from \"react-icons/ai\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n} from \"@chakra-ui/react\"\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TablesTableRow from \"components/Tables/TablesTableRow\";\n\nclass Users extends React.Component {\n\n\n  componentDidMount() {\n    axios.get(`https://interxpim.herokuapp.com/api/users/all`)\n      .then(res => {\n        const resdata = res.data;\n        this.setState({ resdata });\n      })\n  }\n  constructor() {\n    super()\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      phone: '',\n      email: '',\n      birthday: '',\n      gender: '',\n      situationF: 'Célibataire',\n      age: '',\n      //password:'',\n      hospital: '',\n      sendsms: false,\n      sendemail: false,\n      modalIsOpen: false,\n      resdata: [],\n\n      l: [],\n      la: [],\n    }\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n\n    if (field == \"sendemail\") {\n      this.state.sendemail = evt.target.checked\n      this.setState({ sendemail: evt.target.checked })\n      console.log(this.state.email)\n      // let isChecked = e.target.checked;\n    }\n    if (field == \"sendsms\") {\n      this.state.sendsms = evt.target.checked\n      this.setState({ sendsms: evt.target.checked })\n      console.log(this.state.sendsms)\n    }\n\n    // this.state.sendemail  = evt.target.value \n\n\n  }\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const user = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phone: this.state.phone,\n      email: this.state.email,\n      age: this.state.age,\n      //password:this.state.password,\n      situationF: this.state.situationF,\n      gender: this.state.gender,\n      hospital: sessionStorage.getItem(\"id\"),\n      sendemail: this.state.sendemail,\n      sendsms: this.state.sendsms\n\n    }\n    console.log(this.state.sendemail)\n    axios.post(\"https://interxpim.herokuapp.com/api/users/createUsers\", user)\n      .then(res => {\n        //alert(user.firstname)\n        window.location.reload(false);\n      }).catch(error => {\n        console.log(user)\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  openModal() {\n    this.setState({\n      modalIsOpen: true,\n    });\n\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n\n  render() {\n    if (sessionStorage.getItem(\"role\") == \"SupAdmin\") {\n      this.state.resdata.forEach(elementr => {\n        this.state.l.push(elementr)\n        this.state.la = Array.from(new Set(this.state.l))\n\n\n      })\n\n    } else if (sessionStorage.getItem(\"role\") == \"Admin\") {\n      this.state.resdata.forEach(elementr => {\n        if (elementr.hospital == sessionStorage.getItem(\"id\")) {\n          this.state.l.push(elementr)\n          this.state.la = Array.from(new Set(this.state.l))\n  \n        }\n\n\n      })\n\n    }\n\n    return (\n      <>\n        <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Flex justify=\"space-between\" align=\"center\" mb=\"1rem\" w=\"100%\">\n                <Text fontSize=\"xl\" color={\"gray.700\"} fontWeight=\"bold\">\n                  Liste des employés\n                </Text>\n                <Button\n                  colorScheme=\"#1daa3f\"\n                  borderColor=\"#1daa3f\"\n                  color=\"#1daa3f\"\n                  variant=\"outline\"\n                  fontSize=\"xs\"\n                  p=\"8px 32px\"\n                  onClick={() => { this.openModal() }}\n                >\n                  <Icon as={FaPlus} me=\"6px\" />\n                  Ajouter un user\n                </Button>\n              </Flex>\n\n            </CardHeader>\n\n            <CardBody>\n              <Table variant=\"simple\" color={\"gray.700\"}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th pl=\"0px\" color=\"#1daa3\">\n                      Utilisateur\n                    </Th>\n                    <Th color=\"#1daa3\">Phone</Th>\n                    <Th color=\"#1daa3\">Birthday</Th>\n                    <Th color=\"#1daa3\">Gender</Th>\n                    <Th color=\"#1daa3\">Situation Familialle</Th>\n                    <Th color=\"#1daa3\">Action</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {this.state.la.map((row) => {\n                    //  if (row.hospital == sessionStorage.getItem(\"id\")) {\n                    return (\n                      <TablesTableRow\n                        id={row._id}\n                        firstname={row.firstname}\n                        lastname={row.lastname}\n                        phone={row.phone}\n                        age={row.age}\n                        email={row.email}\n                        password={row.password}\n                        birthday={row.birthday}\n                        gender={row.gender}\n                        situationF={row.situationF}\n                        sendemail={row.sendemail}\n                        sendsms={row.sendsms}\n                      />\n                    );\n\n\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n          <Card\n            my=\"22px\"\n            overflowX={{ sm: \"scroll\", xl: \"hidden\" }}\n          >\n          </Card>\n        </Flex>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onClose={() => { this.closeModal() }}\n        >\n          <ModalOverlay />\n          <ModalContent>\n\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <ModalHeader>Ajouter un user</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={8}>\n                <FormControl>\n                  <FormLabel>Prénom & Nom</FormLabel>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiOutlineFontColors color='gray.300' />}\n                      />\n                      <Input\n                        onChange={(event) => this.handleChange(event, \"firstname\")}\n                        placeholder=\"Prénom\"\n                        borderColor=\"gray.400\"\n                        focusBorderColor=\"#1daa3f\" />\n                    </InputGroup>\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiOutlineFontColors color='gray.300' />}\n                      />\n                      <Input\n                        onChange={(event) => this.handleChange(event, \"lastname\")}\n                        placeholder=\"Nom\"\n                        borderColor=\"gray.400\"\n                        focusBorderColor=\"#1daa3f\" />\n                    </InputGroup>\n                  </Flex>\n                  <FormLabel>Téléphone</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiFillPhone color='gray.300' />}\n                    />\n\n\n                    <Input\n                      onChange={(event) => this.handleChange(event, \"phone\")}\n                      placeholder=\"Téléphone\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\" />\n                  </InputGroup>\n                  <FormLabel>Email</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiOutlineMail color='gray.300' />}\n                    />\n                    <Input\n                      type=\"email\"\n                      onChange={(event) => this.handleChange(event, \"email\")}\n                      placeholder=\"email\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\" />\n                  </InputGroup>\n                  <FormLabel>age</FormLabel>\n                  <Input\n                    onChange={(event) => this.handleChange(event, \"age\")}\n                    placeholder=\"age\"\n                    borderColor=\"gray.400\"\n                    focusBorderColor=\"#1daa3f\" />\n\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <FormLabel></FormLabel>\n\n                  </Flex>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <Select fontSize=\"sm\"\n                      ms=\"4px\"\n                      borderRadius=\"15px\"\n                      mb=\"4px\"\n                      size=\"lg\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\"\n                      onChange={(event) => this.handleChange(event, \"gender\")}>\n                      <option value=\"homme\">Homme</option>\n                      <option value=\"femme\">Femme</option>\n\n                    </Select>\n\n                    <Select fontSize=\"sm\"\n                      ms=\"4px\"\n                      borderRadius=\"15px\"\n                      mb=\"4px\"\n                      size=\"lg\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\"\n                      onChange={(event) => this.handleChange(event, \"situationF\")}>\n                      <option value=\"célibataire\">Célibataire</option>\n                      <option value=\"veuve\">Veuve</option>\n                      <option value=\"mariée\">Mariée</option>\n                      <option value=\"dévorcée\">Dévorcée</option>\n                    </Select>\n                  </Flex>\n\n                  <Checkbox\n                    onChange={(event) => {\n                      this.handleChange(event, \"sendemail\")\n                    }}\n\n                  />\n                  send email\n                  <Checkbox\n                    onChange={(event) => {\n                      this.handleChange(event, \"sendsms\")\n                    }}\n\n                  />\n                  send sms\n\n                </FormControl>\n\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" bg=\"#1daa3f\"\n                  color=\"white\" mr={3}\n                  _hover={{\n                    bg: \"#147a2c\",\n                  }}\n                  _active={{\n                    bg: \"#1daa3f\",\n                  }}\n                >\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModal() }} bg=\"gray.400\">Annuler</Button>\n\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default Users;\n","import React, { useState } from \"react\";\nimport { BellIcon, SearchIcon, PhoneIcon, AtSignIcon, CalendarIcon } from \"@chakra-ui/icons\";\nimport axios from 'axios';\nimport { Checkbox, CheckboxGroup } from '@chakra-ui/react'\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Icon,\n  Button,\n\n  InputGroup,\n  Select,\n  IconButton,\n  InputLeftElement,\n} from \"@chakra-ui/react\";\nimport {\n  FaCube,\n  FaFacebook,\n  FaInstagram,\n  FaPenFancy,\n  FaPlus,\n\n\n  FaTwitter,\n} from \"react-icons/fa\";\nimport {\n  AiOutlineFontColors,\n  AiFillPhone,\n  AiOutlineEnvironment,\n  AiOutlineMail,\n  AiTwotoneCalendar\n} from \"react-icons/ai\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input\n} from \"@chakra-ui/react\"\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TablesTableRow from \"components/Tables/TablePatient\";\n\n\nclass PatientsH extends React.Component {\n\n\n  componentDidMount() {\n    axios.get(`https://interxpim.herokuapp.com/api/reservations/allReser`)\n      .then(res => {\n        const resdataR = res.data;\n        this.setState({ resdataR });\n      })\n     \n    axios.get(`https://interxpim.herokuapp.com/api/patient/all`)\n      .then(res => {\n\n        const resdataP = res.data;\n        this.setState({ resdataP });\n      })\n\n  }\n  constructor() {\n    super()\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      phone: '',\n      email: '',\n      birthday: '',\n      adresse: '',\n      situationF: '',\n      GroupeSanguine: '',\n      password: '',\n      search: '',\n      hospital: '',\n      sendsms: false,\n      sendemail: false,\n      modalIsOpen: false,\n      resdataR: [],\n      resdataP: [],\n      liste: [],\n      l: [],\n      la: [],\n    }\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n    if (field == \"sendemail\") {\n      this.state.sendemail = evt.target.checked\n      this.setState({sendemail:evt.target.checked})\n      console.log(this.state.email)\n     // let isChecked = e.target.checked;\n    }\n    if (field == \"sendsms\")\n    {\n      this.state.sendsms = evt.target.checked\n      this.setState({sendsms:evt.target.checked})\n      console.log(this.state.sendsms)\n    }\n\n  }\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const patient = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phone: this.state.phone,\n      email: this.state.email,\n      birthday: this.state.birthday,\n      adresse: this.state.adresse,\n      password: this.state.password,\n      situationF: this.state.situationF,\n      GroupeSanguine: this.state.GroupeSanguine,\n      sendemail :this.state.sendemail,\n      sendsms : this.state.sendsms,\n      //hospital: sessionStorage.getItem(\"id\")\n    }\n    const reservation = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phone: this.state.phone,\n      date: this.state.date,\n      heure: this.state.heure,\n      hospital: this.state.hospital,\n      user: this.state.user,\n    }\n    axios.post(\"https://interxpim.herokuapp.com/api/patient/registerWeb\", patient)\n      .then(res => {\n        //alert(user.firstname)\n        window.location.reload(false);\n      }).catch(error => {\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  openModal() {\n    this.setState({\n      modalIsOpen: true,\n    });\n    //alert(this.state.search)\n\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n  render() {\n\n  \n\n    this.state.resdataR.forEach(elementr => {\n      this.state.resdataP.forEach(element => {\n        if (elementr.hospital == sessionStorage.getItem(\"id\") && element._id == elementr.user) {\n          this.state.l.push(element)\n          this.state.la = Array.from(new Set(this.state.l))\n          // console.log(Array.from(new Set(this.state.l)))\n\n\n        }else if (sessionStorage.getItem(\"hospital\")==elementr.hospital && element._id == elementr.user)\n        {\n          this.state.l.push(element)\n          this.state.la = Array.from(new Set(this.state.l))\n        }\n      })\n\n    })\n\n    if (sessionStorage.getItem(\"role\")==\"SupAdmin\")\n    {\n      this.state.resdataP.forEach(element => {\n          this.state.l.push(element)\n          this.state.la = Array.from(new Set(this.state.l))\n        })\n    }\n    return (\n      <>\n        <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Flex justify=\"space-between\" align=\"center\" mb=\"1rem\" w=\"100%\">\n                <Text fontSize=\"xl\" color={\"gray.700\"} fontWeight=\"bold\">\n                  Liste des patients\n                </Text>\n               \n              </Flex>\n            </CardHeader>\n\n            <CardBody>\n              <Table variant=\"simple\" color={\"gray.700\"}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th pl=\"0px\" color=\"gray.400\">\n                      Patient\n                    </Th>\n                    <Th color=\"gray.400\">Phone</Th>\n                    <Th color=\"gray.400\">Addresse</Th>\n\n                    <Th color=\"gray.400\">Groupe Sanguine</Th>\n                    <Th color=\"gray.400\">Situation Familialle</Th>\n                    <Th color=\"gray.400f\">Action</Th>\n\n                  </Tr>\n                </Thead>\n\n                <Tbody>\n\n                  {\n                    this.state.la.map((roww) => {\n\n\n\n                      return (\n                        <TablesTableRow\n                          id={roww._id}\n                          firstname={roww.firstname}\n                          lastname={roww.lastname}\n                          email={roww.email}\n                          birthday={roww.birthday}\n                          phone={roww.phone}\n                          adresse={roww.adresse}\n                          GroupeSanguine={roww.GroupeSanguine}\n                          situationF={roww.situationF}\n\n                        />\n                      )\n\n\n                    }\n                    )\n\n\n                  }\n\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n          <Card\n            my=\"22px\"\n            overflowX={{ sm: \"scroll\", xl: \"hidden\" }}\n          >\n\n\n          </Card>\n        </Flex>\n       \n      </>\n    );\n  }\n}\n\nexport default PatientsH;\n","\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Checkbox, CheckboxGroup } from '@chakra-ui/react'\nimport { useToast } from '@chakra-ui/react'\n// Chakra imports\nimport {\n  Flex,\n  Table,\n  Tbody,\n  Text,\n  Th,\n  Thead,\n  Tr,\n  Input,\n  InputGroup,\n  Select,\n  InputLeftElement,\n  Icon,\n  Button,\n} from \"@chakra-ui/react\";\nimport {\n  FaPlus,\n} from \"react-icons/fa\";\nimport {\n  AiOutlineFontColors,\n  AiFillPhone,\n  AiOutlineEnvironment,\n  AiOutlineMail,\n  AiTwotoneCalendar\n} from \"react-icons/ai\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n} from \"@chakra-ui/react\"\n// Custom components\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport TablesTableRow from \"components/Tables/TablesTableRow\";\n\nclass UsersSA extends React.Component {\n\n\n  componentDidMount() {\n    axios.get(`https://interxpim.herokuapp.com/api/users/all`)\n      .then(res => {\n        const resdata = res.data;\n        this.setState({ resdata });\n      })\n  }\n  constructor() {\n    super()\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      phone: '',\n      email: '',\n      birthday: '',\n      gender: '',\n      situationF: 'Célibataire',\n      age: '',\n      //password:'',\n      hospital: '',\n      sendsms: false,\n      sendemail: false,\n      modalIsOpen: false,\n      resdata: [],\n\n      l: [],\n      la: [],\n    }\n  }\n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n\n    if (field == \"sendemail\") {\n      this.state.sendemail = evt.target.checked\n      this.setState({ sendemail: evt.target.checked })\n      console.log(this.state.email)\n      // let isChecked = e.target.checked;\n    }\n    if (field == \"sendsms\") {\n      this.state.sendsms = evt.target.checked\n      this.setState({ sendsms: evt.target.checked })\n      console.log(this.state.sendsms)\n    }\n\n    // this.state.sendemail  = evt.target.value \n\n\n  }\n  handleSubmit = async (event) => {\n\n    event.preventDefault();\n    const user = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      phone: this.state.phone,\n      email: this.state.email,\n      age: this.state.age,\n      //password:this.state.password,\n      situationF: this.state.situationF,\n      gender: this.state.gender,\n      hospital: sessionStorage.getItem(\"id\"),\n      sendemail: this.state.sendemail,\n      sendsms: this.state.sendsms\n\n    }\n    console.log(this.state.sendemail)\n    axios.post(\"https://interxpim.herokuapp.com/api/users/createUsers\", user)\n      .then(res => {\n        //alert(user.firstname)\n        window.location.reload(false);\n      }).catch(error => {\n        console.log(user)\n        alert(\"Remplissez tous les champs!\");\n\n      })\n  }\n  openModal() {\n    this.setState({\n      modalIsOpen: true,\n    });\n\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n\n    });\n  }\n\n  render() {\n    if (sessionStorage.getItem(\"role\") == \"SupAdmin\") {\n      this.state.resdata.forEach(elementr => {\n        this.state.l.push(elementr)\n        this.state.la = Array.from(new Set(this.state.l))\n\n\n      })\n\n    } else if (sessionStorage.getItem(\"role\") == \"Admin\") {\n      this.state.resdata.forEach(elementr => {\n        if (elementr.hospital == sessionStorage.getItem(\"id\")) {\n          this.state.l.push(elementr)\n          this.state.la = Array.from(new Set(this.state.l))\n  \n        }\n\n\n      })\n\n    }\n\n    return (\n      <>\n        <Flex direction=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n          <Card overflowX={{ sm: \"scroll\", xl: \"hidden\" }}>\n            <CardHeader p=\"6px 0px 22px 0px\">\n              <Flex justify=\"space-between\" align=\"center\" mb=\"1rem\" w=\"100%\">\n                <Text fontSize=\"xl\" color={\"gray.700\"} fontWeight=\"bold\">\n                  Liste des employés\n                </Text>\n                <Button\n                  colorScheme=\"#1daa3f\"\n                  borderColor=\"#1daa3f\"\n                  color=\"#1daa3f\"\n                  variant=\"outline\"\n                  fontSize=\"xs\"\n                  p=\"8px 32px\"\n                  onClick={() => { this.openModal() }}\n                >\n                  <Icon as={FaPlus} me=\"6px\" />\n                  Ajouter un user\n                </Button>\n              </Flex>\n\n            </CardHeader>\n\n            <CardBody>\n              <Table variant=\"simple\" color={\"gray.700\"}>\n                <Thead>\n                  <Tr my=\".8rem\" pl=\"0px\" color=\"gray.400\">\n                    <Th pl=\"0px\" color=\"#1daa3\">\n                      Utilisateur\n                    </Th>\n                    <Th color=\"#1daa3\">Phone</Th>\n                    <Th color=\"#1daa3\">Birthday</Th>\n                    <Th color=\"#1daa3\">Gender</Th>\n                    <Th color=\"#1daa3\">Situation Familialle</Th>\n                    <Th color=\"#1daa3\">Action</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {this.state.la.map((row) => {\n                    //  if (row.hospital == sessionStorage.getItem(\"id\")) {\n                    return (\n                      <TablesTableRow\n                        id={row._id}\n                        firstname={row.firstname}\n                        lastname={row.lastname}\n                        phone={row.phone}\n                        age={row.age}\n                        email={row.email}\n                        password={row.password}\n                        birthday={row.birthday}\n                        gender={row.gender}\n                        situationF={row.situationF}\n                        sendemail={row.sendemail}\n                        sendsms={row.sendsms}\n                      />\n                    );\n\n\n                  })}\n                </Tbody>\n              </Table>\n            </CardBody>\n          </Card>\n          <Card\n            my=\"22px\"\n            overflowX={{ sm: \"scroll\", xl: \"hidden\" }}\n          >\n          </Card>\n        </Flex>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onClose={() => { this.closeModal() }}\n        >\n          <ModalOverlay />\n          <ModalContent>\n\n            <form id=\"form\" onSubmit={this.handleSubmit}>\n              <ModalHeader>Ajouter un user</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody pb={8}>\n                <FormControl>\n                  <FormLabel>Prénom & Nom</FormLabel>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiOutlineFontColors color='gray.300' />}\n                      />\n                      <Input\n                        onChange={(event) => this.handleChange(event, \"firstname\")}\n                        placeholder=\"Prénom\"\n                        borderColor=\"gray.400\"\n                        focusBorderColor=\"#1daa3f\" />\n                    </InputGroup>\n                    <InputGroup>\n                      <InputLeftElement\n                        pointerEvents='none'\n                        children={<AiOutlineFontColors color='gray.300' />}\n                      />\n                      <Input\n                        onChange={(event) => this.handleChange(event, \"lastname\")}\n                        placeholder=\"Nom\"\n                        borderColor=\"gray.400\"\n                        focusBorderColor=\"#1daa3f\" />\n                    </InputGroup>\n                  </Flex>\n                  <FormLabel>Téléphone</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiFillPhone color='gray.300' />}\n                    />\n\n\n                    <Input\n                      onChange={(event) => this.handleChange(event, \"phone\")}\n                      placeholder=\"Téléphone\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\" />\n                  </InputGroup>\n                  <FormLabel>Email</FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiOutlineMail color='gray.300' />}\n                    />\n                    <Input\n                      type=\"email\"\n                      onChange={(event) => this.handleChange(event, \"email\")}\n                      placeholder=\"email\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\" />\n                  </InputGroup>\n                  <FormLabel>age</FormLabel>\n                  <Input\n                    onChange={(event) => this.handleChange(event, \"age\")}\n                    placeholder=\"age\"\n                    borderColor=\"gray.400\"\n                    focusBorderColor=\"#1daa3f\" />\n\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <FormLabel></FormLabel>\n\n                  </Flex>\n                  <Flex\n                    direction={{ sm: \"column\", md: \"row\" }}\n                    align=\"center\"\n                    w=\"100%\"\n                    justify=\"center\"\n                    py=\"1rem\"\n                    padding=\"2px\"\n                  >\n                    <Select fontSize=\"sm\"\n                      ms=\"4px\"\n                      borderRadius=\"15px\"\n                      mb=\"4px\"\n                      size=\"lg\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\"\n                      onChange={(event) => this.handleChange(event, \"gender\")}>\n                      <option value=\"homme\">Homme</option>\n                      <option value=\"femme\">Femme</option>\n\n                    </Select>\n\n                    <Select fontSize=\"sm\"\n                      ms=\"4px\"\n                      borderRadius=\"15px\"\n                      mb=\"4px\"\n                      size=\"lg\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\"\n                      onChange={(event) => this.handleChange(event, \"situationF\")}>\n                      <option value=\"célibataire\">Célibataire</option>\n                      <option value=\"veuve\">Veuve</option>\n                      <option value=\"mariée\">Mariée</option>\n                      <option value=\"dévorcée\">Dévorcée</option>\n                    </Select>\n                  </Flex>\n\n                  <Checkbox\n                    onChange={(event) => {\n                      this.handleChange(event, \"sendemail\")\n                    }}\n\n                  />\n                  send email\n                  <Checkbox\n                    onChange={(event) => {\n                      this.handleChange(event, \"sendsms\")\n                    }}\n\n                  />\n                  send sms\n\n                </FormControl>\n\n              </ModalBody>\n              <ModalFooter>\n                <Button type=\"submit\" bg=\"#1daa3f\"\n                  color=\"white\" mr={3}\n                  _hover={{\n                    bg: \"#147a2c\",\n                  }}\n                  _active={{\n                    bg: \"#1daa3f\",\n                  }}\n                >\n                  Valider\n                </Button>\n                <Button onClick={() => { this.closeModal() }} bg=\"gray.400\">Annuler</Button>\n\n              </ModalFooter>\n            </form>\n          </ModalContent>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default UsersSA;\n","export const barChartData = [\n  {\n    name: \"Sales\",\n    data: [330, 250, 110, 300, 490, 350, 270, 130, 425],\n  },\n];\n\nexport const barChartOptions = {\n  chart: {\n    toolbar: {\n      show: false,\n    },\n  },\n  tooltip: {\n    style: {\n      backgroundColor: \"red\",\n      fontSize: \"12px\",\n      fontFamily: undefined,\n    },\n    onDatasetHover: {\n      style: {\n        backgroundColor: \"red\",\n        fontSize: \"12px\",\n        fontFamily: undefined,\n      },\n    },\n    theme: \"dark\",\n  },\n  xaxis: {\n    categories: [\"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    show: false,\n    labels: {\n      show: false,\n      style: {\n        colors: \"#fff\",\n        fontSize: \"12px\",\n      },\n    },\n    axisBorder: {\n      show: false,\n    },\n    axisTicks: {\n      show: false,\n    },\n  },\n  yaxis: {\n    show: true,\n    color: \"#fff\",\n    labels: {\n      show: true,\n      style: {\n        colors: \"#fff\",\n        fontSize: \"14px\",\n      },\n    },\n  },\n  grid: {\n    show: false,\n  },\n  fill: {\n    colors: \"#fff\",\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  plotOptions: {\n    bar: {\n      borderRadius: 8,\n      columnWidth: \"12px\",\n    },\n  },\n  responsive: [\n    {\n      breakpoint: 768,\n      options: {\n        plotOptions: {\n          bar: {\n            borderRadius: 0,\n          },\n        },\n      },\n    },\n  ],\n};\n\nexport const lineChartData = [\n  {\n    name: \"Mobile apps\",\n    data: [50, 40, 300, 220, 500, 250, 400, 230, 500],\n  },\n  {\n    name: \"Websites\",\n    data: [30, 90, 40, 140, 290, 290, 340, 230, 400],\n  },\n];\n\nexport const lineChartOptions = {\n  chart: {\n    toolbar: {\n      show: false,\n    },\n  },\n  tooltip: {\n    theme: \"dark\",\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  stroke: {\n    curve: \"smooth\",\n  },\n  xaxis: {\n    type: \"datetime\",\n    categories: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n    labels: {\n      style: {\n        colors: \"#c8cfca\",\n        fontSize: \"12px\",\n      },\n    },\n  },\n  yaxis: {\n    labels: {\n      style: {\n        colors: \"#c8cfca\",\n        fontSize: \"12px\",\n      },\n    },\n  },\n  legend: {\n    show: false,\n  },\n  grid: {\n    strokeDashArray: 5,\n  },\n  fill: {\n    type: \"gradient\",\n    gradient: {\n      shade: \"light\",\n      type: \"vertical\",\n      shadeIntensity: 0.5,\n      gradientToColors: undefined, // optional, if not defined - uses the shades of same color in series\n      inverseColors: true,\n      opacityFrom: 0.8,\n      opacityTo: 0,\n      stops: [],\n    },\n    colors: [\"#4FD1C5\", \"#2D3748\"],\n  },\n  colors: [\"#4FD1C5\", \"#2D3748\"],\n};\n","import React, { Component } from \"react\";\nimport Card from \"components/Card/Card\";\nimport Chart from \"react-apexcharts\";\nimport { barChartData, barChartOptions } from \"variables/charts\";\nimport axios from 'axios';\n\nclass BarChart extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      resdata:[],\n      l:2,\n      chartData: [],\n      chartOptions: {},\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://interxpim.herokuapp.com/api/reservations/allReser`)\n    .then(res => {\n      const resdata = res.data;\n      this.setState({ resdata });\n      const l = resdata.length\n      this.setState({ l });\n    })\n    this.setState({\n      chartData: [ {\n        name: \"Réservations\",\n        data: [this.state.l , 0, 0, 0, 0, 0, 0, 0, 0],\n      },],\n      chartOptions: barChartOptions,\n    });\n  }\n\n  render() {\n    return (\n      <Card\n        py=\"1rem\"\n        height={{ sm: \"200px\" }}\n        width=\"100%\"\n        bg=\"linear-gradient(81.62deg, green 2.25%, white 79.87%)\"\n        position=\"relative\"\n      >\n        <Chart\n          options={this.state.chartOptions}\n          series={this.state.chartData}\n          type=\"bar\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </Card>\n    );\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { lineChartData, lineChartOptions } from \"variables/charts\";\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chartData: [],\n      chartOptions: {},\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      chartData: lineChartData,\n      chartOptions: lineChartOptions,\n    });\n  }\n\n  render() {\n    return (\n      <ReactApexChart\n        options={this.state.chartOptions}\n        series={this.state.chartData}\n        type=\"area\"\n        width=\"100%\"\n        height=\"100%\"\n      />\n    );\n  }\n}\n\nexport default LineChart;\n","import { Box, Flex, Icon, Text, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction TimelineRow(props) {\n  const { logo, title, date, color, index, arrLength } = props;\n  const textColor = useColorModeValue(\"gray.700\", \"white.300\");\n  const bgIconColor = useColorModeValue(\"white.300\", \"gray.700\");\n\n  return (\n    <Flex alignItems=\"center\" minH=\"78px\" justifyContent=\"start\" mb=\"5px\">\n      <Flex direction=\"column\" h=\"100%\">\n        <Icon\n          as={logo}\n          bg={bgIconColor}\n          color={color}\n          h={\"30px\"}\n          w={\"26px\"}\n          pe=\"6px\"\n          zIndex=\"1\"\n          position=\"relative\"\n          right={document.documentElement.dir === \"rtl\" ? \"-8px\" : \"\"}\n          left={document.documentElement.dir === \"rtl\" ? \"\" : \"-8px\"}\n        />\n        <Box\n          w=\"2px\"\n          bg=\"gray.200\"\n          h={index === arrLength - 1 ? \"15px\" : \"100%\"}\n        ></Box>\n      </Flex>\n      <Flex direction=\"column\" justifyContent=\"flex-start\" h=\"100%\">\n        <Text fontSize=\"sm\" color={textColor} fontWeight=\"bold\">\n          {title}\n        </Text>\n        <Text fontSize=\"sm\" color=\"gray.400\" fontWeight=\"normal\">\n          {date}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default TimelineRow;\n","// Chakra imports\nimport {\n  Flex,\n  SimpleGrid,\n  Spacer,\n  Stat,\n\n  StatLabel,\n  StatNumber,\n} from \"@chakra-ui/react\";\nimport axios from 'axios';\n\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport BarChart from \"components/Charts/BarChart\";\nimport LineChart from \"components/Charts/LineChart\";\nimport IconBox from \"components/Icons/IconBox\";\n// Custom icons\nimport {\n  CartIcon,\n  DocumentIcon,\n  GlobeIcon,\n  RocketIcon,\n  StatsIcon,\n  WalletIcon,\n} from \"components/Icons/Icons.js\";\nimport DashboardTableRow from \"components/Tables/DashboardTableRow\";\nimport TimelineRow from \"components/Tables/TimelineRow\";\nimport React, { useState } from \"react\";\nclass Dashboard extends React.Component {\n  componentDidMount() {\n    axios.get(`https://interxpim.herokuapp.com/api/reservations/allReser`)\n    .then(res => {\n      const resdata = res.data;\n      this.setState({ resdata });\n    })\n    axios.get(`https://interxpim.herokuapp.com/api/hospital/all`)\n    .then(res => {\n      const hosdata = res.data;\n      this.setState({ hosdata });\n    })\n    axios.get(`https://interxpim.herokuapp.com/api/patient/all`)\n    .then(res => {\n      const pasdata = res.data;\n      this.setState({ pasdata });\n    })\n  }\n  constructor() {\n    super()\n   \n   this.state = {\n     resdata:[],\n     hosdata:[],\n     pasdata:[]\n     \n   }\n   }\n  render(){\n\n  return (\n    <Flex flexDirection=\"column\" pt={{ base: \"120px\", md: \"75px\" }}>\n      <SimpleGrid columns={{ sm: 1, md: 2, xl: 4 }} spacing=\"24px\">\n        <Card minH=\"83px\">\n          <CardBody>\n            <Flex flexDirection=\"row\" align=\"center\" justify=\"center\" w=\"100%\">\n              <Stat me=\"auto\">\n                <StatLabel\n                  fontSize=\"sm\"\n                  color=\"gray.400\"\n                  fontWeight=\"bold\"\n                  pb=\".1rem\"\n                >\n                  Nombre d'hopitaux\n                </StatLabel>\n                <Flex>\n                  <StatNumber fontSize=\"lg\" color=\"gray.700\">\n                    {this.state.hosdata.length.toString()}\n                  </StatNumber>\n                 \n                </Flex>\n              </Stat>\n              <IconBox as=\"box\" h={\"45px\"} w={\"45px\"} bg=\"green\">\n                <WalletIcon h={\"24px\"} w={\"24px\"} color=\"white\" />\n              </IconBox>\n            </Flex>\n          </CardBody>\n        </Card>\n        <Card minH=\"83px\">\n          <CardBody>\n            <Flex flexDirection=\"row\" align=\"center\" justify=\"center\" w=\"100%\">\n              <Stat me=\"auto\">\n                <StatLabel\n                  fontSize=\"sm\"\n                  color=\"gray.400\"\n                  fontWeight=\"bold\"\n                  pb=\".1rem\"\n                >\n                  Nombre de patients\n                </StatLabel>\n                <Flex>\n                  <StatNumber fontSize=\"lg\" color=\"gray.700\">\n                  {this.state.pasdata.length.toString()}\n                  </StatNumber>\n                \n                   \n                </Flex>\n              </Stat>\n              <IconBox as=\"box\" h={\"45px\"} w={\"45px\"} bg=\"green\">\n                <GlobeIcon h={\"24px\"} w={\"24px\"} color=\"white\" />\n              </IconBox>\n            </Flex>\n          </CardBody>\n        </Card>\n        <Card minH=\"83px\">\n          <CardBody>\n            <Flex flexDirection=\"row\" align=\"center\" justify=\"center\" w=\"100%\">\n              <Stat>\n                <StatLabel\n                  fontSize=\"sm\"\n                  color=\"gray.400\"\n                  fontWeight=\"bold\"\n                  pb=\".1rem\"\n                >\n                  Nombre de réservations\n                </StatLabel>\n                <Flex>\n                  <StatNumber fontSize=\"lg\" color=\"gray.700\">\n                  {this.state.resdata.length.toString()}\n                  </StatNumber>\n                \n                </Flex>\n              </Stat>\n              <Spacer />\n              <IconBox as=\"box\" h={\"45px\"} w={\"45px\"} bg=\"green\">\n                <DocumentIcon h={\"24px\"} w={\"24px\"} color=\"white\" />\n              </IconBox>\n            </Flex>\n          </CardBody>\n        </Card>\n     \n      </SimpleGrid>\n     <br/>\n     <br/>\n  <BarChart/>\n    </Flex>\n     )\n    }\n    }\n  export default Dashboard;\n  ","// import\n\nimport Tables from \"views/Dashboard/Tables.js\";\nimport Profile from \"views/Dashboard/Profile.js\";\nimport ProfileE from \"views/Dashboard/ProfileEmploye.js\"\nimport ProfileP from \"views/Dashboard/ProfilePatient.js\"\n\nimport Resevation from \"views/Dashboard/Reservation\";\nimport ResevationP from \"views/Dashboard/ReservationP\";\nimport Hospital from \"views/Dashboard/Hospitals\";\nimport Users from \"views/Dashboard/Users.js\";\nimport PatientsH from \"views/Dashboard/PatientH.js\";\nimport UsersSA from \"views/Dashboard/UsersSA.js\";\n\nimport { CalendarIcon } from '@chakra-ui/icons'\nimport { FaSlideshare ,FaRestroom} from \"react-icons/fa\";\nimport{ImStatsDots} from \"react-icons/im\";\nimport {\n  HomeIcon,\n  StatsIcon,\n  PersonIcon,\n  DocumentIcon,\n  RocketIcon,\n} from \"components/Icons/Icons\";\nimport Dashboard from \"views/Dashboard/Dashboard\";\nif (sessionStorage.getItem(\"role\")==\"Admin\")\n{var dashRoutes = [\n \n  {\n    path: \"/reservations\",\n    name: \"Réservations\",\n    rtlName: \"المريض\",\n    icon: <CalendarIcon color=\"#1daa3f\" />,\n    component: Resevation,\n    layout: \"/admin\",\n  },\n  {\n    path: \"/tables\",\n    name: \"Patient\",\n    rtlName: \"المريض\",\n    icon: <FaRestroom color=\"#1daa3f\" />,\n    component: PatientsH,\n    layout: \"/admin\",\n  },\n  \n  {\n    path: \"/user\",\n    name: \"User\",\n    rtlName: \"المريض\",\n    icon: <FaSlideshare color=\"#1daa3f\" />,\n    component: Users,\n    layout: \"/admin\",\n  },\n  {\n        path: \"/profile\",\n        name: \"Profile\",\n        rtlName: \"لوحة القيادة\",\n        icon: <PersonIcon color=\"#1daa3f\" />,\n        component: Profile,\n        layout: \"/admin\",\n      },\n    \n     \n];}\nelse if (sessionStorage.getItem(\"role\")==\"user\"){\n  var dashRoutes = [\n    {\n      path: \"/reservations\",\n      name: \"Réservations\",\n      rtlName: \"المريض\",\n      icon: <CalendarIcon color=\"#1daa3f\" />,\n      component: Resevation,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/tables\",\n      name: \"Patient\",\n      rtlName: \"المريض\",\n      icon: <FaRestroom color=\"#1daa3f\" />,\n      component: Tables,\n      layout: \"/admin\",\n    },\n    {\n          path: \"/profile\",\n          name: \"Profile\",\n          rtlName: \"لوحة القيادة\",\n          icon: <PersonIcon color=\"#1daa3f\" />,\n          component: ProfileE,\n          layout: \"/admin\",\n        },\n      \n       \n  ];\n}else if (sessionStorage.getItem(\"role\")==\"SupAdmin\")\n{\n  var dashRoutes = [\n    {\n      path: \"/dashboard\",\n      name: \"Statistique\",\n      rtlName: \"المريض\",\n      icon: <ImStatsDots color=\"#1daa3f\" />,\n      component: Dashboard,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/reservations\",\n      name: \"Réservations\",\n      rtlName: \"المريض\",\n      icon: <CalendarIcon color=\"#1daa3f\" />,\n      component: Resevation,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/hospital\",\n      name: \"Hospitals\",\n      rtlName: \"المريض\",\n      icon: <CalendarIcon color=\"#1daa3f\" />,\n      component: Hospital,\n      layout: \"/admin\",\n    },\n    {\n      path: \"/tables\",\n      name: \"Patient\",\n      rtlName: \"المريض\",\n      icon: <FaRestroom color=\"#1daa3f\" />,\n      component: Tables,\n      layout: \"/admin\",\n    },\n    \n    {\n      path: \"/user\",\n      name: \"User\",\n      rtlName: \"المريض\",\n      icon: <FaSlideshare color=\"#1daa3f\" />,\n      component: UsersSA,\n      layout: \"/admin\",\n    },\n    \n      \n       \n  ];\n}\n\nelse \n{\n  var dashRoutes = [\n    {\n      path: \"/reservations\",\n      name: \"Réservations\",\n      rtlName: \"المريض\",\n      icon: <CalendarIcon color=\"#1daa3f\" />,\n      component: ResevationP,\n      layout: \"/admin\",\n    },\n    {\n          path: \"/profile\",\n          name: \"Profile\",\n          rtlName: \"لوحة القيادة\",\n          icon: <PersonIcon color=\"#1daa3f\" />,\n          component: ProfileP,\n          layout: \"/admin\",\n        },\n      \n       \n  ];\n}\n\nexport default dashRoutes;\n","export default __webpack_public_path__ + \"static/media/BgSignUp.d231fece.png\";","import React, { useState } from \"react\";\nimport { useToast } from '@chakra-ui/react'\n// Chakra imports\nimport {\n  Box,\n  Flex,\n  Button,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Link,\n  Switch,\n  Text,\n  InputGroup,\n\n  FormErrorMessage,\n  FormHelperText,\n  InputRightElement,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n// Assets\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nimport signInImage from \"assets/img/BgSignUp.png\";\nfunction SignIn() {\n  // Chakra color mode\n  const history = useHistory();\n  const titleColor = useColorModeValue(\"teal.300\", \"teal.200\");\n  const textColor = useColorModeValue(\"gray.400\", \"white\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const toast = useToast()\n  const toastIdRef = React.useRef()\n  var md5 = require('md5');\n  const [show, setShow] = React.useState(false)\n  const handleClick = () => setShow(!show)\n\n\n  function addToast() {\n    toastIdRef.current = toast({ description: 'some text' })\n  }\n  const Signup = () => {\n    history.push(\"/auth/signup\");\n  }\n  const ForgetPassword = () => {\n    history.push(\"/auth/forgetPasword\");\n  }\n  const login = () => {\n    console.log(isMail)\n    Axios.post(\"https://interxpim.herokuapp.com/api/users/login\", {\n\n      email: email,\n\n      password:password,\n    }).then((response) => {\n\n      if (!response.data.message) {\n        // setLoginStatus( response.data.message);\n        if (response.data.role == \"Admin\" && isMail) {\n          sessionStorage.setItem(\"email\", response.data.email)\n          sessionStorage.setItem(\"password\", response.data.password)\n          sessionStorage.setItem(\"nomHospital\", response.data.nomHospital)\n          sessionStorage.setItem(\"addresseHospital\", response.data.addresseHospital)\n          sessionStorage.setItem(\"phoneHospital\", response.data.phoneHospital)\n          sessionStorage.setItem(\"faxHospital\", response.data.faxHospital)\n          sessionStorage.setItem(\"id\", response.data._id)\n          sessionStorage.setItem(\"role\", response.data.role)\n         // window.location.reload(false);\n          console.log(response);\n          history.push(\"/admin/reservations\");\n          window.location.reload(false);\n        }else if (response.data.role==\"user\"){\n          sessionStorage.setItem(\"email\", response.data.email)\n          sessionStorage.setItem(\"password\", response.data.password)\n          sessionStorage.setItem(\"firstname\", response.data.firstname)\n          sessionStorage.setItem(\"lastname\", response.data.lastname)\n          sessionStorage.setItem(\"phone\", response.data.phone)\n          sessionStorage.setItem(\"gender\", response.data.gender)\n          sessionStorage.setItem(\"id\", response.data._id)\n          sessionStorage.setItem(\"age\", response.data.age)\n          sessionStorage.setItem(\"situation\", response.data.situationF)\n          sessionStorage.setItem(\"role\", response.data.role)\n          sessionStorage.setItem(\"hospital\",response.data.hospital)\n          sessionStorage.setItem(\"sendsms\",response.data.sendsms)\n          sessionStorage.setItem(\"sendemail\",response.data.sendemail)\n          console.log(response);\n          history.push(\"/admin/reservations\");\n\n          window.location.reload(false);\n        }else if (response.data.role==\"SupAdmin\"){\n          sessionStorage.setItem(\"email\", response.data.email)\n          sessionStorage.setItem(\"password\", response.data.password)\n          sessionStorage.setItem(\"role\", response.data.role)\n          console.log(response);\n          history.push(\"/admin/reservations\");\n          window.location.reload(false);\n        }\n        \n        else {\n          sessionStorage.setItem(\"email\", response.data.email)\n          sessionStorage.setItem(\"password\", response.data.password)\n          sessionStorage.setItem(\"firstname\", response.data.firstname)\n          sessionStorage.setItem(\"lastname\", response.data.lastname)\n          sessionStorage.setItem(\"phone\", response.data.phone)\n          sessionStorage.setItem(\"adresse\", response.data.adresse)\n          sessionStorage.setItem(\"id\", response.data._id)\n          sessionStorage.setItem(\"birthday\", response.data.birthday)\n          sessionStorage.setItem(\"situation\", response.data.situationF)\n          sessionStorage.setItem(\"GroupeSanguine\", response.data.GroupeSanguine)\n          sessionStorage.setItem(\"sendsms\",response.data.sendsms)\n          sessionStorage.setItem(\"sendemail\",response.data.sendemail)\n         \n          console.log(response);\n          history.push(\"/admin/reservations\");\n          window.location.reload(false);\n        }\n        \n\n      } else {\n       \n        console.log(isMail)\n      }\n    });\n  };\n  const isMail = () => {\n\n    let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n    if (email.match(regex)) {\n      return true;\n    } else {\n\n      return false;\n    }\n  }\n\n  console.log(isMail)\n  return (\n    <>\n      <Flex position=\"relative\" mb=\"40px\">\n        <Flex\n          h={{ sm: \"initial\", md: \"75vh\", lg: \"85vh\" }}\n          w=\"100%\"\n          maxW=\"1044px\"\n          mx=\"auto\"\n          justifyContent=\"space-between\"\n          mb=\"30px\"\n          pt={{ sm: \"100px\", md: \"0px\" }}\n        >\n          <Flex\n            alignItems=\"center\"\n            justifyContent=\"start\"\n            style={{ userSelect: \"none\" }}\n            w={{ base: \"100%\", md: \"50%\", lg: \"42%\" }}\n          >\n            <Flex\n              direction=\"column\"\n              w=\"100%\"\n              background=\"transparent\"\n\n              p=\"48px\"\n              mt={{ md: \"150px\", lg: \"80px\" }}\n            >\n              <Heading color=\"#1daa3f\" fontSize=\"32px\" mb=\"10px\">\n                Welcome Back\n              </Heading>\n              <Text\n                mb=\"36px\"\n                ms=\"4px\"\n                color={textColor}\n                fontWeight=\"bold\"\n                fontSize=\"14px\"\n              >\n                Enter your email and password to sign in\n              </Text>\n              <FormControl >\n                <FormLabel ms=\"4px\" fontSize=\"sm\" fontWeight=\"normal\">\n                  Email\n                </FormLabel>\n                <Input\n                  borderRadius=\"15px\"\n                  mb=\"24px\"\n                  fontSize=\"sm\"\n                  type=\"text\"\n                  value={email}\n                  borderColor=\"gray.400\"\n                  focusBorderColor=\"#1daa3f\"\n                 // _hover={\"#1daa3f\"}\n                  //onClick={\"#1daa3f\"}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Your email adress\"\n                  size=\"lg\"\n                />\n                <FormLabel ms=\"4px\" fontSize=\"sm\" fontWeight=\"normal\">\n                  Password\n                </FormLabel>\n                <InputGroup size='md'>\n                  <Input\n                    borderRadius=\"15px\"\n                    mb=\"36px\"\n                    fontSize=\"sm\"\n                    type={show ? 'text' : 'password'}\n                    value={password}\n                    borderColor=\"gray.400\"\n                    focusBorderColor=\"#1daa3f\"\n                    onChange={(e) => setPassword(e.target.value)}\n                    placeholder=\"Your password\"\n                    size=\"lg\"\n                  />\n                  <InputRightElement width='4.5rem'>\n                    <Button h='1.75rem' size='sm' onClick={handleClick}>\n                      {show ? 'Hide' : 'Show'}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n                <Text color={textColor} fontWeight=\"medium\">\n                 \n                  <Link color={\"#1daa3f\"} as=\"span\" ms=\"5px\" fontWeight=\"bold\"\n                    onClick={ForgetPassword}>\n                    Forget Password ?\n                  </Link>\n                </Text>\n                <Button\n                  onClick={login}\n                  fontSize=\"10px\"\n                  type=\"submit\"\n                  bg=\"#1daa3f\"\n                  w=\"100%\"\n                  h=\"45\"\n                  mb=\"20px\"\n                  color=\"white\"\n                  mt=\"20px\"\n                  _hover={{\n                    bg: \"#147a2c\",\n                  }}\n                  _active={{\n                    bg: \"#1daa3f\",\n                  }}\n                >\n                  SIGN IN\n                </Button>\n              </FormControl>\n              <Flex\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                maxW=\"100%\"\n                mt=\"0px\"\n              >\n                <Text color={textColor} fontWeight=\"medium\">\n                  Don't have an account?\n                  <Link color={\"#1daa3f\"} as=\"span\" ms=\"5px\" fontWeight=\"bold\"\n                    onClick={Signup}>\n                    Sign Up\n                  </Link>\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Box\n            display={{ base: \"none\", md: \"block\" }}\n           \n            h=\"900px\"\n            w=\"600px\"\n            position=\"absolute\"\n            right=\"10px\"\n            top=\"200px\"\n          >\n            <Box\n              bgImage={signInImage}\n              w=\"500px\"\n              h=\"490px\"\n              bgSize=\"cover\"\n              bgPosition=\"0px\"\n              borderBottomLeftRadius=\"20px\"\n            ></Box>\n          </Box>\n        </Flex>\n      </Flex>\n\n    </>\n  );\n}\n\nexport default SignIn;\n","import L from \"leaflet\";\r\n\r\nexport default L.icon({\r\n  iconSize: [25, 41],\r\n  iconAnchor: [10, 41],\r\n  popupAnchor: [2, -40],\r\n  iconUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-icon.png\",\r\n  shadowUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-shadow.png\"\r\n});\r\n","export default __webpack_public_path__ + \"static/media/BgSignUpd.c042ac51.png\";","// Chakra imports\nimport { Center, Square, Circle } from '@chakra-ui/react'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport icon from \"./constants\";\n\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  InputGroup,\n  HStack,\n  InputRightElement,\n  Input,\n  Link,\n  Switch,\n  Text\n} from \"@chakra-ui/react\";\nimport { PinInput, PinInputField } from '@chakra-ui/react'\n// Assets\nimport BgSignUp from \"assets/img/BgSignUpd.png\";\nimport React, { Component } from \"react\";\n//import { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/react'\nimport L from 'leaflet';\nimport { geolocated } from 'react-geolocated';\nimport { map } from 'lodash';\nclass SignUp extends Component {\n\n  constructor(props) {\n \n    super(props);\n    this.state = {\n      value: '',\n      size: '',\n      modalIsOpen:false,\n      modalIsOpen1:false,\n      email:\"\",\n      password:\"\",\n      nomHospital:\"\",\n      addresseHospital:\"\",\n      phoneHospital:\"\",\n      faxHospital:\"\",\n      latitude:0.0,\n      longitude:0.0\n\n    }\n  }\n \n  openModal() {\n    this.setState({\n      modalIsOpen: true,\n    });\n  }\n\n  closeModal(latitude,longitude) {\n    console.log(latitude)\n    this.setState({\n      modalIsOpen: false,\n    });\n  }\n\n  openModal1() {\n    this.setState({\n      modalIsOpen1: true,\n    });\n  }\n  closeModal1() {\n    this.setState({\n      modalIsOpen1: false,\n    });\n  }\n   Signin() {\n     \n    this.props.history.push(\"/auth/signin\");\n  }\n  Dashboard (){\n    const conf=sessionStorage.getItem(\"conf\")\n    if (this.state.value == conf )\n    {\n      //history.push(\"/admin/reservations\");\n      window.location.reload(false);\n    }else \n    {\n      // alert(\"please try again\")\n    }\n  }  \n  handleChange(evt, field) {\n    this.setState({ [field]: evt.target.value });\n\n  }\n   register = async (event) => {\n    //event.preventDefault();\n    Axios.post(\"https://interxpim.herokuapp.com/api/hospital/register\", {\n      latitude:this.state.latitude,\n      longitude:this.state.longitude,\n      email: this.state.email,\n      password: this.state.password,\n      nomHospital: this.state.nomHospital,\n      addresseHospital: this.state.addresseHospital,\n      phoneHospital: this.state.phoneHospital,\n      faxHospital: this.state.faxHospital,\n    }).then((response) => {\n\n      if (!response.data.message) {\n        this.openModal1()\n        // setLoginStatus( response.data.message);\n        if (response.data.role == \"Admin\") {\n          sessionStorage.setItem(\"email\", response.data.email)\n          sessionStorage.setItem(\"password\", response.data.password)\n          sessionStorage.setItem(\"nomHospital\", response.data.nomHospital)\n          sessionStorage.setItem(\"addresseHospital\", response.data.addresseHospital)\n          sessionStorage.setItem(\"phoneHospital\", response.data.phoneHospital)\n          sessionStorage.setItem(\"faxHospital\", response.data.faxHospital)\n          sessionStorage.setItem(\"id\", response.data._id)\n          sessionStorage.setItem(\"role\", response.data.role)\n          sessionStorage.setItem(\"conf\", response.data.conf)\n         \n          console.log(response);\n          //\n          this.props.history.push(\"/admin/reservations\");\n         \n        }\n\n      } else {\n        // setLoginStatus(response.data[0].message);\n\n      }\n    });\n  }\n  state = { map: null };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { map } = this.state;\n    if (prevState.map !== map && map) {\n      \n      map.on(\"click\", function (e) {\n      \n        console.log(\"Lat, Lon : \" + e.latlng.lat + \", \" + e.latlng.lng)\n        this.setState({latitude:e.latlng.lat,\n          longitude:e.latlng.lng\n        })\n      \n      }.bind(this));\n    }\n  }\n  render() {\n    \n    const DEFAULT_LATITUDE = 36.89857107033524;\n    const DEFAULT_LONGITUDE = 10.189760711095621;\n    const latitude = this.props.coords ? this.props.coords.latitude : DEFAULT_LATITUDE;\n    const longitude = this.props.coords ? this.props.coords.longitude : DEFAULT_LONGITUDE;\n\n\n  return (\n    <>\n      <Flex\n        direction=\"column\"\n        alignSelf=\"center\"\n        justifySelf=\"center\"\n        overflow=\"hidden\"\n      >\n        <Box\n          position=\"absolute\"\n          minH={{ base: \"70vh\", md: \"50vh\" }}\n          w={{ md: \"calc(100vw - 50px)\" }}\n          borderRadius={{ md: \"15px\" }}\n          left=\"0\"\n          right=\"0\"\n          bgRepeat=\"no-repeat\"\n          overflow=\"hidden\"\n          zIndex=\"-1\"\n          top=\"0\"\n          bgImage={BgSignUp}\n          bgSize=\"cover\"\n          mx={{ md: \"auto\" }}\n          mt={{ md: \"14px\" }}\n        ></Box>\n        <Flex\n          direction=\"column\"\n          textAlign=\"center\"\n          justifyContent=\"center\"\n          align=\"center\"\n          mt=\"6.5rem\"\n          mb=\"30px\"\n        >\n          <Text fontSize=\"4xl\" color=\"white\" fontWeight=\"bold\">\n            Welcome!\n          </Text>\n       \n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"60px\" mt=\"20px\">\n          <Flex\n            direction=\"column\"\n            w=\"445px\"\n            background=\"transparent\"\n            borderRadius=\"15px\"\n            p=\"40px\"\n            mx={{ base: \"100px\" }}\n            bg=\"white\"\n            boxShadow=\"0 20px 27px 0 rgb(0 0 0 / 5%)\"\n          >\n            <Text\n              fontSize=\"xl\"\n              color=\"gray.700\"\n              fontWeight=\"bold\"\n              textAlign=\"center\"\n              mb=\"22px\"\n            >\n              Register\n            </Text>\n\n            <FormControl>\n              <Input\n                fontSize=\"sm\"\n                ms=\"4px\"\n                borderRadius=\"15px\"\n                type=\"text\"\n                placeholder=\"Name Hospital\"\n               value={this.state.nomHospital}\n                borderColor=\"gray.400\"\n                focusBorderColor=\"#1daa3f\"\n                onChange={(event) => this.handleChange(event, \"nomHospital\")}\n                mb=\"24px\"\n                size=\"lg\"\n              />\n\n              <Input\n                fontSize=\"sm\"\n                ms=\"4px\"\n                borderRadius=\"15px\"\n                type=\"email\"\n                value={this.state.email}\n                borderColor=\"gray.400\"\n                focusBorderColor=\"#1daa3f\"\n                onChange={(event) => this.handleChange(event, \"email\")}\n                placeholder=\"Your email address\"\n                mb=\"24px\"\n                size=\"lg\"\n              />\n             <InputGroup size='md'>\n              <Input\n              disabled\n                fontSize=\"sm\"\n                ms=\"4px\"\n                borderRadius=\"15px\"\n                type=\"text\"\n                value={\n                  this.state.latitude ? 'Ajouté' : 'Non Ajouté'\n                }\n                borderColor=\"gray.400\"\n                focusBorderColor=\"#1daa3f\"\n  \n                placeholder=\"Addresse Hospital\"\n                mb=\"24px\"\n                size=\"lg\"\n              />\n              <InputRightElement width='4.5rem'>\n                    <Button h='1.75rem' size='sm'    onClick={() => {this.openModal()}}>\n                    Choisissez\n                    </Button>\n                  </InputRightElement>\n              </InputGroup>\n              <Input\n              \n                fontSize=\"sm\"\n                ms=\"4px\"\n                borderRadius=\"15px\"\n                type=\"text\"\n                value={this.state.addresseHospital}\n                borderColor=\"gray.400\"\n                focusBorderColor=\"#1daa3f\"\n                onChange={(event) => this.handleChange(event, \"addresseHospital\")}\n                placeholder=\"Addresse Hospital\"\n                mb=\"24px\"\n                size=\"lg\"\n              />\n              <Input\n                fontSize=\"sm\"\n                ms=\"4px\"\n                borderRadius=\"15px\"\n                type=\"number\"\n                value={this.state.phoneHospital}\n                borderColor=\"gray.400\"\n                focusBorderColor=\"#1daa3f\"\n                onChange={(event) => this.handleChange(event, \"phoneHospital\")}\n                placeholder=\"Hospital Phone \"\n                mb=\"24px\"\n                size=\"lg\"\n              />\n              <Input\n                fontSize=\"sm\"\n                ms=\"4px\"\n                borderRadius=\"15px\"\n                type=\"number\"\n                value={this.state.faxHospital}\n                borderColor=\"gray.400\"\n                focusBorderColor=\"#1daa3f\"\n                onChange={(event) => this.handleChange(event, \"faxHospital\")}\n                placeholder=\"Fax Number Hospital\"\n                mb=\"24px\"\n                size=\"lg\"\n              />\n              <Input\n                fontSize=\"sm\"\n                ms=\"4px\"\n                borderRadius=\"15px\"\n                type=\"password\"\n                value={this.state.password}\n                borderColor=\"gray.400\"\n                focusBorderColor=\"#1daa3f\"\n                onChange={(event) => this.handleChange(event, \"password\")}\n                placeholder=\"Your password\"\n                mb=\"24px\"\n                size=\"lg\"\n              />\n              \n              <Button\n               onClick={() => {this.register()}}\n                type=\"submit\"\n                bg=\"#1daa3f\"\n                fontSize=\"10px\"\n                color=\"white\"\n                fontWeight=\"bold\"\n                w=\"100%\"\n                h=\"45\"\n                mb=\"24px\"\n                _hover={{\n                  bg: \"#147a2c\",\n                }}\n                _active={{\n                  bg: \"#1daa3f\",\n                }}\n              >\n                SIGN UP\n              </Button>\n            </FormControl>\n            <Flex\n              flexDirection=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              maxW=\"100%\"\n              mt=\"0px\"\n            >\n              <Text color=\"gray.700\" fontWeight=\"medium\">\n                Already have an account?\n                <Link\n                  \n                  as=\"span\"\n                  ms=\"5px\"\n                  href=\"#\"\n                  fontWeight=\"bold\"\n                  onClick={() => {this.Signin()}}\n                  color={\"#1daa3f\"}\n                >\n                  Sign In\n                </Link>\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Flex>\n      <Modal\n     \n        isOpen={this.state.modalIsOpen}\n        onClose={() => { this.closeModal() }}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Choisissez votre addresse</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody  >\n            <Center\n            \n            >\n                     <MapContainer\n                     \n                     className=\"leaflet-map\"\n        center={[latitude, longitude]}\n        zoom={15}\n        scrollWheelZoom={true}\n        style={{ height: \"60vh\" ,width:\"100vh\"}}\n        whenReady={(map) =>  this.setState({map:map.target})}\n        //  whenCreated={(map) => console.log(map)}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker   position={[this.state.latitude, this.state.longitude]} icon={icon}>\n\n        </Marker>\n      </MapContainer>\n            </Center>\n          </ModalBody>\n          <ModalFooter>\n            <Button colorScheme='blue' mr={3} onClick={() => {this.closeModal(latitude,longitude)}}>\n              Confirmer\n            </Button>\n            <Button  onClick={() => {this.closeModal()}}>Annuler</Button>\n          </ModalFooter>\n        \n        </ModalContent>\n        \n      </Modal>\n\n      <Modal\n            isOpen={this.state.modalIsOpen1}\n            onClose={() => { this.closeModal1() }}\n      \n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Create your account</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={6}>\n            <Center\n            >\n              <HStack >\n                <PinInput  mask onChange={(event) => this.handleChange(event, \"value\")}\n>\n                  <PinInputField />\n                  <PinInputField />\n                  <PinInputField />\n                  <PinInputField />\n                </PinInput>\n              </HStack>\n            </Center>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button colorScheme='blue' mr={3} onClick={() => {this.Dashboard()}}>\n              Save\n            </Button>\n            <Button  onClick={() => {this.closeModal1()}}>Cancel</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n}  \nexport default SignUp;\n","import React, { useState } from \"react\";\nimport { useToast } from '@chakra-ui/react'\n// Chakra imports\nimport {\n  Box,\n  Flex,\n  Button,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Link,\n  Switch,\n  Text,\n  InputGroup,\n\n  FormErrorMessage,\n  FormHelperText,\n  InputRightElement,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n// Assets\nimport { useHistory } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport signInImage from \"assets/img/BgSignUp.png\";\nfunction SignIn() {\n  // Chakra color mode\n  const history = useHistory();\n  const titleColor = useColorModeValue(\"teal.300\", \"teal.200\");\n  const textColor = useColorModeValue(\"gray.400\", \"white\");\n\n  const toast = useToast()\n  const toastIdRef = React.useRef()\n\n  const [show, setShow] = React.useState(false)\n  const handleClick = () => setShow(!show)\n  const Signup = () => {\n    history.push(\"/auth/signup\");\n  }\n  const   Signin = () => {\n    history.push(\"/auth/signin \");\n  }\n \n  const isMail = () => {\n\n    let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n    if (email.match(regex)) {\n      return true;\n    } else {\n\n      return false;\n    }\n  }\n  \n  const [email, setEmail] = useState(\"\");\n  const [OldPassword, setOldPassword] = useState(\"\");\n  const [NewPassword, setNewPassword] = useState(\"\");\n  const handleSubmit = () => {\n    if (OldPassword!=0&&NewPassword!=0){\n      Axios.post(\"https://interxpim.herokuapp.com/api/patient/changePwd\", {\n        email: email,\n        oldPwd:OldPassword,\n        newpassword: NewPassword,\n      }).then((response) => {\n        window.location.reload(false);\n      })\n      console.log(\"yes\")\n    }else {\n      console.log(\"no\")\n    }\n  }\n  console.log(isMail)\n  return (\n    <>\n      <Flex position=\"relative\" mb=\"40px\">\n        <Flex\n          h={{ sm: \"initial\", md: \"75vh\", lg: \"85vh\" }}\n          w=\"100%\"\n          maxW=\"1044px\"\n          mx=\"auto\"\n          justifyContent=\"space-between\"\n          mb=\"30px\"\n          pt={{ sm: \"100px\", md: \"0px\" }}\n        >\n          <Flex\n            alignItems=\"center\"\n            justifyContent=\"start\"\n            style={{ userSelect: \"none\" }}\n            w={{ base: \"100%\", md: \"50%\", lg: \"42%\" }}\n          >\n            <Flex\n              direction=\"column\"\n              w=\"100%\"\n              background=\"transparent\"\n\n              p=\"48px\"\n              mt={{ md: \"150px\", lg: \"80px\" }}\n            >\n              <Heading color=\"#1daa3f\" fontSize=\"32px\" mb=\"10px\">\n              Forget Password ?\n              </Heading>\n              <Text\n                mb=\"36px\"\n                ms=\"4px\"\n                color={textColor}\n                fontWeight=\"bold\"\n                fontSize=\"14px\"\n              >\n                \n              </Text>\n              <FormControl >\n                <FormLabel ms=\"4px\" fontSize=\"sm\" fontWeight=\"normal\">\n                  Email\n                </FormLabel>\n                <Input\n                  borderRadius=\"15px\"\n                  mb=\"24px\"\n                  fontSize=\"sm\"\n                  type=\"text\"\n                  value={email}\n                  borderColor=\"gray.400\"\n                  focusBorderColor=\"#1daa3f\"\n                 // _hover={\"#1daa3f\"}\n                  //onClick={\"#1daa3f\"}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"Your email adress\"\n                  size=\"lg\"\n                />\n                <FormLabel ms=\"4px\" fontSize=\"sm\" fontWeight=\"normal\">\n                   Old Password\n                </FormLabel>\n                <InputGroup size='md'>\n                  <Input\n                    borderRadius=\"15px\"\n                    mb=\"36px\"\n                    fontSize=\"sm\"\n                    type={show ? 'text' : 'password'}\n                    value={OldPassword}\n                    borderColor=\"gray.400\"\n                    focusBorderColor=\"#1daa3f\"\n                    onChange={(e) => setOldPassword(e.target.value)}\n                    placeholder=\"Your Old password\"\n                    size=\"lg\"\n                  />\n                  <InputRightElement width='4.5rem'>\n                    <Button h='1.75rem' size='sm' onClick={handleClick}>\n                      {show ? 'Hide' : 'Show'}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n                <FormLabel ms=\"4px\" fontSize=\"sm\" fontWeight=\"normal\">\n                 New Password\n                </FormLabel>\n                <InputGroup size='md'>\n                  <Input\n                    borderRadius=\"15px\"\n                    mb=\"36px\"\n                    fontSize=\"sm\"\n                    type={show ? 'text' : 'password'}\n                    value={NewPassword}\n                    borderColor=\"gray.400\"\n                    focusBorderColor=\"#1daa3f\"\n                    onChange={(e) => setNewPassword(e.target.value)}\n                    placeholder=\"Your New password\"\n                    size=\"lg\"\n                  />\n                  <InputRightElement width='4.5rem'>\n                    <Button h='1.75rem' size='sm' onClick={handleClick}>\n                      {show ? 'Hide' : 'Show'}\n                    </Button>\n                  </InputRightElement>\n                </InputGroup>\n                <Button\n                  onClick={handleSubmit}\n                  fontSize=\"10px\"\n                  type=\"submit\"\n                  bg=\"#1daa3f\"\n                  w=\"100%\"\n                  h=\"45\"\n                  mb=\"20px\"\n                  color=\"white\"\n                  mt=\"20px\"\n                  _hover={{\n                    bg: \"#147a2c\",\n                  }}\n                  _active={{\n                    bg: \"#1daa3f\",\n                  }}\n                >\n                  CHANGE\n                </Button>\n              </FormControl>\n              <Flex\n                flexDirection=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                maxW=\"100%\"\n                mt=\"0px\"\n              >\n                <Text color={textColor} fontWeight=\"medium\">\n                  Don't have an account?\n                  <Link color={\"#1daa3f\"} as=\"span\" ms=\"5px\" fontWeight=\"bold\"\n                    onClick={Signup}>\n                    Sign Up  \n                  </Link>\n                  <Flex\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                maxW=\"100%\"\n                mt=\"0px\"\n              >\n                  Or \n                  <Link color={\"#1daa3f\"} as=\"span\" ms=\"5px\" fontWeight=\"bold\"\n                    onClick={Signin}>\n                    Sign In\n                  </Link>\n                  </Flex>\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Box\n            display={{ base: \"none\", md: \"block\" }}\n           \n            h=\"900px\"\n            w=\"600px\"\n            position=\"absolute\"\n            right=\"10px\"\n            top=\"200px\"\n          >\n            <Box\n              bgImage={signInImage}\n              w=\"500px\"\n              h=\"490px\"\n              bgSize=\"cover\"\n              bgPosition=\"0px\"\n              borderBottomLeftRadius=\"20px\"\n            ></Box>\n          </Box>\n        </Flex>\n      </Flex>\n\n    </>\n  );\n}\n\nexport default SignIn;\n","// import\n\nimport Tables from \"views/Dashboard/Tables.js\";\nimport Profile from \"views/Dashboard/Profile.js\";\nimport Resevation from \"views/Dashboard/Reservation\";\nimport Users from \"views/Dashboard/Users.js\";\nimport SignIn from \"views/Pages/SignIn.js\";\nimport SignUp from \"views/Pages/SignUp.js\";\nimport ForgetPassword from \"views/Pages/ForgetPassword.js\";\nimport {\n  HomeIcon,\n  StatsIcon,\n  PersonIcon,\n  DocumentIcon,\n  RocketIcon,\n} from \"components/Icons/Icons\";\n\nvar dashRoutes = [\n      {\n        path: \"/signin\",\n        name: \"Sign In\",\n        rtlName: \"لوحة القيادة\",\n        icon: <DocumentIcon color=\"inherit\" />,\n        component: SignIn,\n        layout: \"/auth\",\n      },\n      {\n        path: \"/forgetPasword\",\n        name: \"ForgetPassword\",\n        rtlName: \"لوحة القيادة\",\n        icon: <DocumentIcon color=\"inherit\" />,\n        component: ForgetPassword,\n        layout: \"/auth\",\n      },\n      {\n        path: \"/signup\",\n        name: \"Sign Up\",\n        rtlName: \"لوحة القيادة\",\n        icon: <RocketIcon color=\"inherit\" />,\n        secondaryNavbar: false,\n        component: SignUp,\n        layout: \"/auth\",\n      },\n     \n];\nexport default dashRoutes;\n","import { mode } from \"@chakra-ui/theme-tools\";\n\nexport const globalStyles = {\n  colors: {\n    gray: {\n      700: \"#1f2733\",\n    },\n  },\n  styles: {\n    global: (props) => ({\n      body: {\n        bg: mode(\"gray.50\", \"gray.800\")(props),\n        fontFamily: 'Helvetica, sans-serif'\n      },\n      html: {\n        fontFamily: 'Helvetica, sans-serif'\n      }\n    }),\n  },\n};\n","// 1. Import the utilities\nimport { createBreakpoints } from \"@chakra-ui/theme-tools\";\n// 2. Update the breakpoints as key-value pairs\nexport const breakpoints = createBreakpoints({\n  sm: \"320px\",\n  md: \"768px\",\n  lg: \"960px\",\n  xl: \"1200px\",\n});\n","export const buttonStyles = {\n  components: {\n    Button: {\n      variants: {\n        \"no-hover\": {\n          _hover: {\n            boxShadow: \"none\",\n          },\n        },\n        \"transparent-with-icon\": {\n          bg: \"transparent\",\n          fontWeight: \"bold\",\n          borderRadius: \"inherit\",\n          cursor: \"pointer\",\n          _hover: \"none\",\n          _active: {\n            bg: \"transparent\",\n            transform: \"none\",\n            borderColor: \"transparent\",\n          },\n          _focus: {\n            boxShadow: \"none\",\n          },\n          _hover: {\n            boxShadow: \"none\",\n          },\n        },\n      },\n      baseStyle: {\n        borderRadius: \"15px\",\n        _focus: {\n          boxShadow: \"none\",\n        },\n      },\n    },\n  },\n};\n","const Card = {\n  baseStyle: {\n    p: \"22px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    position: \"relative\",\n    minWidth: \"0px\",\n    wordWrap: \"break-word\",\n    backgroundClip: \"border-box\",\n  },\n  variants: {\n    panel: (props) => ({\n      bg: props.colorMode === \"dark\" ? \"gray.700\" : \"white\",\n      width: \"100%\",\n      boxShadow: \"0px 3.5px 5.5px rgba(0, 0, 0, 0.02)\",\n      borderRadius: \"15px\",\n    }),\n  },\n  defaultProps: {\n    variant: \"panel\",\n  },\n};\n\nexport const CardComponent = {\n  components: {\n    Card,\n  },\n};\n","const CardBody = {\n  baseStyle: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n};\n\nexport const CardBodyComponent = {\n  components: {\n    CardBody,\n  },\n};\n","const CardHeader = {\n  baseStyle: {\n    display: \"flex\",\n    width: \"100%\"\n  },\n};\n\nexport const CardHeaderComponent = {\n  components: {\n    CardHeader,\n  },\n};\n","const MainPanel = {\n  baseStyle: {\n    float: \"right\",\n    maxWidth: \"100%\",\n    overflow: \"auto\",\n    position: \"relative\",\n    maxHeight: \"100%\",\n    transition: \"all 0.33s cubic-bezier(0.685, 0.0473, 0.346, 1)\",\n    transitionDuration: \".2s, .2s, .35s\",\n    transitionProperty: \"top, bottom, width\",\n    transitionTimingFunction: \"linear, linear, ease\",\n  },\n  variants: {\n    main: (props) => ({\n      float: \"right\",\n    }),\n    rtl: (props) => ({\n      float: \"left\",\n    }),\n  },\n  defaultProps: {\n    variant: \"main\",\n  },\n};\n\nexport const MainPanelComponent = {\n  components: {\n    MainPanel,\n  },\n};\n","const PanelContent = {\n  baseStyle: {\n    ms: \"auto\",\n    me: \"auto\",\n    ps: \"15px\",\n    pe: \"15px\",\n  },\n};\n\nexport const PanelContentComponent = {\n  components: {\n    PanelContent,\n  },\n};\n","const PanelContainer = {\n  baseStyle: {\n    p: \"30px 15px\",\n    minHeight: \"calc(100vh - 123px)\",\n  },\n};\n\nexport const PanelContainerComponent = {\n  components: {\n    PanelContainer,\n  },\n};\n","import { extendTheme } from \"@chakra-ui/react\";\nimport { globalStyles } from \"./styles\";\nimport { font } from \"./foundations/fonts\";\nimport { breakpoints } from \"./foundations/breakpoints\";\nimport { buttonStyles } from \"./components/button\";\nimport { badgeStyles } from \"./components/badge\";\nimport { linkStyles } from \"./components/link\";\nimport { drawerStyles } from \"./components/drawer\";\nimport { CardComponent } from \"./additions/card/Card\";\nimport { CardBodyComponent } from \"./additions/card/CardBody\";\nimport { CardHeaderComponent } from \"./additions/card/CardHeader\";\nimport { MainPanelComponent } from \"./additions/layout/MainPanel\";\nimport { PanelContentComponent } from \"./additions/layout/PanelContent\";\nimport { PanelContainerComponent } from \"./additions/layout/PanelContainer\";\n// import { mode } from \"@chakra-ui/theme-tools\";\nexport default extendTheme(\n  { breakpoints }, // Breakpoints\n  globalStyles,\n  font, // Global styles\n  buttonStyles, // Button styles\n  badgeStyles, // Badge styles\n  linkStyles, // Link styles\n  drawerStyles, // Sidebar variant for Chakra's drawer\n  CardComponent, // Card component\n  CardBodyComponent, // Card Body component\n  CardHeaderComponent, // Card Header component\n  MainPanelComponent, // Main Panel component\n  PanelContentComponent, // Panel Content component\n  PanelContainerComponent // Panel Container component\n);\n","export const font = {\n    body: 'Roboto'\n};","import { baseStyle } from \"@chakra-ui/react\";\n\nexport const badgeStyles = {\n    components: {\n        Badge: {\n            sizes: {\n                md: {\n                    width: \"65px\",\n                    height: \"25px\"\n                }\n            },\n            baseStyle: {\n                textTransform: \"capitalize\"\n            }\n\n        }\n    }\n}","export const linkStyles = {\n  components: {\n    Link: {\n      // 3. We can add a new visual variant\n      decoration: \"none\",\n      baseStyle: {\n        _hover: {\n          textDecoration: \"none\",\n        },\n        _focus: {\n          boxShadow: \"none\",\n        },\n      },\n    },\n  },\n};\n","export const drawerStyles = {\n  components: {\n    Drawer: {\n      // 3. We can add a new visual variant\n      variants: {\n        \"with-shadow\": {\n          placement: \"right\",\n          boxShadow: \"0 0 2px 2px #efdfde\",\n          bgColor: \"red\",\n        },\n      },\n    },\n  },\n};\n","// Chakra Imports\n\nimport Axios from \"axios\";\nimport {\n  Box,\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerHeader,\n  FormLabel,\n  InputLeftElement,\n  InputGroup,\n  Input,\n  Flex,\n  Icon,\n  Link,\n  Switch,\n  Text,\n  useColorMode,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  FormControl,\n} from \"@chakra-ui/react\";\nimport {\n  AiOutlineFontColors,\n  AiFillPhone,\n  AiOutlineEnvironment,\n  AiOutlineMail,\n  AiTwotoneCalendar\n} from \"react-icons/ai\";\nimport GitHubButton from \"react-github-btn\";\nimport { Separator } from \"components/Separator/Separator\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { FaTwitter, FaFacebook } from \"react-icons/fa\";\n\nexport default function Configurator(props) {\n  const { secondary, isOpen, onClose, fixed, ...rest } = props;\n  const [switched, setSwitched] = useState(props.isChecked);\n\n  const { colorMode, toggleColorMode } = useColorMode();\n  // Chakra Color Mode\n  let fixedDisplay = \"flex\";\n  if (props.secondary) {\n    fixedDisplay = \"none\";\n  }\n\n  let bgButton = useColorModeValue(\n    \"linear-gradient(81.62deg, #313860 2.25%, #151928 79.87%)\",\n    \"white\"\n  );\n  let colorButton = useColorModeValue(\"white\", \"gray.700\");\n  const secondaryButtonBg = useColorModeValue(\"white\", \"transparent\");\n  const secondaryButtonBorder = useColorModeValue(\"gray.700\", \"white\");\n  const secondaryButtonColor = useColorModeValue(\"gray.700\", \"white\");\n  const settingsRef = React.useRef();\n  const password = (sessionStorage.getItem(\"password\"));\n  const [OldPassword, setOldPassword] = useState(\"\");\n  const [NewPassword, setNewPassword] = useState(\"\");\n\n\n  const handleSubmit = () => {\n    if (sessionStorage.getItem(\"role\")==\"Admin\"){\n      if (password==OldPassword&&NewPassword!=0){\n        Axios.post(\"https://interxpim.herokuapp.com/api/hospital/changePwd\", {\n          email: sessionStorage.getItem(\"email\"),\n          oldPwd:OldPassword,\n          newpassword: NewPassword,\n\n        }).then((response) => {\n          sessionStorage.setItem(\"password\",NewPassword)\n          window.location.reload(false);\n        })\n        console.log(\"yes\")\n      }else {\n        console.log(\"no\")\n      }\n    }else if(sessionStorage.getItem(\"GroupeSanguine\")!=\"\"){\n      \n      if (password==OldPassword&&NewPassword!=0){\n      Axios.post(\"https://interxpim.herokuapp.com/api/patient/changePwd\", {\n        email: sessionStorage.getItem(\"email\"),\n        oldPwd:OldPassword,\n        newpassword: NewPassword,\n      }).then((response) => {\n        sessionStorage.setItem(\"password\",NewPassword)\n        window.location.reload(false);\n      })\n      console.log(\"yes\")\n    }else {\n      console.log(\"no\")\n    }}else if(sessionStorage.getItem(\"role\")==\"SupAdmin\"){\n      if (password==OldPassword&&NewPassword!=0){\n        Axios.post(\"https://interxpim.herokuapp.com/api/admin/changePwd\", {\n          email: sessionStorage.getItem(\"email\"),\n          oldPwd:OldPassword,\n          newpassword: NewPassword,\n\n        }).then((response) => {\n          sessionStorage.setItem(\"password\",NewPassword)\n          window.location.reload(false);\n        })\n        console.log(\"yes\")\n      }else {\n        console.log(\"no\")\n      }\n    }\n    \n\n\n\n  }\n  return (\n    <>\n      <Drawer\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        placement={document.documentElement.dir === \"rtl\" ? \"left\" : \"right\"}\n        finalFocusRef={settingsRef}\n        blockScrollOnMount={false}\n      >\n        <DrawerContent>\n          <DrawerHeader pt=\"24px\" px=\"24px\">\n            <DrawerCloseButton />\n            <Text fontSize=\"xl\" fontWeight=\"bold\" mt=\"16px\">\n            Configuration\n            </Text>\n            <Text fontSize=\"md\" mb=\"16px\">\n              See your dashboard options.\n            </Text>\n            <Separator />\n          </DrawerHeader>\n          <DrawerBody w=\"340px\" ps=\"24px\" pe=\"40px\">\n            <Flex flexDirection=\"column\">\n             \n              <Flex\n                justifyContent=\"space-between\"\n                alignItems=\"center\"\n                mb=\"24px\"\n              >\n                <Text fontSize=\"md\" fontWeight=\"600\" mb=\"4px\">\n                  Dark/Light\n                </Text>\n                <Button onClick={toggleColorMode}>\n                   {colorMode === \"light\" ? \"Dark\" : \"Light\"} Mode\n                </Button>\n              </Flex>\n\n              <Separator />\n              <Box mt=\"24px\">\n                <Text fontSize=\"md\" fontWeight=\"600\">\n                    Change password\n                </Text>\n                <Text fontSize=\"sm\" mb=\"16px\">\n                </Text>\n                <Box>\n                <form id=\"form\" onSubmit={handleSubmit}>\n                <ModalBody pb={2}>\n                <FormLabel>Old Password </FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiOutlineMail color='gray.300' />}\n                    />\n                    <Input\n                      type=\"password\"\n                      onChange={(e) => setOldPassword(e.target.value)}\n                      placeholder=\"Old Password\"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\" />\n                  </InputGroup>\n                  \n                  <FormLabel>New Password </FormLabel>\n                  <InputGroup>\n                    <InputLeftElement\n                      pointerEvents='none'\n                      children={<AiOutlineMail color='gray.300' />}\n                    />\n                    <Input\n                      type=\"Password \"\n                      onChange={(e) => setNewPassword(e.target.value)}\n                      placeholder=\"New Password \"\n                      borderColor=\"gray.400\"\n                      focusBorderColor=\"#1daa3f\" />\n                  </InputGroup>\n                  </ModalBody>\n                  <Button type=\"submit\" bg=\"#1daa3f\"\n                  \n                  color=\"white\" mr={3}\n                  _hover={{\n                    bg: \"#147a2c\",\n                  }}\n                  _active={{\n                    bg: \"#1daa3f\",\n                  }}\n                >\n                  Valider\n                </Button>\n                </form>\n                </Box>\n                <Flex\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                  w=\"100%\"\n                  mb=\"16px\"\n                >\n                </Flex>\n              </Box>\n            </Flex>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\nConfigurator.propTypes = {\n  secondary: PropTypes.bool,\n  isOpen: PropTypes.func,\n  onClose: PropTypes.func,\n  fixed: PropTypes.bool,\n};\n","export default __webpack_public_path__ + \"static/media/avatar1.eeef2af6.png\";","// Chakra Icons\nimport { BellIcon, SearchIcon } from \"@chakra-ui/icons\";\n// Chakra Imports\nimport {\n  Button,\n  Flex,\n  IconButton,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n// Assets\nimport avatar1 from \"assets/img/avatars/avatar1.png\";\nimport avatar2 from \"assets/img/avatars/avatar2.png\";\nimport avatar3 from \"assets/img/avatars/avatar3.png\";\n// Custom Icons\nimport { ProfileIcon, SettingsIcon } from \"components/Icons/Icons\";\n// Custom Components\nimport { ItemContent } from \"components/Menu/ItemContent\";\nimport { SidebarResponsive } from \"components/Sidebar/Sidebar\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"routes.js\";\n\nimport { useHistory } from \"react-router-dom\";\nexport default function HeaderLinks(props) {\n\n\n  const { variant, children, fixed, secondary, onOpen, ...rest } = props;\n\n  // Chakra Color Mode\n  const history = useHistory();\n  let mainTeal = useColorModeValue(\"teal.300\", \"teal.300\");\n  let inputBg = useColorModeValue(\"white\", \"gray.800\");\n  let mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  let navbarIcon = useColorModeValue(\"gray.500\", \"gray.200\");\n  let searchIcon = useColorModeValue(\"gray.700\", \"gray.200\");\n\n  if (secondary) {\n    navbarIcon = \"white\";\n    mainText = \"white\";\n  }\n  const settingsRef = React.useRef();\n  const logout = () => {\n   \n  \n     sessionStorage.clear()\n     history.push(\"/auth/singup\");\n\n  };\n  \n  return (\n    <Flex\n      pe={{ sm: \"0px\", md: \"16px\" }}\n      w={{ sm: \"100%\", md: \"auto\" }}\n      alignItems=\"center\"\n      flexDirection=\"row\"\n    >\n   \n\n      <NavLink to=\"/auth/signin\">\n        <Button\n          ms=\"0px\"\n          px=\"0px\"\n          me={{ sm: \"2px\", md: \"16px\" }}\n          color={navbarIcon}\n          onClick={logout}\n          variant=\"transparent-with-icon\"\n          rightIcon={\n            document.documentElement.dir ? (\n              \"\"\n            ) : (\n              <ProfileIcon color={navbarIcon} w=\"22px\" h=\"22px\" me=\"0px\" />\n            )\n          }\n          leftIcon={\n            document.documentElement.dir ? (\n              <ProfileIcon color={navbarIcon} w=\"22px\" h=\"22px\" me=\"0px\" />\n            ) : (\n              \"\"\n            )\n          }\n        >\n          <Text display={{ sm: \"none\", md: \"flex\" }}>Logout</Text>\n        </Button>\n      </NavLink>\n      <SidebarResponsive\n        logoText={props.logoText}\n        secondary={props.secondary}\n        routes={routes}\n        // logo={logo}\n        {...rest}\n      />\n      <SettingsIcon\n        cursor=\"pointer\"\n        ms={{ base: \"16px\", xl: \"0px\" }}\n        me=\"16px\"\n        ref={settingsRef}\n        onClick={props.onOpen}\n        color={navbarIcon}\n        w=\"18px\"\n        h=\"18px\"\n      />\n   \n    </Flex>\n  );\n}\n\nHeaderLinks.propTypes = {\n  variant: PropTypes.string,\n  fixed: PropTypes.bool,\n  secondary: PropTypes.bool,\n  onOpen: PropTypes.func,\n};\n","// Chakra Imports\nimport {\n  Box,\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  Flex,\n  Link,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport AdminNavbarLinks from \"./AdminNavbarLinks\";\n\nexport default function AdminNavbar(props) {\n  const [scrolled, setScrolled] = useState(false);\n  const {\n    variant,\n    children,\n    fixed,\n    secondary,\n    brandText,\n    onOpen,\n    ...rest\n  } = props;\n\n  // Here are all the props that may change depending on navbar's type or state.(secondary, variant, scrolled)\n  let mainText = useColorModeValue(\"gray.700\", \"gray.200\");\n  let secondaryText = useColorModeValue(\"gray.400\", \"gray.200\");\n  let navbarPosition = \"absolute\";\n  let navbarFilter = \"none\";\n  let navbarBackdrop = \"blur(21px)\";\n  let navbarShadow = \"none\";\n  let navbarBg = \"none\";\n  let navbarBorder = \"transparent\";\n  let secondaryMargin = \"0px\";\n  let paddingX = \"15px\";\n  if (props.fixed === true)\n    if (scrolled === true) {\n      navbarPosition = \"fixed\";\n      navbarShadow = useColorModeValue(\n        \"0px 7px 23px rgba(0, 0, 0, 0.05)\",\n        \"none\"\n      );\n      navbarBg = useColorModeValue(\n        \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.82) 0%, rgba(255, 255, 255, 0.8) 110.84%)\",\n        \"linear-gradient(112.83deg, rgba(255, 255, 255, 0.21) 0%, rgba(255, 255, 255, 0) 110.84%)\"\n      );\n      navbarBorder = useColorModeValue(\"#FFFFFF\", \"rgba(255, 255, 255, 0.31)\");\n      navbarFilter = useColorModeValue(\n        \"none\",\n        \"drop-shadow(0px 7px 23px rgba(0, 0, 0, 0.05))\"\n      );\n    }\n  if (props.secondary) {\n    navbarBackdrop = \"none\";\n    navbarPosition = \"absolute\";\n    mainText = \"white\";\n    secondaryText = \"white\";\n    secondaryMargin = \"22px\";\n    paddingX = \"30px\";\n  }\n  const changeNavbar = () => {\n    if (window.scrollY > 1) {\n      setScrolled(true);\n    } else {\n      setScrolled(false);\n    }\n  };\n  window.addEventListener(\"scroll\", changeNavbar);\n  return (\n    <Flex\n      position={navbarPosition}\n      boxShadow={navbarShadow}\n      bg={navbarBg}\n      borderColor={navbarBorder}\n      filter={navbarFilter}\n      backdropFilter={navbarBackdrop}\n      borderWidth=\"1.5px\"\n      borderStyle=\"solid\"\n      transitionDelay=\"0s, 0s, 0s, 0s\"\n      transitionDuration=\" 0.25s, 0.25s, 0.25s, 0s\"\n      transition-property=\"box-shadow, background-color, filter, border\"\n      transitionTimingFunction=\"linear, linear, linear, linear\"\n      alignItems={{ xl: \"center\" }}\n      borderRadius=\"16px\"\n      display=\"flex\"\n      minH=\"75px\"\n      justifyContent={{ xl: \"center\" }}\n      lineHeight=\"25.6px\"\n      mx=\"auto\"\n      mt={secondaryMargin}\n      pb=\"8px\"\n      left={document.documentElement.dir === \"rtl\" ? \"30px\" : \"\"}\n      right={document.documentElement.dir === \"rtl\" ? \"\" : \"30px\"}\n      px={{\n        sm: paddingX,\n        md: \"30px\",\n      }}\n      ps={{\n        xl: \"12px\",\n      }}\n      pt=\"8px\"\n      top=\"18px\"\n      w={{ sm: \"calc(100vw - 30px)\", xl: \"calc(100vw - 75px - 275px)\" }}\n    >\n      <Flex\n        w=\"100%\"\n        flexDirection={{\n          sm: \"column\",\n          md: \"row\",\n        }}\n        alignItems={{ xl: \"center\" }}\n      >\n        <Box mb={{ sm: \"8px\", md: \"0px\" }}>\n          <Breadcrumb>\n            <BreadcrumbItem color={mainText}>\n              <BreadcrumbLink href=\"#\" color={secondaryText}>\n                Pages/\n              </BreadcrumbLink>\n            </BreadcrumbItem>\n\n          </Breadcrumb>\n          {/* Here we create navbar brand, based on route name */}\n          <Link\n            color={mainText}\n            href=\"#\"\n            bg=\"inherit\"\n            borderRadius=\"inherit\"\n            fontWeight=\"bold\"\n            _hover={{ color: { mainText } }}\n            _active={{\n              bg: \"inherit\",\n              transform: \"none\",\n              borderColor: \"transparent\",\n            }}\n            _focus={{\n              boxShadow: \"none\",\n            }}\n          >\n            {brandText}\n          </Link>\n        </Box>\n        <Box ms=\"auto\" w={{ sm: \"100%\", md: \"unset\" }}>\n          <AdminNavbarLinks\n            onOpen={props.onOpen}\n            logoText={props.logoText}\n            secondary={props.secondary}\n            fixed={props.fixed}\n          />\n        </Box>\n      </Flex>\n    </Flex>\n  );\n}\n\nAdminNavbar.propTypes = {\n  brandText: PropTypes.string,\n  variant: PropTypes.string,\n  secondary: PropTypes.bool,\n  fixed: PropTypes.bool,\n  onOpen: PropTypes.func,\n};\n","// Chakra Imports\nimport { Button, useColorModeValue } from \"@chakra-ui/react\";\n// Custom Icons\nimport { SettingsIcon } from \"components/Icons/Icons\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nexport default function FixedPlugin(props) {\n  const { secondary, onChange, onSwitch, fixed, ...rest } = props;\n  // Chakra Color Mode\n  let navbarIcon = useColorModeValue(\"gray.500\", \"gray.200\");\n  let bgButton = useColorModeValue(\"white\", \"gray.600\");\n  let fixedDisplay = \"flex\";\n  if (props.secondary) {\n    fixedDisplay = \"none\";\n  }\n\n  const settingsRef = React.useRef();\n  return (\n    <>\n      <Button\n        h=\"52px\"\n        w=\"52px\"\n        onClick={props.onOpen}\n        bg={bgButton}\n        position=\"fixed\"\n        variant=\"no-hover\"\n        left={document.documentElement.dir === \"rtl\" ? \"30px\" : \"\"}\n        right={document.documentElement.dir === \"rtl\" ? \"\" : \"10px\"}\n        bottom=\"30px\"\n        borderRadius=\"50px\"\n        boxShadow=\"0 2px 12px 0 rgb(0 0 0 / 16%)\"\n      >\n        <SettingsIcon\n          cursor=\"pointer\"\n          ref={settingsRef}\n          color={navbarIcon}\n          w=\"20px\"\n          h=\"20px\"\n        />\n      </Button>\n    </>\n  );\n}\n\nFixedPlugin.propTypes = {\n  fixed: PropTypes.bool,\n  onChange: PropTypes.func,\n  onSwitch: PropTypes.func,\n};\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction MainPanel(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"MainPanel\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default MainPanel;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction PanelContainer(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"PanelContainer\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default PanelContainer;\n","import { Box, useStyleConfig } from \"@chakra-ui/react\";\nfunction PanelContent(props) {\n  const { variant, children, ...rest } = props;\n  const styles = useStyleConfig(\"PanelContent\", { variant });\n  // Pass the computed styles into the `__css` prop\n  return (\n    <Box __css={styles} {...rest}>\n      {children}\n    </Box>\n  );\n}\n\nexport default PanelContent;\n","import { CacheProvider } from \"@emotion/react\";\nimport createCache from \"@emotion/cache\";\nimport rtl from \"stylis-plugin-rtl\";\n// NB: A unique `key` is important for it to work!\nconst options = {\n  rtl: { key: \"css-ar\", stylisPlugins: [rtl] },\n  ltr: { key: \"css-en\" },\n};\nexport function RtlProvider({ children }) {\n  const dir = document.documentElement.dir == \"ar\" ? \"rtl\" : \"ltr\";\n  const cache = createCache(options[dir]);\n  return <CacheProvider value={cache} children={children} />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AuthLayout from \"layouts/Auth.js\";\nimport AdminLayout from \"layouts/Admin.js\";\nimport RTLLayout from \"layouts/RTL.js\";\n\nReactDOM.render(\n  <HashRouter>\n    <Switch>\n      <Route path={`/auth`} component={AuthLayout} />\n      <Route path={`/admin`} component={AdminLayout} />\n      <Route path={`/rtl`} component={RTLLayout} />\n      <Redirect from={`/`} to=\"/auth/signin\" />\n    </Switch>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n","// chakra imports\nimport { Box, ChakraProvider, Portal } from \"@chakra-ui/react\";\nimport Footer from \"components/Footer/Footer.js\";\n// core components\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes2.js\";\nimport theme from \"theme/theme.js\";\n\nexport default function Pages(props) {\n  const { ...rest } = props;\n  // ref for the wrapper div\n  const wrapper = React.createRef();\n  React.useEffect(() => {\n    document.body.style.overflow = \"unset\";\n    // Specify how to clean up after this effect:\n    return function cleanup() {};\n  });\n  const getActiveRoute = (routes) => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const navRef = React.useRef();\n  document.documentElement.dir = \"ltr\";\n  return (\n    <ChakraProvider theme={theme} resetCss={false} w=\"100%\">\n      <Box ref={navRef} w=\"100%\">\n    \n        <Box w=\"100%\">\n          <Box ref={wrapper} w=\"100%\">\n            <Switch>\n              {getRoutes(routes)}\n              <Redirect from=\"/auth\" to=\"/auth/signin\" />\n            </Switch>\n          </Box>\n        </Box>\n        <Box px=\"24px\" mx=\"auto\" width=\"1044px\" maxW=\"100%\">\n          <Footer />\n        </Box>\n      </Box>\n    </ChakraProvider>\n  );\n}\n","// Chakra imports\nimport { ChakraProvider, Portal, useDisclosure } from \"@chakra-ui/react\";\nimport Configurator from \"components/Configurator/Configurator\";\nimport Footer from \"components/Footer/Footer.js\";\n// Layout components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes.js\";\n//import routesEmployes from \"routesEmploye.js\"\n// Custom Chakra theme\nimport theme from \"theme/theme.js\";\nimport FixedPlugin from \"../components/FixedPlugin/FixedPlugin\";\n// Custom components\nimport MainPanel from \"../components/Layout/MainPanel\";\nimport PanelContainer from \"../components/Layout/PanelContainer\";\nimport PanelContent from \"../components/Layout/PanelContent\";\nexport default function Dashboard(props) {\n  const { ...rest } = props;\n  // states and functions\n  const [sidebarVariant, setSidebarVariant] = useState(\"transparent\");\n  const [fixed, setFixed] = useState(false);\n  // ref for main panel div\n  const mainPanel = React.createRef();\n  // functions for changing the states from components\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin/full-screen-maps\";\n  };\n \n \n    const getActiveRoute = () => {\n     \n      let activeRoute = \"Default Brand Text\";\n      for (let i = 0; i < routes.length; i++) {\n        if (routes[i].collapse) {\n          let collapseActiveRoute = getActiveRoute(routes[i].views);\n          if (collapseActiveRoute !== activeRoute) {\n            return collapseActiveRoute;\n          }\n        } else if (routes[i].category) {\n          let categoryActiveRoute = getActiveRoute(routes[i].views);\n          if (categoryActiveRoute !== activeRoute) {\n            return categoryActiveRoute;\n          }\n        } else {\n          if (\n            window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n          ) {\n            return routes[i].name;\n          }\n        }\n    }\n    return activeRoute;\n    };\n  /*else {\n    const getActiveRoute = () => {\n      let activeRoute = \"Default Brand Text\";\n      for (let i = 0; i < routesEmployes.length; i++) {\n        if (routesEmployes[i].collapse) {\n          let collapseActiveRoute = getActiveRoute(routesEmployes[i].views);\n          if (collapseActiveRoute !== activeRoute) {\n            return collapseActiveRoute;\n          }\n        } else if (routesEmployes[i].category) {\n          let categoryActiveRoute = getActiveRoute(routesEmployes[i].views);\n          if (categoryActiveRoute !== activeRoute) {\n            return categoryActiveRoute;\n          }\n        } else {\n          if (\n            window.location.href.indexOf(routesEmployes[i].layout + routesEmployes[i].path) !== -1\n          ) {\n            return routesEmployes[i].name;\n          }\n        }\n      }\n      return activeRoute;\n    };\n  }*/\n \n  // This changes navbar state(fixed or not)\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  document.documentElement.dir = \"ltr\";\n  // Chakra Color Mode\n  return (\n    <ChakraProvider theme={theme} resetCss={false}>\n      <Sidebar\n        routes={routes}\n        logoText={\"InterX\"}\n        display=\"none\"\n        sidebarVariant={sidebarVariant}\n        {...rest}\n      />\n      <MainPanel\n        ref={mainPanel}\n        w={{\n          base: \"100%\",\n          xl: \"calc(100% - 275px)\",\n        }}\n      >\n        <Portal>\n          <AdminNavbar\n            onOpen={onOpen}\n            logoText={\"DASHBOARD\"}\n            brandText={getActiveRoute()}\n            secondary={getActiveNavbar(routes)}\n            fixed={fixed}\n            {...rest}\n          />\n        </Portal>\n        {getRoute() ? (\n          <PanelContent>\n            <PanelContainer>\n              <Switch>\n                {getRoutes(routes)}\n                <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n              </Switch>\n            </PanelContainer>\n          </PanelContent>\n        ) : null}\n        <Footer />\n        <Portal>\n          <FixedPlugin\n            secondary={getActiveNavbar(routes)}\n            fixed={fixed}\n            onOpen={onOpen}\n          />\n        </Portal>\n        <Configurator\n          secondary={getActiveNavbar(routes)}\n          isOpen={isOpen}\n          onClose={onClose}\n          isChecked={fixed}\n          onSwitch={(value) => {\n            setFixed(value);\n          }}\n          onOpaque={() => setSidebarVariant(\"opaque\")}\n          onTransparent={() => setSidebarVariant(\"transparent\")}\n        />\n      </MainPanel>\n    </ChakraProvider>\n  );\n}\n","// Chakra imports\nimport { ChakraProvider, Portal, useDisclosure } from \"@chakra-ui/react\";\nimport { RtlProvider } from \"components/RTLProvider/RTLProvider\";\nimport Configurator from \"components/Configurator/Configurator\";\nimport Footer from \"components/Footer/Footer.js\";\n// Layout components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport routes from \"routes.js\";\n// Custom Chakra theme\nimport theme from \"theme/theme.js\";\nimport FixedPlugin from \"../components/FixedPlugin/FixedPlugin\";\n// Custom components\nimport MainPanel from \"../components/Layout/MainPanel\";\nimport PanelContainer from \"../components/Layout/PanelContainer\";\nimport PanelContent from \"../components/Layout/PanelContent\";\nexport default function Dashboard(props) {\n  const { ...rest } = props;\n  // states and functions\n  const [sidebarVariant, setSidebarVariant] = useState(\"transparent\");\n  const [fixed, setFixed] = useState(false);\n  // ref for main panel div\n  const mainPanel = React.createRef();\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin/full-screen-maps\";\n  };\n  const getActiveRoute = (routes) => {\n    let activeRoute = \"Default Brand Text\";\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse) {\n        let collapseActiveRoute = getActiveRoute(routes[i].views);\n        if (collapseActiveRoute !== activeRoute) {\n          return collapseActiveRoute;\n        }\n      } else if (routes[i].category) {\n        let categoryActiveRoute = getActiveRoute(routes[i].views);\n        if (categoryActiveRoute !== activeRoute) {\n          return categoryActiveRoute;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          return routes[i].name;\n        }\n      }\n    }\n    return activeRoute;\n  };\n  // This changes navbar state(fixed or not)\n  const getActiveNavbar = (routes) => {\n    let activeNavbar = false;\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].category) {\n        let categoryActiveNavbar = getActiveNavbar(routes[i].views);\n        if (categoryActiveNavbar !== activeNavbar) {\n          return categoryActiveNavbar;\n        }\n      } else {\n        if (\n          window.location.href.indexOf(routes[i].layout + routes[i].path) !== -1\n        ) {\n          if (routes[i].secondaryNavbar) {\n            return routes[i].secondaryNavbar;\n          }\n        }\n      }\n    }\n    return activeNavbar;\n  };\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.category === \"account\") {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/rtl\" || prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  document.documentElement.dir = \"rtl\";\n  // Chakra Color Mode\n  return (\n    <ChakraProvider theme={theme} resetCss={false}>\n      <RtlProvider>\n        <Sidebar\n          routes={routes}\n          logoText={\"InterX\"}\n          display=\"none\"\n          sidebarVariant={sidebarVariant}\n          {...rest}\n        />\n        <MainPanel\n          variant=\"rtl\"\n          ref={mainPanel}\n          w={{\n            base: \"100%\",\n            xl: \"calc(100% - 275px)\",\n          }}\n        >\n          <Portal>\n            <AdminNavbar\n              onOpen={onOpen}\n              logoText={\"InterX\"}\n              brandText={getActiveRoute(routes)}\n              secondary={getActiveNavbar(routes)}\n              fixed={fixed}\n              {...rest}\n            />\n          </Portal>\n          {getRoute() ? (\n            <PanelContent>\n              <PanelContainer>\n                <Switch>\n                  {getRoutes(routes)}\n                  <Redirect from=\"/rtl\" to=\"/rtl/rtl-support-page\" />\n                </Switch>\n              </PanelContainer>\n            </PanelContent>\n          ) : null}\n          <Footer />\n          <Portal>\n            <FixedPlugin\n              secondary={getActiveNavbar(routes)}\n              fixed={fixed}\n              onOpen={onOpen}\n            />\n          </Portal>\n          <Configurator\n            secondary={getActiveNavbar(routes)}\n            isOpen={isOpen}\n            onClose={onClose}\n            isChecked={fixed}\n            onSwitch={(value) => {\n              setFixed(value);\n            }}\n            onOpaque={() => setSidebarVariant(\"opaque\")}\n            onTransparent={() => setSidebarVariant(\"transparent\")}\n          />\n        </MainPanel>\n      </RtlProvider>\n    </ChakraProvider>\n  );\n}\n"],"sourceRoot":""}